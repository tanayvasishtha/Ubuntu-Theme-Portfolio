{
  "name": "project",
  "type": "registry:block",
  "dependencies": [
    "@hookform/resolvers",
    "@radix-ui/react-accordion",
    "@radix-ui/react-alert-dialog",
    "@radix-ui/react-aspect-ratio",
    "@radix-ui/react-avatar",
    "@radix-ui/react-checkbox",
    "@radix-ui/react-collapsible",
    "@radix-ui/react-context-menu",
    "@radix-ui/react-dialog",
    "@radix-ui/react-dropdown-menu",
    "@radix-ui/react-hover-card",
    "@radix-ui/react-label",
    "@radix-ui/react-menubar",
    "@radix-ui/react-navigation-menu",
    "@radix-ui/react-popover",
    "@radix-ui/react-progress",
    "@radix-ui/react-radio-group",
    "@radix-ui/react-scroll-area",
    "@radix-ui/react-select",
    "@radix-ui/react-separator",
    "@radix-ui/react-slider",
    "@radix-ui/react-slot",
    "@radix-ui/react-switch",
    "@radix-ui/react-tabs",
    "@radix-ui/react-toast",
    "@radix-ui/react-toggle",
    "@radix-ui/react-toggle-group",
    "@radix-ui/react-tooltip",
    "@vercel/analytics",
    "autoprefixer",
    "cmdk",
    "date-fns",
    "embla-carousel-react",
    "geist",
    "input-otp",
    "lucide-react",
    "next-themes",
    "react-day-picker",
    "react-hook-form",
    "react-resizable-panels",
    "recharts",
    "sonner",
    "tailwindcss-animate",
    "vaul",
    "zod"
  ],
  "devDependencies": ["postcss", "tw-animate-css"],
  "registryDependencies": [
    "accordion",
    "alert",
    "alert-dialog",
    "aspect-ratio",
    "avatar",
    "badge",
    "breadcrumb",
    "button",
    "calendar",
    "card",
    "carousel",
    "chart",
    "checkbox",
    "collapsible",
    "command",
    "context-menu",
    "dialog",
    "drawer",
    "dropdown-menu",
    "form",
    "hover-card",
    "input",
    "input-otp",
    "label",
    "menubar",
    "navigation-menu",
    "pagination",
    "popover",
    "progress",
    "radio-group",
    "resizable",
    "scroll-area",
    "select",
    "separator",
    "sheet",
    "sidebar",
    "skeleton",
    "slider",
    "sonner",
    "switch",
    "table",
    "tabs",
    "textarea",
    "toggle",
    "toggle-group",
    "tooltip"
  ],
  "files": [
    {
      "path": "app\\globals.css",
      "content": "@import \"tailwindcss\";\r\n@import \"tw-animate-css\";\r\n\r\n@custom-variant dark (&:is(.dark *));\r\n\r\n:root {\r\n  /* Updated color tokens to match Ubuntu theme with orange primary and terminal aesthetics */\r\n  --background: oklch(1 0 0);\r\n  /* White background */\r\n  --foreground: oklch(0.2 0 0);\r\n  /* Dark gray text */\r\n  --card: oklch(0.97 0 0);\r\n  /* Light gray card background */\r\n  --card-foreground: oklch(0.3 0 0);\r\n  /* Medium gray card text */\r\n  --popover: oklch(1 0 0);\r\n  /* White popover */\r\n  --popover-foreground: oklch(0.2 0 0);\r\n  /* Dark gray popover text */\r\n  --primary: oklch(0.6 0.2 35);\r\n  /* Ubuntu Orange #E95420 */\r\n  --primary-foreground: oklch(1 0 0);\r\n  /* White text on orange */\r\n  --secondary: oklch(0.97 0 0);\r\n  /* Light gray secondary */\r\n  --secondary-foreground: oklch(0.2 0 0);\r\n  /* Dark gray secondary text */\r\n  --muted: oklch(0.97 0 0);\r\n  /* Light gray muted */\r\n  --muted-foreground: oklch(0.3 0 0);\r\n  /* Medium gray muted text */\r\n  --accent: oklch(0.3 0 0);\r\n  /* Medium gray accent */\r\n  --accent-foreground: oklch(1 0 0);\r\n  /* White accent text */\r\n  --destructive: oklch(0.6 0.2 15);\r\n  /* Red destructive */\r\n  --destructive-foreground: oklch(1 0 0);\r\n  /* White destructive text */\r\n  --border: oklch(0.9 0 0);\r\n  /* Light border */\r\n  --input: oklch(1 0 0);\r\n  /* White input */\r\n  --ring: oklch(0.6 0.2 35);\r\n  /* Ubuntu Orange ring */\r\n  --chart-1: oklch(0.6 0.2 35);\r\n  /* Ubuntu Orange chart */\r\n  --chart-2: oklch(0.97 0 0);\r\n  /* Light gray chart */\r\n  --chart-3: oklch(0.2 0 0);\r\n  /* Dark gray chart */\r\n  --chart-4: oklch(0.3 0 0);\r\n  /* Medium gray chart */\r\n  --chart-5: oklch(1 0 0);\r\n  /* White chart */\r\n  --radius: 0.5rem;\r\n  /* Slightly smaller radius for terminal feel */\r\n  --sidebar: oklch(0.97 0 0);\r\n  /* Light gray sidebar */\r\n  --sidebar-foreground: oklch(0.2 0 0);\r\n  /* Dark gray sidebar text */\r\n  --sidebar-primary: oklch(0.6 0.2 35);\r\n  /* Ubuntu Orange sidebar primary */\r\n  --sidebar-primary-foreground: oklch(1 0 0);\r\n  /* White sidebar primary text */\r\n  --sidebar-accent: oklch(0.3 0 0);\r\n  /* Medium gray sidebar accent */\r\n  --sidebar-accent-foreground: oklch(1 0 0);\r\n  /* White sidebar accent text */\r\n  --sidebar-border: oklch(0.9 0 0);\r\n  /* Light sidebar border */\r\n  --sidebar-ring: oklch(0.6 0.2 35);\r\n  /* Ubuntu Orange sidebar ring */\r\n  --font-ubuntu: \"Ubuntu\", sans-serif;\r\n  --font-mono: \"Ubuntu Mono\", monospace;\r\n}\r\n\r\n.dark {\r\n  /* Updated dark mode colors for Ubuntu terminal aesthetic */\r\n  --background: oklch(0.15 0 0);\r\n  /* Dark terminal background */\r\n  --foreground: oklch(0.95 0 0);\r\n  /* Light terminal text */\r\n  --card: oklch(0.18 0 0);\r\n  /* Slightly lighter card background */\r\n  --card-foreground: oklch(0.95 0 0);\r\n  /* Light card text */\r\n  --popover: oklch(0.15 0 0);\r\n  /* Dark popover */\r\n  --popover-foreground: oklch(0.95 0 0);\r\n  /* Light popover text */\r\n  --primary: oklch(0.6 0.2 35);\r\n  /* Ubuntu Orange remains same */\r\n  --primary-foreground: oklch(1 0 0);\r\n  /* White text on orange */\r\n  --secondary: oklch(0.25 0 0);\r\n  /* Dark gray secondary */\r\n  --secondary-foreground: oklch(0.95 0 0);\r\n  /* Light secondary text */\r\n  --muted: oklch(0.25 0 0);\r\n  /* Dark gray muted */\r\n  --muted-foreground: oklch(0.7 0 0);\r\n  /* Medium light muted text */\r\n  --accent: oklch(0.25 0 0);\r\n  /* Dark gray accent */\r\n  --accent-foreground: oklch(0.95 0 0);\r\n  /* Light accent text */\r\n  --destructive: oklch(0.5 0.2 15);\r\n  /* Darker red destructive */\r\n  --destructive-foreground: oklch(0.95 0 0);\r\n  /* Light destructive text */\r\n  --border: oklch(0.25 0 0);\r\n  /* Dark border */\r\n  --input: oklch(0.25 0 0);\r\n  /* Dark input */\r\n  --ring: oklch(0.6 0.2 35);\r\n  /* Ubuntu Orange ring */\r\n  --chart-1: oklch(0.6 0.2 35);\r\n  /* Ubuntu Orange chart */\r\n  --chart-2: oklch(0.7 0.15 180);\r\n  /* Blue chart */\r\n  --chart-3: oklch(0.8 0.15 120);\r\n  /* Green chart */\r\n  --chart-4: oklch(0.65 0.2 300);\r\n  /* Purple chart */\r\n  --chart-5: oklch(0.7 0.2 60);\r\n  /* Yellow chart */\r\n  --sidebar: oklch(0.18 0 0);\r\n  /* Dark sidebar */\r\n  --sidebar-foreground: oklch(0.95 0 0);\r\n  /* Light sidebar text */\r\n  --sidebar-primary: oklch(0.6 0.2 35);\r\n  /* Ubuntu Orange sidebar primary */\r\n  --sidebar-primary-foreground: oklch(1 0 0);\r\n  /* White sidebar primary text */\r\n  --sidebar-accent: oklch(0.25 0 0);\r\n  /* Dark sidebar accent */\r\n  --sidebar-accent-foreground: oklch(0.95 0 0);\r\n  /* Light sidebar accent text */\r\n  --sidebar-border: oklch(0.25 0 0);\r\n  /* Dark sidebar border */\r\n  --sidebar-ring: oklch(0.6 0.2 35);\r\n  /* Ubuntu Orange sidebar ring */\r\n}\r\n\r\n@theme inline {\r\n  /* Updated font variables to use Ubuntu fonts */\r\n  --font-sans: var(--font-ubuntu);\r\n  --font-mono: var(--font-mono);\r\n  --color-background: var(--background);\r\n  --color-foreground: var(--foreground);\r\n  --color-card: var(--card);\r\n  --color-card-foreground: var(--card-foreground);\r\n  --color-popover: var(--popover);\r\n  --color-popover-foreground: var(--popover-foreground);\r\n  --color-primary: var(--primary);\r\n  --color-primary-foreground: var(--primary-foreground);\r\n  --color-secondary: var(--secondary);\r\n  --color-secondary-foreground: var(--secondary-foreground);\r\n  --color-muted: var(--muted);\r\n  --color-muted-foreground: var(--muted-foreground);\r\n  --color-accent: var(--accent);\r\n  --color-accent-foreground: var(--accent-foreground);\r\n  --color-destructive: var(--destructive);\r\n  --color-destructive-foreground: var(--destructive-foreground);\r\n  --color-border: var(--border);\r\n  --color-input: var(--input);\r\n  --color-ring: var(--ring);\r\n  --color-chart-1: var(--chart-1);\r\n  --color-chart-2: var(--chart-2);\r\n  --color-chart-3: var(--chart-3);\r\n  --color-chart-4: var(--chart-4);\r\n  --color-chart-5: var(--chart-5);\r\n  --radius-sm: calc(var(--radius) - 4px);\r\n  --radius-md: calc(var(--radius) - 2px);\r\n  --radius-lg: var(--radius);\r\n  --radius-xl: calc(var(--radius) + 4px);\r\n  --color-sidebar: var(--sidebar);\r\n  --color-sidebar-foreground: var(--sidebar-foreground);\r\n  --color-sidebar-primary: var(--sidebar-primary);\r\n  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);\r\n  --color-sidebar-accent: var(--sidebar-accent);\r\n  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);\r\n  --color-sidebar-border: var(--sidebar-border);\r\n  --color-sidebar-ring: var(--sidebar-ring);\r\n}\r\n\r\n@layer base {\r\n  * {\r\n    @apply border-border outline-ring/50;\r\n  }\r\n\r\n  body {\r\n    @apply bg-background text-foreground;\r\n  }\r\n\r\n  /* Added Ubuntu-specific terminal styling */\r\n  .terminal {\r\n    @apply font-mono bg-card text-card-foreground rounded-lg border border-border;\r\n  }\r\n\r\n  .ubuntu-orange {\r\n    color: oklch(0.6 0.2 35);\r\n  }\r\n\r\n  .terminal-prompt::before {\r\n    content: \"$ \";\r\n    @apply text-primary font-bold;\r\n  }\r\n}\r\n\r\n/* Terminal Styles inspired by fkcodes.com */\r\n.terminal-container {\r\n  background: #000;\r\n  color: #04ff00;\r\n  font-family: ui-monospace, Consolas, \"Cascadia Mono\", Menlo, Monaco, \"SFMono-Regular\", \"Liberation Mono\", \"Courier New\", monospace;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n}\r\n\r\n.terminal-container .index {\r\n  color: #04ff00;\r\n  font-weight: bold;\r\n}\r\n\r\n.terminal-container .color2 {\r\n  color: #04ff00;\r\n}\r\n\r\n.terminal-container .command {\r\n  color: #04ff00;\r\n  font-weight: bold;\r\n}\r\n\r\n.terminal-container .error {\r\n  color: #ff0000;\r\n}\r\n\r\n.terminal-container .inherit {\r\n  color: #04ff00;\r\n}\r\n\r\n.terminal-container .margin {\r\n  margin-left: 20px;\r\n}\r\n\r\n.terminal-container .no-animation {\r\n  color: #04ff00;\r\n}\r\n\r\n.terminal-container a {\r\n  color: #04ff00;\r\n  text-decoration: underline;\r\n}\r\n\r\n.terminal-container a:hover {\r\n  color: #ffffff;\r\n}\r\n\r\n.terminal-container p {\r\n  margin: 0;\r\n  padding: 0;\r\n  white-space: pre;\r\n  /* preserve all spaces exactly as typed */\r\n  font-variant-ligatures: none;\r\n  /* avoid ligature width changes */\r\n  letter-spacing: 0;\r\n  tab-size: 4;\r\n}\r\n\r\n/* Preserve spacing for ASCII lines rendered as <pre> and tighten vertical rhythm */\r\n.terminal-container pre {\r\n  margin: 0;\r\n  padding: 0;\r\n  white-space: pre;\r\n  line-height: 1.15;\r\n  font-variant-ligatures: none;\r\n}\r\n\r\n.terminal-container .cursor {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 10px;\r\n  height: 20px;\r\n  background-color: #04ff00;\r\n  animation: blink 1s infinite;\r\n}\r\n\r\n@keyframes blink {\r\n\r\n  0%,\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n\r\n  51%,\r\n  100% {\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.terminal-container .password {\r\n  background-color: #ff0000;\r\n}\r\n\r\n.terminal-container input {\r\n  background: transparent;\r\n  border: none;\r\n  outline: none;\r\n  color: #04ff00;\r\n  font-family: 'Courier New', monospace;\r\n  font-size: 14px;\r\n  width: 100%;\r\n}\r\n\r\n.terminal-container input::placeholder {\r\n  color: #04ff00;\r\n  opacity: 0.7;\r\n}\r\n\r\n/* Fix scrollbar positioning in terminal */\r\n.terminal-container .overflow-y-auto {\r\n  scrollbar-width: thin;\r\n  scrollbar-color: #666 #000;\r\n}\r\n\r\n.terminal-container .overflow-y-auto::-webkit-scrollbar {\r\n  width: 8px;\r\n}\r\n\r\n.terminal-container .overflow-y-auto::-webkit-scrollbar-track {\r\n  background: #000;\r\n}\r\n\r\n.terminal-container .overflow-y-auto::-webkit-scrollbar-thumb {\r\n  background: #666;\r\n  border-radius: 4px;\r\n}\r\n\r\n.terminal-container .overflow-y-auto::-webkit-scrollbar-thumb:hover {\r\n  background: #888;\r\n}\r\n",
      "type": "registry:block",
      "target": "app\\globals.css"
    },
    {
      "path": "app\\layout.tsx",
      "content": "import type React from \"react\";\r\nimport type { Metadata, Viewport } from \"next\";\r\nimport { Ubuntu, JetBrains_Mono } from \"next/font/google\";\r\nimport \"./globals.css\";\r\nimport PWARegister from \"@/components/PWARegister\";\r\n\r\nconst ubuntu = Ubuntu({\r\n  subsets: [\"latin\"],\r\n  weight: [\"300\", \"400\", \"500\", \"700\"],\r\n  variable: \"--font-ubuntu\",\r\n  display: \"swap\",\r\n});\r\n\r\nconst jetbrainsMono = JetBrains_Mono({\r\n  subsets: [\"latin\"],\r\n  variable: \"--font-mono\",\r\n  display: \"swap\",\r\n});\r\n\r\nexport const metadata: Metadata = {\r\n  title: \"Ubuntu Portfolio | Developer Desktop\",\r\n  description:\r\n    \"Interactive Ubuntu-themed portfolio showcasing development projects and skills\",\r\n  generator: \"v0.app\",\r\n  manifest: \"/manifest.webmanifest\",\r\n  appleWebApp: {\r\n    capable: true,\r\n    statusBarStyle: \"default\",\r\n    title: \"Ubuntu Portfolio\",\r\n  },\r\n  applicationName: \"Ubuntu Portfolio\",\r\n  formatDetection: {\r\n    telephone: false,\r\n  },\r\n  icons: {\r\n    icon: [\r\n      { url: \"/icon-192x192.png\", sizes: \"192x192\", type: \"image/png\" },\r\n      { url: \"/icon-512x512.png\", sizes: \"512x512\", type: \"image/png\" },\r\n    ],\r\n    apple: [\r\n      { url: \"/apple-touch-icon.png\", sizes: \"180x180\", type: \"image/png\" },\r\n    ],\r\n  },\r\n};\r\n\r\nexport const viewport: Viewport = {\r\n  themeColor: \"#E95420\",\r\n  width: \"device-width\",\r\n  initialScale: 1,\r\n  maximumScale: 5,\r\n  userScalable: true,\r\n};\r\n\r\nexport default function RootLayout({\r\n  children,\r\n}: Readonly<{\r\n  children: React.ReactNode;\r\n}>) {\r\n  return (\r\n    <html lang=\"en\" className={`${ubuntu.variable} ${jetbrainsMono.variable}`}>\r\n      <head>\r\n        <link rel=\"icon\" href=\"/ubuntu-logo-circle.png\" />\r\n        <link rel=\"apple-touch-icon\" href=\"/apple-touch-icon.png\" />\r\n      </head>\r\n      <body className=\"font-sans antialiased dark\">\r\n        {children}\r\n        <PWARegister />\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n",
      "type": "registry:component",
      "target": "app\\layout.tsx"
    },
    {
      "path": "app\\manifest.ts",
      "content": "import type { MetadataRoute } from \"next\";\r\n\r\nexport default function manifest(): MetadataRoute.Manifest {\r\n  return {\r\n    name: \"Ubuntu Portfolio | Developer Desktop\",\r\n    short_name: \"Ubuntu Portfolio\",\r\n    description:\r\n      \"Interactive Ubuntu-themed portfolio showcasing development projects and skills\",\r\n    start_url: \"/\",\r\n    display: \"standalone\",\r\n    background_color: \"#2C001E\",\r\n    theme_color: \"#E95420\",\r\n    orientation: \"portrait-primary\",\r\n    icons: [\r\n      {\r\n        src: \"/icon-192x192.png\",\r\n        sizes: \"192x192\",\r\n        type: \"image/png\",\r\n        purpose: \"maskable\",\r\n      },\r\n      {\r\n        src: \"/icon-512x512.png\",\r\n        sizes: \"512x512\",\r\n        type: \"image/png\",\r\n        purpose: \"maskable\",\r\n      },\r\n      {\r\n        src: \"/icon-192x192.png\",\r\n        sizes: \"192x192\",\r\n        type: \"image/png\",\r\n        purpose: \"any\",\r\n      },\r\n      {\r\n        src: \"/icon-512x512.png\",\r\n        sizes: \"512x512\",\r\n        type: \"image/png\",\r\n        purpose: \"any\",\r\n      },\r\n    ],\r\n  };\r\n}\r\n",
      "type": "registry:block",
      "target": "app\\manifest.ts"
    },
    {
      "path": "app\\page.tsx",
      "content": "\"use client\"\r\n\r\nimport React, { useState, useRef, useEffect, useMemo } from \"react\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport TerminalComponent from \"@/components/TerminalComponent\"\r\nimport {\r\n  Terminal,\r\n  Folder,\r\n  FileText,\r\n  User,\r\n  Code,\r\n  Mail,\r\n  ImageIcon,\r\n  Settings,\r\n  Github,\r\n  Linkedin,\r\n  Download,\r\n  ExternalLink,\r\n  Minus,\r\n  Square,\r\n  X,\r\n  Home,\r\n  Search,\r\n  Trash2,\r\n  HardDrive,\r\n  HelpCircle,\r\n  Monitor,\r\n  Coffee,\r\n  BookOpen,\r\n  Zap,\r\n  Star,\r\n  Calculator,\r\n  Music,\r\n  Image,\r\n  Globe,\r\n  Camera,\r\n  ChevronLeft,\r\n  ChevronRight,\r\n  Play,\r\n  Pause,\r\n  SkipBack,\r\n  SkipForward,\r\n  Volume2,\r\n  Shuffle,\r\n  Repeat,\r\n  Bookmark,\r\n  BookmarkCheck,\r\n  Phone,\r\n  MapPin\r\n} from \"lucide-react\"\r\n\r\n// Custom X Logo Component\r\nconst XLogo = ({ className }: { className?: string }) => (\r\n  <svg viewBox=\"0 0 24 24\" className={className} fill=\"currentColor\">\r\n    <path d=\"M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z\" />\r\n  </svg>\r\n)\r\n\r\nconst UbuntuLoadingScreen = ({ onLoadingComplete }: { onLoadingComplete: () => void }) => {\r\n  const [loadingProgress, setLoadingProgress] = useState(0)\r\n  const [loadingText, setLoadingText] = useState(\"Starting Ubuntu...\")\r\n\r\n  useEffect(() => {\r\n    const loadingSteps = [\r\n      { progress: 20, text: \"Loading kernel modules...\" },\r\n      { progress: 40, text: \"Starting system services...\" },\r\n      { progress: 60, text: \"Initializing desktop environment...\" },\r\n      { progress: 80, text: \"Loading user interface...\" },\r\n      { progress: 95, text: \"Almost ready...\" },\r\n      { progress: 100, text: \"Welcome to Ubuntu!\" },\r\n    ]\r\n\r\n    let currentStep = 0\r\n    const progressTimer = setInterval(() => {\r\n      if (currentStep < loadingSteps.length) {\r\n        const step = loadingSteps[currentStep]\r\n        setLoadingProgress(step.progress)\r\n        setLoadingText(step.text)\r\n        currentStep++\r\n      } else {\r\n        clearInterval(progressTimer)\r\n        setTimeout(() => onLoadingComplete(), 800)\r\n      }\r\n    }, 300)\r\n\r\n    return () => {\r\n      clearInterval(progressTimer)\r\n    }\r\n  }, [onLoadingComplete])\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black z-50 flex flex-col items-center justify-center\">\r\n      {/* Ubuntu Logo with pulsing animation */}\r\n      <div className=\"mb-8 animate-pulse\">\r\n        <img\r\n          src=\"/ubuntu-logo-circle.png\"\r\n          alt=\"Ubuntu\"\r\n          className=\"w-32 h-32 drop-shadow-2xl\"\r\n        />\r\n      </div>\r\n\r\n      {/* Loading dots animation */}\r\n      <div className=\"flex space-x-2 mb-6\">\r\n        {[0, 1, 2].map((i) => (\r\n          <div\r\n            key={i}\r\n            className=\"w-3 h-3 bg-[#E95420] rounded-full animate-bounce\"\r\n            style={{ animationDelay: `${i * 0.2}s` }}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {/* Progress bar */}\r\n      <div className=\"w-80 h-2 bg-gray-800 rounded-full overflow-hidden mb-4\">\r\n        <div\r\n          className=\"h-full bg-gradient-to-r from-[#E95420] to-[#F7A072] transition-all duration-300 ease-out\"\r\n          style={{ width: `${loadingProgress}%` }}\r\n        />\r\n      </div>\r\n\r\n      {/* Loading text */}\r\n      <p className=\"text-white text-lg font-light mb-2\">{loadingText}</p>\r\n      <p className=\"text-gray-400 text-sm\">{loadingProgress}%</p>\r\n\r\n      {/* Ubuntu branding */}\r\n      <div className=\"absolute bottom-8 left-8 flex items-center gap-3\">\r\n        <img src=\"/ubuntu-logo-official.png\" alt=\"Ubuntu\" className=\"w-8 h-8\" />\r\n        <span className=\"text-white text-xl font-light\">Ubuntu</span>\r\n      </div>\r\n\r\n      {/* Version info */}\r\n      <div className=\"absolute bottom-8 right-8 text-gray-500 text-sm\">\r\n        Ubuntu 22.04.3 LTS\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface Window {\r\n  id: string\r\n  title: string\r\n  component: React.ReactNode\r\n  position: { x: number; y: number }\r\n  size: { width: number; height: number }\r\n  isMinimized: boolean\r\n  isMaximized: boolean\r\n  zIndex: number\r\n}\r\n\r\ninterface DesktopIcon {\r\n  id: string\r\n  name: string\r\n  icon: React.ReactNode\r\n  position: { x: number; y: number }\r\n  action: () => void\r\n}\r\n\r\ninterface DragState {\r\n  isDragging: boolean\r\n  draggedIcon: string | null\r\n  offset: { x: number; y: number }\r\n}\r\n\r\nexport default function UbuntuPortfolio() {\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [currentTime, setCurrentTime] = useState(\"\")\r\n  const [isClient, setIsClient] = useState(false)\r\n  const [currentWallpaper, setCurrentWallpaper] = useState(\"/assets/wallpapers/ubuntu-wallpaper.jpg\")\r\n  const [notifications, setNotifications] = useState<Array<{ id: string, message: string, type: 'info' | 'success' | 'warning' | 'error' }>>([])\r\n\r\n\r\n  // Ubuntu-style sound effects (visual feedback)\r\n  const playClickSound = () => {\r\n    // Visual feedback for clicks\r\n    const clickEffect = document.createElement('div')\r\n    clickEffect.className = 'fixed inset-0 pointer-events-none z-50'\r\n    clickEffect.innerHTML = '<div class=\"w-2 h-2 bg-white rounded-full animate-ping absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"></div>'\r\n    document.body.appendChild(clickEffect)\r\n    setTimeout(() => clickEffect.remove(), 300)\r\n  }\r\n\r\n  const playHoverSound = () => {\r\n    // Subtle hover effect\r\n    const hoverEffect = document.createElement('div')\r\n    hoverEffect.className = 'fixed inset-0 pointer-events-none z-40'\r\n    hoverEffect.innerHTML = '<div class=\"w-1 h-1 bg-white/50 rounded-full animate-pulse absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"></div>'\r\n    document.body.appendChild(hoverEffect)\r\n    setTimeout(() => hoverEffect.remove(), 200)\r\n  }\r\n\r\n  // Ubuntu-style notification system\r\n  const showNotification = (message: string, type: 'info' | 'success' | 'warning' | 'error' = 'info') => {\r\n    const id = Date.now().toString()\r\n    setNotifications(prev => [...prev, { id, message, type }])\r\n    setTimeout(() => {\r\n      setNotifications(prev => prev.filter(n => n.id !== id))\r\n    }, 4000)\r\n  }\r\n  const [windows, setWindows] = useState<Window[]>([])\r\n  const [nextZIndex, setNextZIndex] = useState(1000)\r\n  const [draggedIcon, setDraggedIcon] = useState<string | null>(null)\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 })\r\n  const [draggedWindow, setDraggedWindow] = useState<string | null>(null)\r\n  const [windowDragOffset, setWindowDragOffset] = useState({ x: 0, y: 0 })\r\n  const [iconPositions, setIconPositions] = useState<Record<string, { x: number; y: number }>>({\r\n    terminal: { x: 100, y: 100 },\r\n    projects: { x: 100, y: 180 },\r\n    notepad: { x: 100, y: 260 },\r\n    about: { x: 100, y: 340 },\r\n    skills: { x: 100, y: 420 },\r\n    contact: { x: 250, y: 100 },\r\n    gallery: { x: 250, y: 180 },\r\n    settings: { x: 250, y: 260 },\r\n  })\r\n  const [terminalHistory, setTerminalHistory] = useState<string[]>([\r\n    \"Ubuntu 22.04.3 LTS ubuntu-developer tty1\",\r\n    \"\",\r\n    \"ubuntu-developer login: portfolio\",\r\n    \"Welcome to Ubuntu Portfolio Desktop!\",\r\n    'Type \"help\" for available commands.',\r\n    \"\",\r\n  ])\r\n  const [terminalInput, setTerminalInput] = useState(\"\")\r\n  const terminalRef = useRef<HTMLDivElement>(null)\r\n  const terminalInputRef = useRef<HTMLInputElement>(null)\r\n  const [currentCommand, setCurrentCommand] = useState(\"\")\r\n\r\n  const [desktopIcons, setDesktopIcons] = useState<DesktopIcon[]>([\r\n    {\r\n      id: \"terminal\",\r\n      name: \"Terminal\",\r\n      icon: (\r\n        <div className=\"w-10 h-10 flex items-center justify-center\">\r\n          <img src=\"/assets/program-icons/terminal-app.png\" alt=\"Terminal\" className=\"w-8 h-8 drop-shadow-lg\" />\r\n        </div>\r\n      ),\r\n      position: { x: 100, y: 100 },\r\n      action: () => openWindow(\"terminal\", \"Terminal\", <TerminalWindow />),\r\n    },\r\n    {\r\n      id: \"projects\",\r\n      name: \"Projects\",\r\n      icon: (\r\n        <div className=\"w-10 h-10 flex items-center justify-center\">\r\n          <svg viewBox=\"0 0 24 24\" className=\"w-8 h-8 drop-shadow-lg\">\r\n            <path fill=\"#E95420\" d=\"M10 4H4c-1.11 0-2 .89-2 2v12c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2h-8l-2-2z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M12 8v8l4-4-4-4z\" />\r\n          </svg>\r\n        </div>\r\n      ),\r\n      position: { x: 100, y: 180 },\r\n      action: () => openWindow(\"projects\", \"Projects\", <ProjectsWindow />),\r\n    },\r\n    {\r\n      id: \"notepad\",\r\n      name: \"Commands\",\r\n      icon: (\r\n        <div className=\"w-10 h-10 flex items-center justify-center\">\r\n          <svg viewBox=\"0 0 24 24\" className=\"w-8 h-8 drop-shadow-lg\">\r\n            <path fill=\"#7C3AED\" d=\"M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M8 12h8v2H8v-2zm0 4h8v2H8v-2zm0-8h5v5H8V8z\" />\r\n          </svg>\r\n        </div>\r\n      ),\r\n      position: { x: 100, y: 260 },\r\n      action: () => openWindow(\"notepad\", \"Commands Guide\", <NotepadWindow />),\r\n    },\r\n    {\r\n      id: \"about\",\r\n      name: \"About Me\",\r\n      icon: (\r\n        <div className=\"w-10 h-10 flex items-center justify-center\">\r\n          <svg viewBox=\"0 0 24 24\" className=\"w-8 h-8 drop-shadow-lg\">\r\n            <circle fill=\"#16A34A\" cx=\"12\" cy=\"12\" r=\"10\" />\r\n            <circle fill=\"#FFFFFF\" cx=\"12\" cy=\"8\" r=\"2\" />\r\n            <path fill=\"#FFFFFF\" d=\"M12 12c-2.5 0-4.5 2-4.5 4.5h9c0-2.5-2-4.5-4.5-4.5z\" />\r\n          </svg>\r\n        </div>\r\n      ),\r\n      position: { x: 100, y: 340 },\r\n      action: () => openWindow(\"about\", \"About Me\", <AboutWindow />),\r\n    },\r\n    {\r\n      id: \"skills\",\r\n      name: \"Skills\",\r\n      icon: (\r\n        <div className=\"w-10 h-10 flex items-center justify-center\">\r\n          <svg viewBox=\"0 0 24 24\" className=\"w-8 h-8 drop-shadow-lg\">\r\n            <path fill=\"#DC2626\" d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M12 6l1.5 3L17 10l-2.5 2.5L15 17l-3-1.5L9 17l.5-4.5L7 10l3.5-1L12 6z\" />\r\n          </svg>\r\n        </div>\r\n      ),\r\n      position: { x: 100, y: 420 },\r\n      action: () => openWindow(\"skills\", \"Skills\", <SkillsWindow />),\r\n    },\r\n    {\r\n      id: \"contact\",\r\n      name: \"Contact\",\r\n      icon: (\r\n        <div className=\"w-10 h-10 flex items-center justify-center\">\r\n          <svg viewBox=\"0 0 24 24\" className=\"w-8 h-8 drop-shadow-lg\">\r\n            <path fill=\"#0891B2\" d=\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M12 11l8-5H4l8 5z\" />\r\n          </svg>\r\n        </div>\r\n      ),\r\n      position: { x: 200, y: 100 },\r\n      action: () => openWindow(\"contact\", \"Contact\", <ContactWindow />),\r\n    },\r\n    {\r\n      id: \"gallery\",\r\n      name: \"Gallery\",\r\n      icon: (\r\n        <div className=\"w-10 h-10 flex items-center justify-center\">\r\n          <svg viewBox=\"0 0 24 24\" className=\"w-8 h-8 drop-shadow-lg\">\r\n            <path fill=\"#9333EA\" d=\"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z\" />\r\n            <circle fill=\"#FFFFFF\" cx=\"8.5\" cy=\"8.5\" r=\"1.5\" />\r\n          </svg>\r\n        </div>\r\n      ),\r\n      position: { x: 200, y: 180 },\r\n      action: () => openWindow(\"gallery\", \"Gallery\", <GalleryWindow />),\r\n    },\r\n    {\r\n      id: \"settings\",\r\n      name: \"Settings\",\r\n      icon: (\r\n        <div className=\"w-10 h-10 flex items-center justify-center\">\r\n          <img src=\"/assets/program-icons/system-settings.png\" alt=\"Settings\" className=\"w-8 h-8 drop-shadow-lg\" />\r\n        </div>\r\n      ),\r\n      position: { x: 200, y: 260 },\r\n      action: () => openWindow(\"settings\", \"Settings\", <SettingsWindow />),\r\n    },\r\n  ])\r\n\r\n  const [sidebarIcons, setSidebarIcons] = useState<DesktopIcon[]>([\r\n    {\r\n      id: \"home\",\r\n      name: \"Home\",\r\n      icon: (\r\n        <div className=\"w-8 h-8 flex items-center justify-center\">\r\n          <svg viewBox=\"0 0 24 24\" className=\"w-8 h-8 text-white drop-shadow-lg\">\r\n            <path fill=\"currentColor\" d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n          </svg>\r\n        </div>\r\n      ),\r\n      position: { x: 0, y: 0 },\r\n      action: () => {\r\n        // Close all windows to show desktop\r\n        setWindows([])\r\n      },\r\n    },\r\n    {\r\n      id: \"chrome\",\r\n      name: \"Google Chrome\",\r\n      icon: (\r\n        <div className=\"w-8 h-8 flex items-center justify-center\">\r\n          <img src=\"/assets/program-icons/Google_Chrome_icon.png\" alt=\"Chrome\" className=\"w-8 h-8 drop-shadow-lg\" />\r\n        </div>\r\n      ),\r\n      position: { x: 0, y: 0 },\r\n      action: () => openWindow(\"chrome\", \"Google Chrome\", <ChromeWindow />),\r\n    },\r\n    {\r\n      id: \"help\",\r\n      name: \"Help\",\r\n      icon: (\r\n        <div className=\"w-6 h-6 flex items-center justify-center\">\r\n          <svg viewBox=\"0 0 24 24\" className=\"w-6 h-6 text-blue-400\">\r\n            <path fill=\"currentColor\" d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z\" />\r\n          </svg>\r\n        </div>\r\n      ),\r\n      position: { x: 0, y: 0 },\r\n      action: () => openWindow(\"help\", \"Help & Support\", <HelpWindow />),\r\n    },\r\n    {\r\n      id: \"files\",\r\n      name: \"Files\",\r\n      icon: (\r\n        <div className=\"w-8 h-8 flex items-center justify-center\">\r\n          <img src=\"/assets/system-icons/filemanager-app.png\" alt=\"Files\" className=\"w-8 h-8 drop-shadow-lg\" />\r\n        </div>\r\n      ),\r\n      position: { x: 0, y: 0 },\r\n      action: () => openWindow(\"files\", \"File Manager\", <FilesWindow />),\r\n    },\r\n    {\r\n      id: \"terminal\",\r\n      name: \"Terminal\",\r\n      icon: (\r\n        <div className=\"w-8 h-8 flex items-center justify-center\">\r\n          <img src=\"/assets/program-icons/terminal-app.png\" alt=\"Terminal\" className=\"w-8 h-8 drop-shadow-lg\" />\r\n        </div>\r\n      ),\r\n      position: { x: 0, y: 0 },\r\n      action: () => openWindow(\"terminal\", \"Terminal\", <TerminalWindow />),\r\n    },\r\n    {\r\n      id: \"settings\",\r\n      name: \"Settings\",\r\n      icon: (\r\n        <div className=\"w-8 h-8 flex items-center justify-center\">\r\n          <img src=\"/assets/program-icons/system-settings.png\" alt=\"Settings\" className=\"w-8 h-8 drop-shadow-lg\" />\r\n        </div>\r\n      ),\r\n      position: { x: 0, y: 0 },\r\n      action: () => openWindow(\"settings\", \"Settings\", <SettingsWindow />),\r\n    },\r\n    {\r\n      id: \"calculator\",\r\n      name: \"Calculator\",\r\n      icon: (\r\n        <div className=\"w-8 h-8 flex items-center justify-center\">\r\n          <img src=\"/assets/program-icons/calculator-app.png\" alt=\"Calculator\" className=\"w-8 h-8 drop-shadow-lg\" />\r\n        </div>\r\n      ),\r\n      position: { x: 0, y: 0 },\r\n      action: () => openWindow(\"calculator\", \"Calculator\", <CalculatorWindow />),\r\n    },\r\n    {\r\n      id: \"music\",\r\n      name: \"Music Player\",\r\n      icon: (\r\n        <div className=\"w-8 h-8 flex items-center justify-center\">\r\n          <img src=\"/assets/program-icons/spotify-client.png\" alt=\"Music\" className=\"w-8 h-8 drop-shadow-lg\" />\r\n        </div>\r\n      ),\r\n      position: { x: 0, y: 0 },\r\n      action: () => openWindow(\"music\", \"Music Player\", <MusicPlayerWindow />),\r\n    },\r\n    {\r\n      id: \"image-viewer\",\r\n      name: \"Image Viewer\",\r\n      icon: (\r\n        <div className=\"w-8 h-8 flex items-center justify-center\">\r\n          <img src=\"/assets/program-icons/image-viewer-app.png\" alt=\"Image Viewer\" className=\"w-8 h-8 drop-shadow-lg\" />\r\n        </div>\r\n      ),\r\n      position: { x: 0, y: 0 },\r\n      action: () => openWindow(\"image-viewer\", \"Image Viewer\", <ImageViewerWindow />),\r\n    },\r\n  ])\r\n\r\n  useEffect(() => {\r\n    // Set client-side flag to prevent hydration mismatch\r\n    setIsClient(true)\r\n\r\n    // Set initial time\r\n    setCurrentTime(\r\n      new Date().toLocaleString(\"en-US\", {\r\n        weekday: \"short\",\r\n        month: \"short\",\r\n        day: \"numeric\",\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n        second: \"2-digit\",\r\n        hour12: false,\r\n      }),\r\n    )\r\n\r\n    const timer = setInterval(() => {\r\n      setCurrentTime(\r\n        new Date().toLocaleString(\"en-US\", {\r\n          weekday: \"short\",\r\n          month: \"short\",\r\n          day: \"numeric\",\r\n          hour: \"2-digit\",\r\n          minute: \"2-digit\",\r\n          second: \"2-digit\",\r\n          hour12: false,\r\n        }),\r\n      )\r\n    }, 1000)\r\n\r\n    return () => clearInterval(timer)\r\n  }, [])\r\n\r\n  // Performance optimization: Memoize expensive calculations\r\n  const memoizedDesktopIcons = useMemo(() => desktopIcons, [desktopIcons])\r\n  const memoizedWindows = useMemo(() => windows, [windows])\r\n\r\n  // Error boundary for graceful error handling\r\n  const [hasError, setHasError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const handleError = (error: ErrorEvent) => {\r\n      console.error('Ubuntu Portfolio Error:', error)\r\n      setHasError(true)\r\n    }\r\n\r\n    window.addEventListener('error', handleError)\r\n    return () => window.removeEventListener('error', handleError)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (windows.find((w) => w.id === \"terminal\") && terminalInputRef.current) {\r\n      setTimeout(() => {\r\n        terminalInputRef.current?.focus()\r\n      }, 100)\r\n      setTimeout(() => {\r\n        terminalInputRef.current?.focus()\r\n      }, 500)\r\n    }\r\n  }, [windows])\r\n\r\n  const snapToGrid = (x: number, y: number) => {\r\n    // Ubuntu-style grid snapping - but allow free movement\r\n    const gridSize = 80\r\n    const startX = 100\r\n    const startY = 100\r\n\r\n    // Calculate grid position\r\n    const gridX = Math.round((x - startX) / gridSize)\r\n    const gridY = Math.round((y - startY) / gridSize)\r\n\r\n    // Allow movement anywhere, just snap to grid\r\n    const clampedY = Math.max(0, gridY)\r\n\r\n    return {\r\n      x: startX + gridX * gridSize,\r\n      y: startY + clampedY * gridSize\r\n    }\r\n  }\r\n\r\n  const checkCollision = (iconId: string, newX: number, newY: number) => {\r\n    const snapPos = snapToGrid(newX, newY)\r\n\r\n    // Check if position is already occupied\r\n    return desktopIcons.some(icon =>\r\n      icon.id !== iconId &&\r\n      Math.abs(icon.position.x - snapPos.x) < 70 &&\r\n      Math.abs(icon.position.y - snapPos.y) < 70\r\n    )\r\n  }\r\n\r\n  const handleIconMouseDown = (e: React.MouseEvent<HTMLDivElement>, iconId: string) => {\r\n    e.preventDefault()\r\n    const rect = e.currentTarget.getBoundingClientRect()\r\n    setDraggedIcon(iconId)\r\n    setDragOffset({\r\n      x: e.clientX - rect.left,\r\n      y: e.clientY - rect.top,\r\n    })\r\n  }\r\n\r\n  const handleWindowMouseDown = (e: React.MouseEvent<HTMLDivElement>, windowId: string) => {\r\n    e.preventDefault()\r\n    const rect = e.currentTarget.getBoundingClientRect()\r\n    setDraggedWindow(windowId)\r\n    setWindowDragOffset({\r\n      x: e.clientX - rect.left,\r\n      y: e.clientY - rect.top,\r\n    })\r\n    bringToFront(windowId)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleGlobalMouseMove = (e: MouseEvent) => {\r\n      // Handle icon dragging with Ubuntu-style snapping\r\n      if (draggedIcon) {\r\n        const newX = e.clientX - dragOffset.x\r\n        const newY = e.clientY - dragOffset.y\r\n\r\n        const constrainedX = Math.max(100, Math.min(newX, window.innerWidth - 100))\r\n        const constrainedY = Math.max(48, Math.min(newY, window.innerHeight - 150))\r\n\r\n        // Snap to grid position\r\n        const snapPos = snapToGrid(constrainedX, constrainedY)\r\n\r\n        // Check for collisions and find next available position\r\n        let finalPos = snapPos\r\n        if (checkCollision(draggedIcon, constrainedX, constrainedY)) {\r\n          // Find next available position in grid - search from current position outward\r\n          const gridSize = 80\r\n          const startX = 100\r\n          const startY = 100\r\n\r\n          // Start from the intended position and search outward\r\n          const intendedCol = Math.round((constrainedX - startX) / gridSize)\r\n          const intendedRow = Math.round((constrainedY - startY) / gridSize)\r\n\r\n          // Search in expanding radius\r\n          for (let radius = 0; radius < 10; radius++) {\r\n            for (let colOffset = -radius; colOffset <= radius; colOffset++) {\r\n              for (let rowOffset = -radius; rowOffset <= radius; rowOffset++) {\r\n                if (Math.abs(colOffset) === radius || Math.abs(rowOffset) === radius) {\r\n                  const testX = startX + (intendedCol + colOffset) * gridSize\r\n                  const testY = startY + (intendedRow + rowOffset) * gridSize\r\n\r\n                  // Only check positions that are within bounds\r\n                  if (testX >= startX && testY >= startY) {\r\n                    if (!checkCollision(draggedIcon, testX, testY)) {\r\n                      finalPos = { x: testX, y: testY }\r\n                      break\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              if (finalPos.x !== snapPos.x || finalPos.y !== snapPos.y) break\r\n            }\r\n            if (finalPos.x !== snapPos.x || finalPos.y !== snapPos.y) break\r\n          }\r\n        }\r\n\r\n        setDesktopIcons((prev) =>\r\n          prev.map((icon) =>\r\n            icon.id === draggedIcon ? { ...icon, position: finalPos } : icon,\r\n          ),\r\n        )\r\n      }\r\n\r\n      if (draggedWindow) {\r\n        const newX = e.clientX - windowDragOffset.x\r\n        const newY = e.clientY - windowDragOffset.y\r\n\r\n        const constrainedX = Math.max(0, Math.min(newX, window.innerWidth - 200))\r\n        const constrainedY = Math.max(48, Math.min(newY, window.innerHeight - 200))\r\n\r\n        setWindows((prev) =>\r\n          prev.map((win) =>\r\n            win.id === draggedWindow && !win.isMaximized\r\n              ? { ...win, position: { x: constrainedX, y: constrainedY } }\r\n              : win,\r\n          ),\r\n        )\r\n      }\r\n    }\r\n\r\n    const handleGlobalMouseUp = () => {\r\n      setDraggedIcon(null)\r\n      setDraggedWindow(null)\r\n    }\r\n\r\n    if (draggedIcon || draggedWindow) {\r\n      document.addEventListener(\"mousemove\", handleGlobalMouseMove)\r\n      document.addEventListener(\"mouseup\", handleGlobalMouseUp)\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousemove\", handleGlobalMouseMove)\r\n      document.removeEventListener(\"mouseup\", handleGlobalMouseUp)\r\n    }\r\n  }, [draggedIcon, dragOffset, draggedWindow, windowDragOffset])\r\n\r\n  const openWindow = (id: string, title: string, component: React.ReactNode) => {\r\n    const existingWindow = windows.find((w) => w.id === id)\r\n    if (existingWindow) {\r\n      bringToFront(id)\r\n      return\r\n    }\r\n\r\n    const newWindow = {\r\n      id,\r\n      title,\r\n      component,\r\n      position: { x: 50 + windows.length * 20, y: 50 + windows.length * 20 },\r\n      size: { width: 640, height: 400 },\r\n      isMinimized: false,\r\n      isMaximized: false,\r\n      zIndex: nextZIndex,\r\n    }\r\n    setWindows((prev) => [...prev, newWindow])\r\n    setNextZIndex((prev) => prev + 1)\r\n  }\r\n\r\n  const closeWindow = (id: string) => {\r\n    setWindows((prev) => prev.filter((w) => w.id !== id))\r\n  }\r\n\r\n  const minimizeWindow = (id: string) => {\r\n    setWindows((prev) => prev.map((w) => (w.id === id ? { ...w, isMinimized: true } : w)))\r\n  }\r\n\r\n  const restoreWindow = (id: string) => {\r\n    setWindows((prev) => prev.map((w) => (w.id === id ? { ...w, isMinimized: false } : w)))\r\n    bringToFront(id)\r\n  }\r\n\r\n  const maximizeWindow = (id: string) => {\r\n    setWindows((prev) =>\r\n      prev.map((w) =>\r\n        w.id === id\r\n          ? {\r\n            ...w,\r\n            isMaximized: !w.isMaximized,\r\n            position: w.isMaximized ? { x: 50, y: 50 } : { x: 0, y: 48 },\r\n            size: w.isMaximized\r\n              ? { width: 640, height: 400 }\r\n              : { width: window.innerWidth, height: window.innerHeight - 96 },\r\n          }\r\n          : w,\r\n      ),\r\n    )\r\n  }\r\n\r\n  const bringToFront = (id: string) => {\r\n    setWindows((prev) => prev.map((w) => (w.id === id ? { ...w, zIndex: nextZIndex, isMinimized: false } : w)))\r\n    setNextZIndex((prev) => prev + 1)\r\n  }\r\n\r\n  const handleTerminalCommand = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === \"Enter\") {\r\n      const command = currentCommand.trim()\r\n      setCurrentCommand(\"\")\r\n\r\n      if (command === \"help\") {\r\n        setTerminalHistory((prev) => [\r\n          ...prev,\r\n          `ubuntu-developer@portfolio:~$ ${command}`,\r\n          \"Available commands:\",\r\n          \"  help - Show this help message\",\r\n          \"  clear - Clear terminal\",\r\n          \"  ls - List directory contents\",\r\n          \"  pwd - Print working directory\",\r\n          \"  whoami - Display current user\",\r\n          \"  email - Show email address\",\r\n          \"  date - Show current date and time\",\r\n          \"  neofetch - Display system information\",\r\n          \"  fortune - Get a random quote\",\r\n          \"  ascii - Display ASCII art of name\",\r\n          \"\",\r\n          \"Application Commands:\",\r\n          \"  open [app] - Open application (about, skills, contact, gallery, settings, projects)\",\r\n          \"  ./[project] - Launch specific project (debtrix, weloveqr, synthralabs, portfolio)\",\r\n          \"\",\r\n          \"File Commands:\",\r\n          \"  cat [file] - Display file contents (about.txt, contact.txt, skills.txt)\",\r\n          \"  tree - Show directory tree\",\r\n          \"  history - Show command history\",\r\n          \"\",\r\n          \"Social Media & Projects:\",\r\n          \"  visit github - Open GitHub profile\",\r\n          \"  visit linkedin - Open LinkedIn profile\",\r\n          \"  visit x - Open X (Twitter) profile\",\r\n          \"  visit medium - Open Medium profile\",\r\n          \"  visit producthunt - Open Product Hunt profile\",\r\n          \"  visit peerlist - Open Peerlist profile\",\r\n          \"  visit coffee - Open Buy Me a Coffee\",\r\n          \"  visit debtrix - Open Debtrix project\",\r\n          \"  visit weloveqr - Open WeLoveQR project\",\r\n          \"  visit synthralabs - Open SynthraLabs organization\",\r\n          \"\",\r\n          \"  exit - Close terminal\",\r\n          \"\",\r\n        ])\r\n      } else if (command === \"clear\") {\r\n        setTerminalHistory([])\r\n      } else if (command === \"ls\") {\r\n        setTerminalHistory((prev) => [\r\n          ...prev,\r\n          `ubuntu-developer@portfolio:~$ ${command}`,\r\n          \"projects/\",\r\n          \"about.txt\",\r\n          \"contact.txt\",\r\n          \"skills.txt\",\r\n          \"commands.txt\",\r\n          \"ecommerce*\",\r\n          \"taskmanager*\",\r\n          \"apigateway*\",\r\n          \"portfolio*\",\r\n          \"\",\r\n        ])\r\n      } else if (command === \"pwd\") {\r\n        setTerminalHistory((prev) => [\r\n          ...prev,\r\n          `ubuntu-developer@portfolio:~$ ${command}`,\r\n          \"/home/ubuntu-developer\",\r\n          \"\",\r\n        ])\r\n      } else if (command === \"whoami\") {\r\n        setTerminalHistory((prev) => [...prev, `ubuntu-developer@portfolio:~$ ${command}`, \"ubuntu-developer\", \"\"])\r\n      } else if (command === \"date\") {\r\n        setTerminalHistory((prev) => [...prev, `ubuntu-developer@portfolio:~$ ${command}`, new Date().toString(), \"\"])\r\n      } else if (command === \"neofetch\") {\r\n        setTerminalHistory((prev) => [\r\n          ...prev,\r\n          `ubuntu-developer@portfolio:~$ ${command}`,\r\n          \"                    .-/+oossssoo+/-.\",\r\n          \"                `:+ssssssssssssssssss+:`\",\r\n          \"              -+ssssssssssssssssssyyssss+-\",\r\n          \"            .ossssssssssssssssss+:::::+ys:\",\r\n          \"           /ssssssssssshdmmNNmmyNMMMMh+sss/\",\r\n          \"          +ssssssssshmydMMMMMMMNddddyssssss+\",\r\n          \"         /sssssssshNMMMyhhyyyyhmNMMMNhssssss/\",\r\n          \"        .ssssssssdMMMNhsssssssssshNMMMdssssss.\",\r\n          \"        +sssshhhyNMMNyssssssssssssyNMMMysssss+\",\r\n          \"        ossyNMMMNyMMhsssssssssssssshmmmhssssso\",\r\n          \"        ossyNMMMNyMMhsssssssssssssshmmmhssssso\",\r\n          \"        +sssshhhyNMMNyssssssssssssyNMMMysssss+\",\r\n          \"        .ssssssssdMMMNhsssssssssshNMMMdssssss.\",\r\n          \"         /sssssssshNMMMyhhyyyyhdNMMMNhssssss/\",\r\n          \"          +sssssssssdmydMMMMMMMMddddyssssss+\",\r\n          \"           /ssssssssssshdmNNNNmyNMMMMhssss/\",\r\n          \"            .ossssssssssssssssss+:::::+ys:\",\r\n          \"              -+sssssssssssssssssyyssss+-\",\r\n          \"                `:+ssssssssssssssssss+:`\",\r\n          \"                    .-/+oossssoo+/-.\",\r\n          \"\",\r\n          \"ubuntu-developer@portfolio-desktop\",\r\n          \"OS: Ubuntu 22.04.3 LTS x86_64\",\r\n          \"Host: Portfolio Desktop\",\r\n          \"Kernel: 5.15.0-generic\",\r\n          \"Uptime: 2 hours, 34 mins\",\r\n          \"Packages: 2847 (dpkg), 63 (snap)\",\r\n          \"Shell: bash 5.1.16\",\r\n          \"Resolution: 1920x1080\",\r\n          \"DE: Portfolio Desktop Environment\",\r\n          \"WM: Portfolio WM\",\r\n          \"Theme: Ubuntu [GTK2/3]\",\r\n          \"Icons: Yaru [GTK2/3]\",\r\n          \"Terminal: portfolio-terminal\",\r\n          \"CPU: Intel i7-12700K (16) @ 3.600GHz\",\r\n          \"GPU: NVIDIA GeForce RTX 3080\",\r\n          \"Memory: 2847MiB / 32768MiB\",\r\n          \"\",\r\n        ])\r\n      } else if (command === \"fortune\") {\r\n        const fortunes = [\r\n          \"The best way to predict the future is to implement it.\",\r\n          \"Code is like humor. When you have to explain it, it's bad.\",\r\n          \"Programming isn't about what you know; it's about what you can figure out.\",\r\n          \"The most important property of a program is whether it accomplishes the intention of its user.\",\r\n          \"Ubuntu: Linux for human beings.\",\r\n          \"There are only two hard things in Computer Science: cache invalidation and naming things.\",\r\n        ]\r\n        const randomFortune = fortunes[Math.floor(Math.random() * fortunes.length)]\r\n        setTerminalHistory((prev) => [...prev, `ubuntu-developer@portfolio:~$ ${command}`, randomFortune, \"\"])\r\n      } else if (command === \"ascii\") {\r\n        setTerminalHistory((prev) => [\r\n          ...prev,\r\n          `ubuntu-developer@portfolio:~$ ${command}`,\r\n          \"\",\r\n          \"████████╗ █████╗ ███╗   ██╗ █████╗ ██╗   ██╗\",\r\n          \"╚══██╔══╝██╔══██╗████╗  ██║██╔══██╗╚██╗ ██╔╝\",\r\n          \"   ██║   ███████║██╔██╗ ██║███████║ ╚████╔╝ \",\r\n          \"   ██║   ██╔══██║██║╚██╗██║██╔══██║  ╚██╔╝  \",\r\n          \"   ██║   ██║  ██║██║ ╚████║██║  ██║   ██║   \",\r\n          \"   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═══╝╚═╝  ╚═╝   ╚═╝   \",\r\n          \"\",\r\n          \"██╗   ██╗ █████╗ ███████╗██╗██╗  ████████╗██╗  ██╗ █████╗ \",\r\n          \"██║   ██║██╔══██╗██╔════╝██║██║  ╚══██╔══╝██║  ██║██╔══██╗\",\r\n          \"██║   ██║███████║███████╗██║██║     ██║   ███████║███████║\",\r\n          \"╚██╗ ██╔╝██╔══██║╚════██║██║██║     ██║   ██╔══██║██╔══██║\",\r\n          \" ╚████╔╝ ██║  ██║███████║██║██║     ██║   ██║  ██║██║  ██║\",\r\n          \"  ╚═══╝  ╚═╝  ╚═╝╚══════╝╚═╝╚═╝     ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝\",\r\n          \"\",\r\n          \"                    @2025\",\r\n          \"\",\r\n        ])\r\n      } else if (command === \"tree\") {\r\n        setTerminalHistory((prev) => [\r\n          ...prev,\r\n          `ubuntu-developer@portfolio:~$ ${command}`,\r\n          \".\",\r\n          \"├── projects/\",\r\n          \"│   ├── ecommerce/\",\r\n          \"│   ├── taskmanager/\",\r\n          \"│   ├── apigateway/\",\r\n          \"│   └── portfolio/\",\r\n          \"├── about.txt\",\r\n          \"├── contact.txt\",\r\n          \"├── skills.txt\",\r\n          \"└── README.md\",\r\n          \"\",\r\n          \"4 directories, 4 files\",\r\n          \"\",\r\n        ])\r\n      } else if (command === \"history\") {\r\n        setTerminalHistory((prev) => [\r\n          ...prev,\r\n          `ubuntu-developer@portfolio:~$ ${command}`,\r\n          \"1  help\",\r\n          \"2  ls\",\r\n          \"3  pwd\",\r\n          \"4  whoami\",\r\n          \"5  neofetch\",\r\n          \"6  history\",\r\n          \"\",\r\n        ])\r\n      } else if (command === \"exit\") {\r\n        closeWindow(\"terminal\")\r\n        return\r\n      } else if (command.startsWith(\"cat \")) {\r\n        const fileName = command.split(\" \")[1]\r\n        if (fileName === \"about.txt\") {\r\n          setTerminalHistory((prev) => [\r\n            ...prev,\r\n            `ubuntu-developer@portfolio:~$ ${command}`,\r\n            \"# About Me\",\r\n            \"Full-Stack Developer & Linux Enthusiast\",\r\n            \"\",\r\n            \"Passionate about creating scalable web applications\",\r\n            \"and exploring the depths of Ubuntu/Linux systems.\",\r\n            \"Specializing in React, Next.js, Node.js, and DevOps.\",\r\n            \"\",\r\n          ])\r\n        } else if (fileName === \"contact.txt\") {\r\n          setTerminalHistory((prev) => [\r\n            ...prev,\r\n            `ubuntu-developer@portfolio:~$ ${command}`,\r\n            \"# Contact Information\",\r\n            \"Email: edgepersonal2004@gmail.com\",\r\n            \"GitHub: @tanayvasishtha\",\r\n            \"LinkedIn: /in/tanayvasishtha\",\r\n            \"X: @TanayVasishtha\",\r\n            \"\",\r\n          ])\r\n        } else if (fileName === \"skills.txt\") {\r\n          setTerminalHistory((prev) => [\r\n            ...prev,\r\n            `ubuntu-developer@portfolio:~$ ${command}`,\r\n            \"# Technical Skills\",\r\n            \"Frontend: React, Next.js, TypeScript, Tailwind CSS\",\r\n            \"Backend: Node.js, Express.js, Python, PostgreSQL\",\r\n            \"DevOps: Docker, Kubernetes, AWS, Ubuntu Server\",\r\n            \"Tools: Git, VS Code, Terminal, Postman\",\r\n            \"\",\r\n          ])\r\n        } else if (fileName === \"commands.txt\") {\r\n          setTerminalHistory((prev) => [\r\n            ...prev,\r\n            `ubuntu-developer@portfolio:~$ ${command}`,\r\n            \"# Ubuntu Portfolio Terminal Commands\",\r\n            \"# Available commands for the portfolio terminal\",\r\n            \"# Copy and paste these commands into the terminal to execute them\",\r\n            \"\",\r\n            \"## Basic Commands\",\r\n            \"help\",\r\n            \"clear\",\r\n            \"ls\",\r\n            \"pwd\",\r\n            \"whoami\",\r\n            \"email\",\r\n            \"date\",\r\n            \"neofetch\",\r\n            \"fortune\",\r\n            \"exit\",\r\n            \"\",\r\n            \"## Application Commands\",\r\n            \"open about\",\r\n            \"open skills\",\r\n            \"open contact\",\r\n            \"open gallery\",\r\n            \"open settings\",\r\n            \"open projects\",\r\n            \"\",\r\n            \"## Social Media Commands\",\r\n            \"visit github\",\r\n            \"visit linkedin\",\r\n            \"visit x\",\r\n            \"visit medium\",\r\n            \"visit producthunt\",\r\n            \"visit peerlist\",\r\n            \"visit coffee\",\r\n            \"\",\r\n            \"## Project Commands\",\r\n            \"visit debtrix\",\r\n            \"visit weloveqr\",\r\n            \"visit synthralabs\",\r\n            \"\",\r\n            \"## File Commands\",\r\n            \"cat about.txt\",\r\n            \"cat contact.txt\",\r\n            \"cat skills.txt\",\r\n            \"cat commands.txt\",\r\n            \"tree\",\r\n            \"history\",\r\n            \"\",\r\n            \"## Project Launch Commands\",\r\n            \"./debtrix\",\r\n            \"./weloveqr\",\r\n            \"./synthralabs\",\r\n            \"./portfolio\",\r\n            \"\",\r\n            \"## Quick Access Commands\",\r\n            \"# Copy any command above and paste into terminal\",\r\n            \"# Examples:\",\r\n            \"# visit github\",\r\n            \"# open about\",\r\n            \"# cat commands.txt\",\r\n            \"# visit debtrix\",\r\n            \"\",\r\n          ])\r\n        } else {\r\n          setTerminalHistory((prev) => [\r\n            ...prev,\r\n            `ubuntu-developer@portfolio:~$ ${command}`,\r\n            `cat: ${fileName}: No such file or directory`,\r\n            \"\",\r\n          ])\r\n        }\r\n      } else if (command === \"./ecommerce\") {\r\n        openWindow(\"projects\", \"E-commerce Platform\", <ProjectDetailWindow project=\"ecommerce\" />)\r\n        setTerminalHistory((prev) => [\r\n          ...prev,\r\n          `ubuntu-developer@portfolio:~$ ${command}`,\r\n          \"Launching E-commerce Platform...\",\r\n          \"Opening project details window...\",\r\n          \"\",\r\n        ])\r\n      } else if (command === \"./taskmanager\") {\r\n        openWindow(\"projects\", \"Task Manager App\", <ProjectDetailWindow project=\"taskmanager\" />)\r\n        setTerminalHistory((prev) => [\r\n          ...prev,\r\n          `ubuntu-developer@portfolio:~$ ${command}`,\r\n          \"Launching Task Manager App...\",\r\n          \"Opening project details window...\",\r\n          \"\",\r\n        ])\r\n      } else if (command === \"./apigateway\") {\r\n        openWindow(\"projects\", \"API Gateway\", <ProjectDetailWindow project=\"apigateway\" />)\r\n        setTerminalHistory((prev) => [\r\n          ...prev,\r\n          `ubuntu-developer@portfolio:~$ ${command}`,\r\n          \"Launching API Gateway...\",\r\n          \"Opening project details window...\",\r\n          \"\",\r\n        ])\r\n      } else if (command === \"./portfolio\") {\r\n        openWindow(\"projects\", \"Portfolio Website\", <ProjectDetailWindow project=\"portfolio\" />)\r\n        setTerminalHistory((prev) => [\r\n          ...prev,\r\n          `ubuntu-developer@portfolio:~$ ${command}`,\r\n          \"Launching Portfolio Website...\",\r\n          \"You're already here! 🐧\",\r\n          \"\",\r\n        ])\r\n      } else if (command.startsWith(\"open\")) {\r\n        const appName = command.split(\" \")[1]\r\n        if (appName === \"projects\") {\r\n          openWindow(\"projects\", \"Projects\", <ProjectsWindow />)\r\n          setTerminalHistory((prev) => [\r\n            ...prev,\r\n            `ubuntu-developer@portfolio:~$ ${command}`,\r\n            `Opening ${appName}...`,\r\n            \"\",\r\n          ])\r\n        } else if (appName === \"about\") {\r\n          openWindow(\"about\", \"About Me\", <AboutWindow />)\r\n          setTerminalHistory((prev) => [\r\n            ...prev,\r\n            `ubuntu-developer@portfolio:~$ ${command}`,\r\n            `Opening ${appName}...`,\r\n            \"\",\r\n          ])\r\n        } else if (appName === \"skills\") {\r\n          openWindow(\"skills\", \"Skills\", <SkillsWindow />)\r\n          setTerminalHistory((prev) => [\r\n            ...prev,\r\n            `ubuntu-developer@portfolio:~$ ${command}`,\r\n            `Opening ${appName}...`,\r\n            \"\",\r\n          ])\r\n        } else if (appName === \"contact\") {\r\n          openWindow(\"contact\", \"Contact\", <ContactWindow />)\r\n          setTerminalHistory((prev) => [\r\n            ...prev,\r\n            `ubuntu-developer@portfolio:~$ ${command}`,\r\n            `Opening ${appName}...`,\r\n            \"\",\r\n          ])\r\n        } else if (appName === \"gallery\") {\r\n          openWindow(\"gallery\", \"Gallery\", <GalleryWindow />)\r\n          setTerminalHistory((prev) => [\r\n            ...prev,\r\n            `ubuntu-developer@portfolio:~$ ${command}`,\r\n            `Opening ${appName}...`,\r\n            \"\",\r\n          ])\r\n        } else if (appName === \"settings\") {\r\n          openWindow(\"settings\", \"Settings\", <SettingsWindow />)\r\n          setTerminalHistory((prev) => [\r\n            ...prev,\r\n            `ubuntu-developer@portfolio:~$ ${command}`,\r\n            `Opening ${appName}...`,\r\n            \"\",\r\n          ])\r\n        } else {\r\n          setTerminalHistory((prev) => [\r\n            ...prev,\r\n            `ubuntu-developer@portfolio:~$ ${command}`,\r\n            `Error: Application \"${appName}\" not found.`,\r\n            'Type \"help\" for available commands.',\r\n            \"\",\r\n          ])\r\n        }\r\n      } else if (command.startsWith(\"visit\")) {\r\n        const site = command.split(\" \")[1]\r\n        if (site === \"github\") {\r\n          window.open('https://github.com/tanayvasishtha', '_blank')\r\n          setTerminalHistory((prev) => [\r\n            ...prev,\r\n            `ubuntu-developer@portfolio:~$ ${command}`,\r\n            \"Opening GitHub profile...\",\r\n            \"Redirecting to https://github.com/tanayvasishtha\",\r\n            \"\",\r\n          ])\r\n        } else if (site === \"linkedin\") {\r\n          window.open('https://www.linkedin.com/in/tanayvasishtha/', '_blank')\r\n          setTerminalHistory((prev) => [\r\n            ...prev,\r\n            `ubuntu-developer@portfolio:~$ ${command}`,\r\n            \"Opening LinkedIn profile...\",\r\n            \"Redirecting to https://www.linkedin.com/in/tanayvasishtha/\",\r\n            \"\",\r\n          ])\r\n        } else if (site === \"x\" || site === \"twitter\") {\r\n          window.open('https://x.com/TanayVasishtha', '_blank')\r\n          setTerminalHistory((prev) => [\r\n            ...prev,\r\n            `ubuntu-developer@portfolio:~$ ${command}`,\r\n            \"Opening X (Twitter) profile...\",\r\n            \"Redirecting to https://x.com/TanayVasishtha\",\r\n            \"\",\r\n          ])\r\n        } else if (site === \"medium\") {\r\n          window.open('https://medium.com/@tanayvasishtha', '_blank')\r\n          setTerminalHistory((prev) => [\r\n            ...prev,\r\n            `ubuntu-developer@portfolio:~$ ${command}`,\r\n            \"Opening Medium profile...\",\r\n            \"Redirecting to https://medium.com/@tanayvasishtha\",\r\n            \"\",\r\n          ])\r\n        } else if (site === \"producthunt\") {\r\n          window.open('https://www.producthunt.com/@tanayvasishtha', '_blank')\r\n          setTerminalHistory((prev) => [\r\n            ...prev,\r\n            `ubuntu-developer@portfolio:~$ ${command}`,\r\n            \"Opening Product Hunt profile...\",\r\n            \"Redirecting to https://www.producthunt.com/@tanayvasishtha\",\r\n            \"\",\r\n          ])\r\n        } else if (site === \"peerlist\") {\r\n          window.open('https://peerlist.io/tanayvasishtha', '_blank')\r\n          setTerminalHistory((prev) => [\r\n            ...prev,\r\n            `ubuntu-developer@portfolio:~$ ${command}`,\r\n            \"Opening Peerlist profile...\",\r\n            \"Redirecting to https://peerlist.io/tanayvasishtha\",\r\n            \"\",\r\n          ])\r\n        } else if (site === \"coffee\") {\r\n          window.open('https://buymeacoffee.com/tanayvasishtha', '_blank')\r\n          setTerminalHistory((prev) => [\r\n            ...prev,\r\n            `ubuntu-developer@portfolio:~$ ${command}`,\r\n            \"Opening Buy Me a Coffee...\",\r\n            \"Redirecting to https://buymeacoffee.com/tanayvasishtha\",\r\n            \"\",\r\n          ])\r\n        } else if (site === \"debtrix\") {\r\n          window.open('https://debtrix-nine.vercel.app', '_blank')\r\n          setTerminalHistory((prev) => [\r\n            ...prev,\r\n            `ubuntu-developer@portfolio:~$ ${command}`,\r\n            \"Opening Debtrix project...\",\r\n            \"Redirecting to https://debtrix-nine.vercel.app\",\r\n            \"\",\r\n          ])\r\n        } else if (site === \"weloveqr\") {\r\n          window.open('https://weloveqr.netlify.app/', '_blank')\r\n          setTerminalHistory((prev) => [\r\n            ...prev,\r\n            `ubuntu-developer@portfolio:~$ ${command}`,\r\n            \"Opening WeLoveQR project...\",\r\n            \"Redirecting to https://weloveqr.netlify.app/\",\r\n            \"\",\r\n          ])\r\n        } else if (site === \"synthralabs\") {\r\n          window.open('https://github.com/orgs/SynthraLabs', '_blank')\r\n          setTerminalHistory((prev) => [\r\n            ...prev,\r\n            `ubuntu-developer@portfolio:~$ ${command}`,\r\n            \"Opening SynthraLabs organization...\",\r\n            \"Redirecting to https://github.com/orgs/SynthraLabs\",\r\n            \"\",\r\n          ])\r\n        } else {\r\n          setTerminalHistory((prev) => [\r\n            ...prev,\r\n            `ubuntu-developer@portfolio:~$ ${command}`,\r\n            `Error: Site \"${site}\" not found.`,\r\n            'Available sites: github, linkedin, x, medium, producthunt, peerlist, coffee, debtrix, weloveqr, synthralabs',\r\n            \"\",\r\n          ])\r\n        }\r\n      } else if (command === \"clear\") {\r\n        setTerminalHistory([])\r\n        return\r\n      } else if (command === \"date\") {\r\n        const now = new Date()\r\n        setTerminalHistory((prev) => [\r\n          ...prev,\r\n          `ubuntu-developer@portfolio:~$ ${command}`,\r\n          now.toLocaleString(),\r\n          \"\",\r\n        ])\r\n      } else if (command === \"whoami\") {\r\n        setTerminalHistory((prev) => [\r\n          ...prev,\r\n          `ubuntu-developer@portfolio:~$ ${command}`,\r\n          \"tanayvasishtha\",\r\n          \"\",\r\n        ])\r\n      } else if (command === \"email\") {\r\n        setTerminalHistory((prev) => [\r\n          ...prev,\r\n          `ubuntu-developer@portfolio:~$ ${command}`,\r\n          \"edgepersonal2004@gmail.com\",\r\n          \"\",\r\n        ])\r\n      } else if (command === \"\") {\r\n        setTerminalHistory((prev) => [...prev, \"ubuntu-developer@portfolio:~$ \", \"\"])\r\n      } else {\r\n        setTerminalHistory((prev) => [\r\n          ...prev,\r\n          `ubuntu-developer@portfolio:~$ ${command}`,\r\n          `bash: ${command}: command not found`,\r\n          'Type \"help\" for available commands.',\r\n          \"\",\r\n        ])\r\n      }\r\n\r\n      setTimeout(() => {\r\n        if (terminalRef.current) {\r\n          terminalRef.current.scrollTop = terminalRef.current.scrollHeight\r\n        }\r\n      }, 100)\r\n    }\r\n  }\r\n\r\n  const TerminalWindow = () => (\r\n    <TerminalComponent onClose={() => closeWindow(\"terminal\")} />\r\n  )\r\n\r\n  const ProjectsWindow = () => (\r\n    <div className=\"h-full bg-card p-6 overflow-y-auto\">\r\n      <h2 className=\"text-2xl font-bold text-foreground mb-6\">My Projects</h2>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {[\r\n          {\r\n            title: \"WeLoveQR\",\r\n            description: \"Modern QR code generator with advanced customization, analytics, and bulk generation features\",\r\n            tech: [\"React\", \"Node.js\", \"MongoDB\", \"QR Code API\"],\r\n            status: \"Live\",\r\n            link: \"https://weloveqr.netlify.app\"\r\n          },\r\n          {\r\n            title: \"Dark Mode Bang\",\r\n            description: \"Chrome & Firefox extension that instantly applies dark mode to any website with one click\",\r\n            tech: [\"JavaScript\", \"Chrome Extension API\", \"Firefox WebExtensions\", \"CSS\"],\r\n            status: \"Live\",\r\n            link: \"https://chromewebstore.google.com/detail/dark-mode-bang-universal/hnnplkbhhlfopkkhfepdiljdbclfbpjh\"\r\n          },\r\n          {\r\n            title: \"Volume Bang\",\r\n            description: \"Browser extension for instant volume control and audio management across all tabs\",\r\n            tech: [\"JavaScript\", \"Web Audio API\", \"Chrome Extension API\", \"Firefox WebExtensions\"],\r\n            status: \"Live\",\r\n            link: \"https://chromewebstore.google.com/detail/volume-bang-premium-audio/ancjplaiedoominjbebhdgjipcgfbopl\"\r\n          },\r\n          {\r\n            title: \"Speed Bang\",\r\n            description: \"Performance optimization extension that accelerates web browsing and reduces loading times\",\r\n            tech: [\"JavaScript\", \"Performance API\", \"Chrome Extension API\", \"Firefox WebExtensions\"],\r\n            status: \"Live\",\r\n            link: \"https://chromewebstore.google.com/detail/speedbang-multiplatform-v/kaacodjcoaepldmhnpgodhafbcmlkfgo\"\r\n          },\r\n          {\r\n            title: \"Portfolio Website\",\r\n            description: \"Interactive Ubuntu desktop simulation as a portfolio website\",\r\n            features: [\r\n              \"Full Ubuntu desktop simulation\",\r\n              \"Draggable windows and icons\",\r\n              \"Working terminal with commands\",\r\n              \"Responsive design\",\r\n              \"Project showcases\",\r\n              \"Contact integration\",\r\n              \"Loading screen animation\",\r\n            ],\r\n            tech: [\"Next.js\", \"TypeScript\", \"Tailwind CSS\", \"Lucide Icons\"],\r\n            status: \"Live\",\r\n          },\r\n        ].map((project, index) => (\r\n          <div key={index} className=\"border border-border rounded-lg p-4 hover:shadow-md transition-shadow\">\r\n            <h3 className=\"text-lg font-semibold text-foreground mb-2\">{project.title}</h3>\r\n            <p className=\"text-card-foreground mb-3\">{project.description}</p>\r\n            {project.link && (\r\n              <div className=\"mb-3\">\r\n                <a\r\n                  href={project.link}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"text-primary hover:text-primary/80 text-sm font-medium flex items-center gap-1\"\r\n                >\r\n                  <ExternalLink className=\"w-3 h-3\" />\r\n                  View Project\r\n                </a>\r\n              </div>\r\n            )}\r\n            <div className=\"mt-4\">\r\n              <span\r\n                className={`inline-block px-3 py-1 rounded-full text-sm font-medium ${project.status === \"Completed\" || project.status === \"Live\"\r\n                  ? \"bg-chart-3/20 text-chart-3\"\r\n                  : \"bg-chart-5/20 text-chart-5\"\r\n                  }`}\r\n              >\r\n                {project.status}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const NotepadWindow = () => (\r\n    <div className=\"h-full bg-card p-4 font-mono text-sm\">\r\n      <div className=\"h-full overflow-y-auto whitespace-pre-wrap text-foreground\">\r\n        {`# Ubuntu Portfolio Commands Guide\r\n# Welcome to my interactive portfolio!\r\n\r\n## Basic Commands:\r\nhelp           - Show this help guide\r\nclear          - Clear terminal history\r\nbanner         - Display the header\r\nhistory        - View command history\r\n\r\n## About Commands:\r\nwhois          - Who is Tanay?\r\nwhoami         - Who are you?\r\nsocial         - Display social networks\r\nprojects       - View coding projects\r\nemail          - Contact me\r\nsponsor me     - Support me on Buy Me a Coffee\r\n\r\n## AI & Fun Commands:\r\nai             - Ask the AI assistant\r\nmatrix         - Enter the Matrix\r\nhack           - Hacker mode activated\r\nlove           - Show some love\r\nsudo           - Only use if you're admin\r\n\r\n## Secret Commands:\r\nsecret         - Find the password (hint: try 'Banger')\r\n\r\n## Social Links:\r\ngithub         - Open GitHub profile\r\nlinkedin       - Open LinkedIn profile\r\ntwitter        - Open Twitter profile\r\n\r\n## Project Commands:\r\ndarkmodebang   - Open Dark Mode Bang extension\r\nvolumebang     - Open Volume Bang extension\r\nspeedbang      - Open Speed Bang extension\r\nweloveqr       - Open WeLoveQR web app\r\n\r\n## Tips:\r\n- All commands are case-sensitive\r\n- Use arrow keys to navigate command history\r\n- Type 'help' anytime for this guide\r\n- Some commands have hidden features!\r\n\r\nHappy exploring! 🐧`}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const AboutWindow = () => (\r\n    <div className=\"h-full bg-card p-6 overflow-y-auto\">\r\n      <div className=\"max-w-2xl mx-auto\">\r\n        <div className=\"text-center mb-6\">\r\n          <div className=\"w-24 h-24 rounded-full mx-auto mb-4 overflow-hidden border-2 border-primary\">\r\n            <img\r\n              src=\"/Best Pfp.jpg\"\r\n              alt=\"Tanay Vasishtha\"\r\n              className=\"w-full h-full object-cover\"\r\n            />\r\n          </div>\r\n          <h2 className=\"text-2xl font-bold text-foreground\">Tanay Vasishtha</h2>\r\n          <p className=\"text-card-foreground\">B-Tech Student & Builder</p>\r\n        </div>\r\n        <div className=\"space-y-4 text-card-foreground\">\r\n          <p>\r\n            As a fourth year B-Tech student, I am driven by passion for exploring the intersection of technology and society.\r\n            With a strong foundation in mathematics and science, I am constantly seeking new challenges to enhance my skills and knowledge.\r\n          </p>\r\n          <p>\r\n            During my leisure time at college, I have been actively involved in various extracurricular activities, including\r\n            graphic designing, video editing and photography, which have helped me develop a creative approach to problem-solving.\r\n            I have also taken on creative roles in student organizations, which have taught me valuable skills in communication and teamwork.\r\n          </p>\r\n          <p>\r\n            With a keen interest in emerging technologies such as artificial intelligence and blockchain, I am eager to contribute\r\n            my knowledge and skills to the tech industry. I am seeking opportunities to gain hands-on experience through internships\r\n            or projects, and I am excited to connect with professionals in the field.\r\n          </p>\r\n          <p>\r\n            My ultimate goal is to use my technical expertise to create innovative solutions that positively impact society.\r\n            I am committed to lifelong learning and constantly pushing myself to grow both personally and professionally.\r\n          </p>\r\n        </div>\r\n        <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3 pt-6\">\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"outline\"\r\n            className=\"hover:bg-primary hover:text-primary-foreground transition-colors\"\r\n            onClick={() => window.open('https://github.com/tanayvasishtha', '_blank')}\r\n          >\r\n            <Github className=\"w-4 h-4 mr-2\" />\r\n            GitHub\r\n          </Button>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"outline\"\r\n            className=\"hover:bg-primary hover:text-primary-foreground transition-colors\"\r\n            onClick={() => window.open('https://www.linkedin.com/in/tanayvasishtha/', '_blank')}\r\n          >\r\n            <Linkedin className=\"w-4 h-4 mr-2\" />\r\n            LinkedIn\r\n          </Button>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"outline\"\r\n            className=\"hover:bg-primary hover:text-primary-foreground transition-colors\"\r\n            onClick={() => window.open('https://x.com/TanayVasishtha', '_blank')}\r\n          >\r\n            <XLogo className=\"w-4 h-4\" />\r\n          </Button>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"outline\"\r\n            className=\"hover:bg-primary hover:text-primary-foreground transition-colors\"\r\n            onClick={() => window.open('https://medium.com/@tanayvasishtha', '_blank')}\r\n          >\r\n            <BookOpen className=\"w-4 h-4 mr-2\" />\r\n            Medium\r\n          </Button>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"outline\"\r\n            className=\"hover:bg-primary hover:text-primary-foreground transition-colors\"\r\n            onClick={() => window.open('https://www.producthunt.com/@tanayvasishtha', '_blank')}\r\n          >\r\n            <Zap className=\"w-4 h-4 mr-2\" />\r\n            Product Hunt\r\n          </Button>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"outline\"\r\n            className=\"hover:bg-primary hover:text-primary-foreground transition-colors\"\r\n            onClick={() => window.open('https://peerlist.io/tanayvasishtha', '_blank')}\r\n          >\r\n            <User className=\"w-4 h-4 mr-2\" />\r\n            Peerlist\r\n          </Button>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"outline\"\r\n            className=\"hover:bg-primary hover:text-primary-foreground transition-colors\"\r\n            onClick={() => window.open('https://buymeacoffee.com/tanayvasishtha', '_blank')}\r\n          >\r\n            <Coffee className=\"w-4 h-4 mr-2\" />\r\n            Buy me a coffee\r\n          </Button>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"outline\"\r\n            className=\"hover:bg-primary hover:text-primary-foreground transition-colors\"\r\n          >\r\n            <Download className=\"w-4 h-4 mr-2\" />\r\n            Resume\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const SkillsWindow = () => {\r\n    const skillCategories = {\r\n      \"Frontend\": [\r\n        { name: \"React\", icon: \"/assets/skills-icons/react.png\" },\r\n        { name: \"Vue\", icon: \"/assets/skills-icons/vue.png\" },\r\n        { name: \"TypeScript\", icon: \"/assets/skills-icons/typescript.png\" },\r\n        { name: \"JavaScript\", icon: \"/assets/skills-icons/javascript.png\" },\r\n        { name: \"HTML\", icon: \"/assets/skills-icons/html.png\" },\r\n        { name: \"CSS\", icon: \"/assets/skills-icons/css.png\" },\r\n        { name: \"TailwindCSS\", icon: \"/assets/skills-icons/tailwindcss.png\" },\r\n        { name: \"Sass\", icon: \"/assets/skills-icons/sass.png\" },\r\n        { name: \"Bootstrap\", icon: \"/assets/skills-icons/bootstrap.png\" },\r\n        { name: \"Nuxt\", icon: \"/assets/skills-icons/nuxt.png\" },\r\n        { name: \"Astro\", icon: \"/assets/skills-icons/astro.png\" },\r\n        { name: \"Svelte\", icon: \"/assets/skills-icons/svelte.png\" },\r\n      ],\r\n      \"Backend\": [\r\n        { name: \"Node.js\", icon: \"/assets/skills-icons/nodejs.png\" },\r\n        { name: \"Express\", icon: \"/assets/skills-icons/express.png\" },\r\n        { name: \"Fastify\", icon: \"/assets/skills-icons/fastify.png\" },\r\n        { name: \"NestJS\", icon: \"/assets/skills-icons/nestjs.png\" },\r\n        { name: \"Python\", icon: \"/assets/skills-icons/python.png\" },\r\n        { name: \"Django\", icon: \"/assets/skills-icons/django.png\" },\r\n        { name: \"Flask\", icon: \"/assets/skills-icons/flask.png\" },\r\n        { name: \"FastAPI\", icon: \"/assets/skills-icons/fastapi.png\" },\r\n        { name: \"C#\", icon: \"/assets/skills-icons/csharp.png\" },\r\n        { name: \"Rust\", icon: \"/assets/skills-icons/rust.png\" },\r\n      ],\r\n      \"Database\": [\r\n        { name: \"MongoDB\", icon: \"/assets/skills-icons/mongodb.png\" },\r\n        { name: \"PostgreSQL\", icon: \"/assets/skills-icons/postgres.png\" },\r\n        { name: \"Mongoose\", icon: \"/assets/skills-icons/mongoose.png\" },\r\n        { name: \"Prisma\", icon: \"/assets/skills-icons/prisma.png\" },\r\n      ],\r\n      \"DevOps & Cloud\": [\r\n        { name: \"Docker\", icon: \"/assets/skills-icons/docker.png\" },\r\n        { name: \"Kubernetes\", icon: \"/assets/skills-icons/kubernetes.png\" },\r\n        { name: \"AWS\", icon: \"/assets/skills-icons/aws.png\" },\r\n        { name: \"Terraform\", icon: \"/assets/skills-icons/terraform.png\" },\r\n        { name: \"Serverless\", icon: \"/assets/skills-icons/serverless.png\" },\r\n        { name: \"Vercel\", icon: \"/assets/skills-icons/vercel.png\" },\r\n      ],\r\n      \"Data Science & ML\": [\r\n        { name: \"Python\", icon: \"/assets/skills-icons/python.png\" },\r\n        { name: \"NumPy\", icon: \"/assets/skills-icons/numpy.png\" },\r\n        { name: \"Pandas\", icon: \"/assets/skills-icons/pandas.png\" },\r\n        { name: \"Scikit-learn\", icon: \"/assets/skills-icons/scikit-learn.png\" },\r\n        { name: \"PyTorch\", icon: \"/assets/skills-icons/pytorch.png\" },\r\n        { name: \"XGBoost\", icon: \"/assets/skills-icons/xgboost.png\" },\r\n        { name: \"SciPy\", icon: \"/assets/skills-icons/scipy.png\" },\r\n        { name: \"Seaborn\", icon: \"/assets/skills-icons/seaborn.png\" },\r\n        { name: \"MLflow\", icon: \"/assets/skills-icons/mlflow.png\" },\r\n        { name: \"LangChain\", icon: \"/assets/skills-icons/langchain.png\" },\r\n        { name: \"Evidently\", icon: \"/assets/skills-icons/evidently.png\" },\r\n        { name: \"Prefect\", icon: \"/assets/skills-icons/prefect.png\" },\r\n        { name: \"Grafana\", icon: \"/assets/skills-icons/grafana.png\" },\r\n        { name: \"MATLAB\", icon: \"/assets/skills-icons/matlab.png\" },\r\n      ],\r\n      \"Tools & Others\": [\r\n        { name: \"Git\", icon: \"/assets/skills-icons/git.png\" },\r\n        { name: \"Bitbucket\", icon: \"/assets/skills-icons/bitbucket.png\" },\r\n        { name: \"Jira\", icon: \"/assets/skills-icons/jira.png\" },\r\n        { name: \"PyPI\", icon: \"/assets/skills-icons/pypi.png\" },\r\n        { name: \"Pytest\", icon: \"/assets/skills-icons/pytest.png\" },\r\n        { name: \"Pylint\", icon: \"/assets/skills-icons/pylint.png\" },\r\n        { name: \"Conda\", icon: \"/assets/skills-icons/conda.png\" },\r\n        { name: \"Venv\", icon: \"/assets/skills-icons/venv.png\" },\r\n        { name: \"Redux\", icon: \"/assets/skills-icons/redux.png\" },\r\n        { name: \"Pinia\", icon: \"/assets/skills-icons/pinia.png\" },\r\n      ]\r\n    }\r\n\r\n    return (\r\n      <div className=\"h-full bg-card p-6 overflow-y-auto\">\r\n        <h2 className=\"text-2xl font-bold text-foreground mb-6\">Skills & Technologies</h2>\r\n        <div className=\"space-y-8\">\r\n          {Object.entries(skillCategories).map(([category, skills]) => (\r\n            <div key={category}>\r\n              <h3 className=\"text-lg font-semibold text-foreground mb-4 border-b border-border pb-2\">\r\n                {category}\r\n              </h3>\r\n              <div className=\"grid grid-cols-4 sm:grid-cols-6 md:grid-cols-8 lg:grid-cols-10 gap-4\">\r\n                {skills.map((skill) => (\r\n                  <div\r\n                    key={skill.name}\r\n                    className=\"flex flex-col items-center p-3 rounded-lg hover:bg-muted/50 transition-colors group cursor-pointer\"\r\n                    title={skill.name}\r\n                  >\r\n                    <div className=\"w-12 h-12 mb-2 flex items-center justify-center\">\r\n                      <img\r\n                        src={skill.icon}\r\n                        alt={skill.name}\r\n                        className=\"w-10 h-10 object-contain group-hover:scale-110 transition-transform\"\r\n                      />\r\n                    </div>\r\n                    <span className=\"text-xs text-card-foreground text-center leading-tight\">\r\n                      {skill.name}\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const ContactWindow = () => (\r\n    <div className=\"h-full bg-card p-6 overflow-y-auto\">\r\n      <div className=\"max-w-md mx-auto\">\r\n        <h2 className=\"text-2xl font-bold text-foreground mb-6 text-center\">Get In Touch</h2>\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center space-x-3 p-3 border border-border rounded-lg\">\r\n            <Mail className=\"w-5 h-5 text-primary\" />\r\n            <div>\r\n              <p className=\"font-medium text-foreground\">Email</p>\r\n              <p className=\"text-card-foreground\">edgepersonal2004@gmail.com</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center space-x-3 p-3 border border-border rounded-lg\">\r\n            <Github className=\"w-5 h-5 text-primary\" />\r\n            <div>\r\n              <p className=\"font-medium text-foreground\">GitHub</p>\r\n              <p className=\"text-card-foreground\">@tanayvasishtha</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center space-x-3 p-3 border border-border rounded-lg\">\r\n            <Linkedin className=\"w-5 h-5 text-primary\" />\r\n            <div>\r\n              <p className=\"font-medium text-foreground\">LinkedIn</p>\r\n              <p className=\"text-card-foreground\">/in/tanayvasishtha</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center space-x-3 p-3 border border-border rounded-lg\">\r\n            <XLogo className=\"w-5 h-5 text-primary\" />\r\n            <div>\r\n              <p className=\"font-medium text-foreground\">X</p>\r\n              <p className=\"text-card-foreground\">@TanayVasishtha</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-6\">\r\n          <Button\r\n            className=\"w-full bg-primary hover:bg-primary/90 text-primary-foreground\"\r\n            onClick={() => window.open('https://x.com/TanayVasishtha', '_blank')}\r\n          >\r\n            <Mail className=\"w-4 h-4 mr-2\" />\r\n            Send Message\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const GalleryWindow = () => {\r\n    const projects = [\r\n      {\r\n        name: \"Dark Mode Bang Screenshot\",\r\n        image: \"/assets/project-gallery/DarkModeBangSc.png\",\r\n        description: \"Universal dark theme browser extension interface\"\r\n      },\r\n      {\r\n        name: \"Dark Mode Bang Logo\",\r\n        image: \"/assets/project-gallery/DarkModeBangLogo.png\",\r\n        description: \"Dark Mode Bang branding and logo design\"\r\n      },\r\n      {\r\n        name: \"Speed Bang Screenshot\",\r\n        image: \"/assets/project-gallery/SpeedBangSc.png\",\r\n        description: \"Multiplatform video speed controller interface\"\r\n      },\r\n      {\r\n        name: \"Speed Bang Logo\",\r\n        image: \"/assets/project-gallery/SpeedBangLogo.png\",\r\n        description: \"Speed Bang branding and logo design\"\r\n      },\r\n      {\r\n        name: \"Volume Bang Screenshot\",\r\n        image: \"/assets/project-gallery/VolumeBangSc.png\",\r\n        description: \"Premium audio booster extension interface\"\r\n      },\r\n      {\r\n        name: \"Volume Bang Logo\",\r\n        image: \"/assets/project-gallery/VolumeBanglogo.png\",\r\n        description: \"Volume Bang branding and logo design\"\r\n      }\r\n    ]\r\n\r\n    return (\r\n      <div className=\"h-full bg-card p-6 overflow-y-auto\">\r\n        <h2 className=\"text-2xl font-bold text-foreground mb-6\">Project Gallery</h2>\r\n        <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\r\n          {projects.map((project, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"bg-muted rounded-lg border border-border overflow-hidden hover:shadow-lg transition-shadow cursor-pointer\"\r\n            >\r\n              <div className=\"aspect-square bg-gray-100 flex items-center justify-center\">\r\n                <img\r\n                  src={project.image}\r\n                  alt={project.name}\r\n                  className=\"w-full h-full object-cover hover:scale-105 transition-transform duration-200\"\r\n                />\r\n              </div>\r\n              <div className=\"p-3\">\r\n                <h3 className=\"font-medium text-foreground text-sm mb-1 line-clamp-2\">{project.name}</h3>\r\n                <p className=\"text-xs text-card-foreground line-clamp-2\">{project.description}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const SettingsWindow = () => {\r\n    const wallpapers = [\r\n      { name: \"Ubuntu Wallpaper\", path: \"/assets/wallpapers/ubuntu-wallpaper.jpg\" },\r\n      { name: \"Clouds\", path: \"/assets/wallpapers/clouds.jpg\" },\r\n      { name: \"Valley\", path: \"/assets/wallpapers/valley.jpg\" },\r\n      { name: \"South France\", path: \"/assets/wallpapers/south-france.jpg\" },\r\n      { name: \"Mountain\", path: \"/assets/wallpapers/mountain.png\" },\r\n      { name: \"Numbat Dark\", path: \"/assets/wallpapers/numbat-dark.png\" },\r\n      { name: \"Numbat Light\", path: \"/assets/wallpapers/numbat-light.png\" },\r\n      { name: \"Crown Dark\", path: \"/assets/wallpapers/crown-dark.png\" },\r\n      { name: \"Crown Light\", path: \"/assets/wallpapers/crown-light.png\" },\r\n    ]\r\n\r\n    const changeWallpaper = (wallpaperPath: string) => {\r\n      setCurrentWallpaper(wallpaperPath)\r\n      showNotification(`Wallpaper changed to ${wallpapers.find(w => w.path === wallpaperPath)?.name}`, 'success')\r\n    }\r\n\r\n    return (\r\n      <div className=\"h-full bg-card p-6 overflow-y-auto\">\r\n        <h2 className=\"text-2xl font-bold text-foreground mb-6\">System Settings</h2>\r\n        <div className=\"space-y-6\">\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-foreground mb-3\">Wallpaper</h3>\r\n            <div className=\"grid grid-cols-3 gap-3\">\r\n              {wallpapers.map((wallpaper) => (\r\n                <div\r\n                  key={wallpaper.path}\r\n                  className=\"relative cursor-pointer group\"\r\n                  onClick={() => changeWallpaper(wallpaper.path)}\r\n                >\r\n                  <img\r\n                    src={wallpaper.path}\r\n                    alt={wallpaper.name}\r\n                    className=\"w-full h-20 object-cover rounded-lg border-2 border-transparent group-hover:border-orange-500 transition-colors\"\r\n                  />\r\n                  <div className=\"absolute inset-0 bg-black/0 group-hover:bg-black/20 rounded-lg transition-colors flex items-center justify-center\">\r\n                    <span className=\"text-white text-xs font-medium opacity-0 group-hover:opacity-100 transition-opacity\">\r\n                      {wallpaper.name}\r\n                    </span>\r\n                  </div>\r\n                  {currentWallpaper === wallpaper.path && (\r\n                    <div className=\"absolute top-1 right-1 w-3 h-3 bg-orange-500 rounded-full\"></div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"border border-border rounded-lg p-4\">\r\n            <h3 className=\"font-semibold text-foreground mb-2\">Display</h3>\r\n            <p className=\"text-card-foreground text-sm\">Resolution: 1920x1080</p>\r\n            <p className=\"text-card-foreground text-sm\">Theme: Ubuntu Default</p>\r\n          </div>\r\n          <div className=\"border border-border rounded-lg p-4\">\r\n            <h3 className=\"font-semibold text-foreground mb-2\">System Info</h3>\r\n            <p className=\"text-card-foreground text-sm\">OS: Ubuntu 22.04 LTS</p>\r\n            <p className=\"text-card-foreground text-sm\">Kernel: 5.15.0-generic</p>\r\n            <p className=\"text-card-foreground text-sm\">Desktop: Portfolio Desktop</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  const HelpWindow = () => (\r\n    <div className=\"h-full bg-card p-6 overflow-y-auto\">\r\n      <h2 className=\"text-2xl font-bold text-foreground mb-6\">Help & Support</h2>\r\n      <div className=\"space-y-4\">\r\n        <div className=\"border border-border rounded-lg p-4\">\r\n          <h3 className=\"font-semibold text-foreground mb-2\">Getting Started</h3>\r\n          <p className=\"text-card-foreground\">Welcome to Ubuntu Portfolio Desktop! This is an interactive portfolio showcasing development projects.</p>\r\n        </div>\r\n        <div className=\"border border-border rounded-lg p-4\">\r\n          <h3 className=\"font-semibold text-foreground mb-2\">Desktop Icons</h3>\r\n          <p className=\"text-card-foreground\">Double-click any desktop icon to open applications. Drag icons to reposition them.</p>\r\n        </div>\r\n        <div className=\"border border-border rounded-lg p-4\">\r\n          <h3 className=\"font-semibold text-foreground mb-2\">Terminal Commands</h3>\r\n          <p className=\"text-card-foreground\">Open the Terminal and type 'help' to see available commands.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const FilesWindow = () => (\r\n    <div className=\"h-full bg-card p-6 overflow-y-auto\">\r\n      <h2 className=\"text-2xl font-bold text-foreground mb-6\">File Manager</h2>\r\n      <div className=\"space-y-2\">\r\n        {[\r\n          { name: \"📁 Documents\", type: \"folder\", size: \"2.3 GB\" },\r\n          { name: \"📁 Downloads\", type: \"folder\", size: \"1.1 GB\" },\r\n          { name: \"📁 Pictures\", type: \"folder\", size: \"856 MB\" },\r\n          { name: \"📁 Music\", type: \"folder\", size: \"3.2 GB\" },\r\n          { name: \"📁 Videos\", type: \"folder\", size: \"12.4 GB\" },\r\n          { name: \"📄 README.md\", type: \"file\", size: \"7.8 KB\" },\r\n          { name: \"📄 portfolio.txt\", type: \"file\", size: \"1.2 KB\" },\r\n        ].map((item, index) => (\r\n          <div key={index} className=\"flex items-center justify-between p-2 hover:bg-muted rounded cursor-pointer\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <span className=\"text-lg\">{item.name}</span>\r\n            </div>\r\n            <span className=\"text-sm text-muted-foreground\">{item.size}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const TrashWindow = () => (\r\n    <div className=\"h-full bg-card p-6 overflow-y-auto\">\r\n      <h2 className=\"text-2xl font-bold text-foreground mb-6\">Trash</h2>\r\n      <div className=\"text-center py-12\">\r\n        <Trash2 className=\"w-16 h-16 text-muted-foreground mx-auto mb-4\" />\r\n        <p className=\"text-card-foreground\">Trash is empty</p>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const CalculatorWindow = () => {\r\n    const [display, setDisplay] = useState(\"0\")\r\n    const [previousValue, setPreviousValue] = useState<number | null>(null)\r\n    const [operation, setOperation] = useState<string | null>(null)\r\n    const [waitingForOperand, setWaitingForOperand] = useState(false)\r\n    const [isScientific, setIsScientific] = useState(false)\r\n    const [history, setHistory] = useState<string[]>([])\r\n    const [memory, setMemory] = useState(0)\r\n    const [angleMode, setAngleMode] = useState(\"DEG\") // DEG or RAD\r\n\r\n    const inputNumber = (num: string) => {\r\n      if (waitingForOperand) {\r\n        setDisplay(num)\r\n        setWaitingForOperand(false)\r\n      } else {\r\n        setDisplay(display === \"0\" ? num : display + num)\r\n      }\r\n    }\r\n\r\n    const inputOperation = (nextOperation: string) => {\r\n      const inputValue = parseFloat(display)\r\n\r\n      if (previousValue === null) {\r\n        setPreviousValue(inputValue)\r\n      } else if (operation) {\r\n        const currentValue = previousValue || 0\r\n        const newValue = calculate(currentValue, inputValue, operation)\r\n\r\n        setDisplay(String(newValue))\r\n        setPreviousValue(newValue)\r\n      }\r\n\r\n      setWaitingForOperand(true)\r\n      setOperation(nextOperation)\r\n    }\r\n\r\n    const calculate = (firstValue: number, secondValue: number, operation: string): number => {\r\n      let result = 0\r\n      switch (operation) {\r\n        case \"+\":\r\n          result = firstValue + secondValue\r\n          break\r\n        case \"-\":\r\n          result = firstValue - secondValue\r\n          break\r\n        case \"×\":\r\n          result = firstValue * secondValue\r\n          break\r\n        case \"÷\":\r\n          result = firstValue / secondValue\r\n          break\r\n        case \"^\":\r\n          result = Math.pow(firstValue, secondValue)\r\n          break\r\n        case \"√\":\r\n          result = Math.sqrt(firstValue)\r\n          break\r\n        case \"sin\":\r\n          result = Math.sin(angleMode === \"DEG\" ? firstValue * Math.PI / 180 : firstValue)\r\n          break\r\n        case \"cos\":\r\n          result = Math.cos(angleMode === \"DEG\" ? firstValue * Math.PI / 180 : firstValue)\r\n          break\r\n        case \"tan\":\r\n          result = Math.tan(angleMode === \"DEG\" ? firstValue * Math.PI / 180 : firstValue)\r\n          break\r\n        case \"log\":\r\n          result = Math.log10(firstValue)\r\n          break\r\n        case \"ln\":\r\n          result = Math.log(firstValue)\r\n          break\r\n        case \"!\":\r\n          result = factorial(firstValue)\r\n          break\r\n        default:\r\n          result = secondValue\r\n      }\r\n\r\n      // Add to history\r\n      const historyEntry = `${firstValue} ${operation} ${secondValue} = ${result}`\r\n      setHistory(prev => [historyEntry, ...prev.slice(0, 9)]) // Keep last 10 entries\r\n\r\n      return result\r\n    }\r\n\r\n    const factorial = (n: number) => {\r\n      if (n < 0) return NaN\r\n      if (n === 0 || n === 1) return 1\r\n      let result = 1\r\n      for (let i = 2; i <= n; i++) {\r\n        result *= i\r\n      }\r\n      return result\r\n    }\r\n\r\n    const performCalculation = () => {\r\n      const inputValue = parseFloat(display)\r\n\r\n      if (previousValue !== null && operation) {\r\n        const newValue = calculate(previousValue, inputValue, operation)\r\n        setDisplay(String(newValue))\r\n        setPreviousValue(null)\r\n        setOperation(null)\r\n        setWaitingForOperand(true)\r\n      }\r\n    }\r\n\r\n    const clear = () => {\r\n      setDisplay(\"0\")\r\n      setPreviousValue(null)\r\n      setOperation(null)\r\n      setWaitingForOperand(false)\r\n    }\r\n\r\n    const clearEntry = () => {\r\n      setDisplay(\"0\")\r\n    }\r\n\r\n    const backspace = () => {\r\n      if (display.length > 1) {\r\n        setDisplay(display.slice(0, -1))\r\n      } else {\r\n        setDisplay(\"0\")\r\n      }\r\n    }\r\n\r\n    const memoryClear = () => setMemory(0)\r\n    const memoryRecall = () => setDisplay(String(memory))\r\n    const memoryAdd = () => setMemory(memory + parseFloat(display))\r\n    const memorySubtract = () => setMemory(memory - parseFloat(display))\r\n    const memoryStore = () => setMemory(parseFloat(display))\r\n\r\n    const toggleAngleMode = () => {\r\n      setAngleMode(angleMode === \"DEG\" ? \"RAD\" : \"DEG\")\r\n    }\r\n\r\n    return (\r\n      <div className=\"h-full bg-gray-100 flex\">\r\n        {/* Main Calculator */}\r\n        <div className=\"flex-1 p-4\">\r\n          <div className=\"max-w-md mx-auto\">\r\n            {/* Header */}\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h2 className=\"text-xl font-semibold text-gray-800\">Calculator</h2>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <button\r\n                  onClick={() => setIsScientific(!isScientific)}\r\n                  className={`px-3 py-1 rounded text-sm font-medium ${isScientific ? \"bg-orange-500 text-white\" : \"bg-gray-200 text-gray-700\"\r\n                    }`}\r\n                >\r\n                  {isScientific ? \"Scientific\" : \"Basic\"}\r\n                </button>\r\n                <button\r\n                  onClick={toggleAngleMode}\r\n                  className=\"px-3 py-1 rounded text-sm font-medium bg-gray-200 text-gray-700\"\r\n                >\r\n                  {angleMode}\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Display */}\r\n            <div className=\"bg-gray-800 text-white text-right text-2xl font-mono p-4 rounded-lg mb-4 min-h-[80px] flex items-center justify-end shadow-inner\">\r\n              <div className=\"break-all\">{display}</div>\r\n            </div>\r\n\r\n            {/* Memory Display */}\r\n            {memory !== 0 && (\r\n              <div className=\"text-sm text-gray-600 mb-2 text-center\">\r\n                Memory: {memory}\r\n              </div>\r\n            )}\r\n\r\n            {/* Basic Calculator */}\r\n            {!isScientific ? (\r\n              <div className=\"grid grid-cols-4 gap-2\">\r\n                {/* Row 1 */}\r\n                <button onClick={clear} className=\"bg-red-500 hover:bg-red-600 text-white font-bold py-3 px-4 rounded-lg transition-colors\">\r\n                  C\r\n                </button>\r\n                <button onClick={clearEntry} className=\"bg-orange-500 hover:bg-orange-600 text-white font-bold py-3 px-4 rounded-lg transition-colors\">\r\n                  CE\r\n                </button>\r\n                <button onClick={backspace} className=\"bg-orange-500 hover:bg-orange-600 text-white font-bold py-3 px-4 rounded-lg transition-colors\">\r\n                  ⌫\r\n                </button>\r\n                <button onClick={() => inputOperation(\"÷\")} className=\"bg-orange-500 hover:bg-orange-600 text-white font-bold py-3 px-4 rounded-lg transition-colors\">\r\n                  ÷\r\n                </button>\r\n\r\n                {/* Row 2 */}\r\n                <button onClick={() => inputNumber(\"7\")} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-3 px-4 rounded-lg transition-colors\">\r\n                  7\r\n                </button>\r\n                <button onClick={() => inputNumber(\"8\")} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-3 px-4 rounded-lg transition-colors\">\r\n                  8\r\n                </button>\r\n                <button onClick={() => inputNumber(\"9\")} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-3 px-4 rounded-lg transition-colors\">\r\n                  9\r\n                </button>\r\n                <button onClick={() => inputOperation(\"×\")} className=\"bg-orange-500 hover:bg-orange-600 text-white font-bold py-3 px-4 rounded-lg transition-colors\">\r\n                  ×\r\n                </button>\r\n\r\n                {/* Row 3 */}\r\n                <button onClick={() => inputNumber(\"4\")} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-3 px-4 rounded-lg transition-colors\">\r\n                  4\r\n                </button>\r\n                <button onClick={() => inputNumber(\"5\")} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-3 px-4 rounded-lg transition-colors\">\r\n                  5\r\n                </button>\r\n                <button onClick={() => inputNumber(\"6\")} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-3 px-4 rounded-lg transition-colors\">\r\n                  6\r\n                </button>\r\n                <button onClick={() => inputOperation(\"-\")} className=\"bg-orange-500 hover:bg-orange-600 text-white font-bold py-3 px-4 rounded-lg transition-colors\">\r\n                  -\r\n                </button>\r\n\r\n                {/* Row 4 */}\r\n                <button onClick={() => inputNumber(\"1\")} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-3 px-4 rounded-lg transition-colors\">\r\n                  1\r\n                </button>\r\n                <button onClick={() => inputNumber(\"2\")} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-3 px-4 rounded-lg transition-colors\">\r\n                  2\r\n                </button>\r\n                <button onClick={() => inputNumber(\"3\")} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-3 px-4 rounded-lg transition-colors\">\r\n                  3\r\n                </button>\r\n                <button onClick={() => inputOperation(\"+\")} className=\"bg-orange-500 hover:bg-orange-600 text-white font-bold py-3 px-4 rounded-lg transition-colors\">\r\n                  +\r\n                </button>\r\n\r\n                {/* Row 5 */}\r\n                <button onClick={() => inputNumber(\"0\")} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-3 px-4 rounded-lg transition-colors col-span-2\">\r\n                  0\r\n                </button>\r\n                <button onClick={() => setDisplay(display + \".\")} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-3 px-4 rounded-lg transition-colors\">\r\n                  .\r\n                </button>\r\n                <button onClick={performCalculation} className=\"bg-orange-500 hover:bg-orange-600 text-white font-bold py-3 px-4 rounded-lg transition-colors\">\r\n                  =\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              /* Scientific Calculator */\r\n              <div className=\"grid grid-cols-5 gap-2\">\r\n                {/* Row 1 - Scientific Functions */}\r\n                <button onClick={() => { setDisplay(String(Math.sin(angleMode === \"DEG\" ? parseFloat(display) * Math.PI / 180 : parseFloat(display)))) }} className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  sin\r\n                </button>\r\n                <button onClick={() => { setDisplay(String(Math.cos(angleMode === \"DEG\" ? parseFloat(display) * Math.PI / 180 : parseFloat(display)))) }} className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  cos\r\n                </button>\r\n                <button onClick={() => { setDisplay(String(Math.tan(angleMode === \"DEG\" ? parseFloat(display) * Math.PI / 180 : parseFloat(display)))) }} className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  tan\r\n                </button>\r\n                <button onClick={() => { setDisplay(String(Math.log10(parseFloat(display)))) }} className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  log\r\n                </button>\r\n                <button onClick={() => { setDisplay(String(Math.log(parseFloat(display)))) }} className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  ln\r\n                </button>\r\n\r\n                {/* Row 2 - More Functions */}\r\n                <button onClick={() => { setDisplay(String(Math.sqrt(parseFloat(display)))) }} className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  √\r\n                </button>\r\n                <button onClick={() => { setDisplay(String(Math.pow(parseFloat(display), 2))) }} className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  x²\r\n                </button>\r\n                <button onClick={() => { setDisplay(String(Math.pow(parseFloat(display), 3))) }} className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  x³\r\n                </button>\r\n                <button onClick={() => { setDisplay(String(factorial(parseFloat(display)))) }} className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  x!\r\n                </button>\r\n                <button onClick={() => { setDisplay(String(Math.pow(10, parseFloat(display)))) }} className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  10ˣ\r\n                </button>\r\n\r\n                {/* Row 3 - Constants and Operations */}\r\n                <button onClick={() => setDisplay(String(Math.PI))} className=\"bg-purple-500 hover:bg-purple-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  π\r\n                </button>\r\n                <button onClick={() => setDisplay(String(Math.E))} className=\"bg-purple-500 hover:bg-purple-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  e\r\n                </button>\r\n                <button onClick={() => inputOperation(\"^\")} className=\"bg-orange-500 hover:bg-orange-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  xʸ\r\n                </button>\r\n                <button onClick={() => { setDisplay(String(1 / parseFloat(display))) }} className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  1/x\r\n                </button>\r\n                <button onClick={() => { setDisplay(String(Math.abs(parseFloat(display)))) }} className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  |x|\r\n                </button>\r\n\r\n                {/* Row 4 - Memory Functions */}\r\n                <button onClick={memoryClear} className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  MC\r\n                </button>\r\n                <button onClick={memoryRecall} className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  MR\r\n                </button>\r\n                <button onClick={memoryAdd} className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  M+\r\n                </button>\r\n                <button onClick={memorySubtract} className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  M-\r\n                </button>\r\n                <button onClick={memoryStore} className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  MS\r\n                </button>\r\n\r\n                {/* Row 5 - Basic Operations */}\r\n                <button onClick={clear} className=\"bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  C\r\n                </button>\r\n                <button onClick={clearEntry} className=\"bg-orange-500 hover:bg-orange-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  CE\r\n                </button>\r\n                <button onClick={backspace} className=\"bg-orange-500 hover:bg-orange-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  ⌫\r\n                </button>\r\n                <button onClick={() => inputOperation(\"÷\")} className=\"bg-orange-500 hover:bg-orange-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  ÷\r\n                </button>\r\n                <button onClick={() => inputOperation(\"×\")} className=\"bg-orange-500 hover:bg-orange-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  ×\r\n                </button>\r\n\r\n                {/* Row 6 - Numbers */}\r\n                <button onClick={() => inputNumber(\"7\")} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  7\r\n                </button>\r\n                <button onClick={() => inputNumber(\"8\")} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  8\r\n                </button>\r\n                <button onClick={() => inputNumber(\"9\")} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  9\r\n                </button>\r\n                <button onClick={() => inputOperation(\"-\")} className=\"bg-orange-500 hover:bg-orange-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  -\r\n                </button>\r\n                <button onClick={() => inputOperation(\"+\")} className=\"bg-orange-500 hover:bg-orange-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  +\r\n                </button>\r\n\r\n                {/* Row 7 - More Numbers */}\r\n                <button onClick={() => inputNumber(\"4\")} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  4\r\n                </button>\r\n                <button onClick={() => inputNumber(\"5\")} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  5\r\n                </button>\r\n                <button onClick={() => inputNumber(\"6\")} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  6\r\n                </button>\r\n                <button onClick={() => setDisplay(display + \".\")} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  .\r\n                </button>\r\n                <button onClick={() => { setDisplay(String(-parseFloat(display))) }} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  ±\r\n                </button>\r\n\r\n                {/* Row 8 - Final Row */}\r\n                <button onClick={() => inputNumber(\"1\")} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  1\r\n                </button>\r\n                <button onClick={() => inputNumber(\"2\")} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  2\r\n                </button>\r\n                <button onClick={() => inputNumber(\"3\")} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  3\r\n                </button>\r\n                <button onClick={() => inputNumber(\"0\")} className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  0\r\n                </button>\r\n                <button onClick={performCalculation} className=\"bg-orange-500 hover:bg-orange-600 text-white font-bold py-2 px-3 rounded-lg transition-colors text-sm\">\r\n                  =\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* History Panel */}\r\n        <div className=\"w-64 bg-gray-200 border-l border-gray-300 p-4\">\r\n          <h3 className=\"text-lg font-semibold text-gray-800 mb-3\">History</h3>\r\n          <div className=\"space-y-2 max-h-96 overflow-y-auto\">\r\n            {history.length === 0 ? (\r\n              <p className=\"text-gray-500 text-sm\">No calculations yet</p>\r\n            ) : (\r\n              history.map((entry, index) => (\r\n                <div key={index} className=\"bg-white p-2 rounded text-sm font-mono text-gray-700\">\r\n                  {entry}\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n          {history.length > 0 && (\r\n            <button\r\n              onClick={() => setHistory([])}\r\n              className=\"mt-3 w-full bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded text-sm\"\r\n            >\r\n              Clear History\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const MusicPlayerWindow = () => {\r\n    const [isPlaying, setIsPlaying] = useState(false)\r\n    const [currentTime, setCurrentTime] = useState(0)\r\n    const [volume, setVolume] = useState(50)\r\n    const [currentTrack, setCurrentTrack] = useState(0)\r\n    const [currentPlaylist, setCurrentPlaylist] = useState(\"favorites\")\r\n    const [isShuffled, setIsShuffled] = useState(false)\r\n    const [isRepeated, setIsRepeated] = useState(false)\r\n    const [audioRef, setAudioRef] = useState<HTMLAudioElement | null>(null)\r\n    const [spotifyEmbed, setSpotifyEmbed] = useState(true)\r\n\r\n    const playlists = {\r\n      favorites: {\r\n        name: \"Build Inc.\",\r\n        description: \"The worst thing you can do is know what you need to do and not do it\",\r\n        tracks: [\r\n          { id: 1, title: \"Father Stretch My Hands Pt. 1\", artist: \"Kanye West\", duration: \"2:15\", album: \"The Life of Pablo\", year: \"2016\", cover: \"🎵\", audioUrl: \"https://www.bensound.com/bensound-music/bensound-sunny.mp3\" },\r\n          { id: 2, title: \"Heartless\", artist: \"Kanye West\", duration: \"3:31\", album: \"808s & Heartbreak\", year: \"2008\", cover: \"🎵\", audioUrl: \"https://www.bensound.com/bensound-music/bensound-creativeminds.mp3\" },\r\n          { id: 3, title: \"Flashing Lights\", artist: \"Kanye West, Dwele\", duration: \"3:57\", album: \"Graduation\", year: \"2007\", cover: \"🎵\", audioUrl: \"https://www.bensound.com/bensound-music/bensound-happiness.mp3\" },\r\n          { id: 4, title: \"I Wonder\", artist: \"Kanye West\", duration: \"4:03\", album: \"Graduation\", year: \"2007\", cover: \"🎵\", audioUrl: \"https://www.bensound.com/bensound-music/bensound-energy.mp3\" },\r\n          { id: 5, title: \"Good Life\", artist: \"Kanye West, T-Pain\", duration: \"3:27\", album: \"Graduation\", year: \"2007\", cover: \"🎵\", audioUrl: \"https://www.bensound.com/bensound-music/bensound-dreams.mp3\" },\r\n          { id: 6, title: \"Skyfall\", artist: \"Adele\", duration: \"4:46\", album: \"Skyfall\", year: \"2012\", cover: \"🎵\", audioUrl: \"https://www.bensound.com/bensound-music/bensound-sweet.mp3\" },\r\n          { id: 7, title: \"Happy Nation - 2015 Remastered\", artist: \"Ace of Base\", duration: \"4:16\", album: \"Happy Nation\", year: \"2015\", cover: \"🎵\", audioUrl: \"https://www.bensound.com/bensound-music/bensound-epic.mp3\" }\r\n        ]\r\n      },\r\n      topHits: {\r\n        name: \"Top Hits\",\r\n        description: \"Popular songs right now\",\r\n        tracks: [\r\n          { id: 9, title: \"Blinding Lights\", artist: \"The Weeknd\", duration: \"3:20\", album: \"After Hours\", year: \"2020\", cover: \"🎵\", audioUrl: \"https://www.bensound.com/bensound-music/bensound-sunny.mp3\" },\r\n          { id: 10, title: \"Levitating\", artist: \"Dua Lipa\", duration: \"3:23\", album: \"Future Nostalgia\", year: \"2020\", cover: \"🎵\", audioUrl: \"https://www.bensound.com/bensound-music/bensound-creativeminds.mp3\" },\r\n          { id: 11, title: \"Watermelon Sugar\", artist: \"Harry Styles\", duration: \"2:54\", album: \"Fine Line\", year: \"2019\", cover: \"🎵\", audioUrl: \"https://www.bensound.com/bensound-music/bensound-happiness.mp3\" },\r\n          { id: 12, title: \"Good 4 U\", artist: \"Olivia Rodrigo\", duration: \"2:58\", album: \"SOUR\", year: \"2021\", cover: \"🎵\", audioUrl: \"https://www.bensound.com/bensound-music/bensound-energy.mp3\" }\r\n        ]\r\n      },\r\n      classics: {\r\n        name: \"Classics\",\r\n        description: \"Timeless favorites\",\r\n        tracks: [\r\n          { id: 13, title: \"Bohemian Rhapsody\", artist: \"Queen\", duration: \"5:55\", album: \"A Night at the Opera\", year: \"1975\", cover: \"🎵\", audioUrl: \"https://www.bensound.com/bensound-music/bensound-dreams.mp3\" },\r\n          { id: 14, title: \"Hotel California\", artist: \"Eagles\", duration: \"6:30\", album: \"Hotel California\", year: \"1976\", cover: \"🎵\", audioUrl: \"https://www.bensound.com/bensound-music/bensound-sweet.mp3\" },\r\n          { id: 15, title: \"Imagine\", artist: \"John Lennon\", duration: \"3:07\", album: \"Imagine\", year: \"1971\", cover: \"🎵\", audioUrl: \"https://www.bensound.com/bensound-music/bensound-epic.mp3\" }\r\n        ]\r\n      }\r\n    }\r\n\r\n    const currentTracks = playlists[currentPlaylist as keyof typeof playlists].tracks\r\n    const currentSong = currentTracks[currentTrack]\r\n\r\n    // Audio functionality\r\n    useEffect(() => {\r\n      if (audioRef) {\r\n        audioRef.volume = volume / 100\r\n        audioRef.addEventListener('timeupdate', () => {\r\n          setCurrentTime(audioRef.currentTime)\r\n        })\r\n        audioRef.addEventListener('ended', () => {\r\n          if (isRepeated) {\r\n            audioRef.currentTime = 0\r\n            audioRef.play()\r\n          } else {\r\n            nextTrack()\r\n          }\r\n        })\r\n      }\r\n    }, [audioRef, volume, isRepeated])\r\n\r\n    useEffect(() => {\r\n      if (audioRef && currentSong) {\r\n        audioRef.src = currentSong.audioUrl\r\n        if (isPlaying) {\r\n          audioRef.play()\r\n        }\r\n      }\r\n    }, [currentSong, audioRef])\r\n\r\n\r\n    const formatTime = (seconds: number) => {\r\n      const mins = Math.floor(seconds / 60)\r\n      const secs = Math.floor(seconds % 60)\r\n      return `${mins}:${secs.toString().padStart(2, '0')}`\r\n    }\r\n\r\n    const parseDuration = (duration: string) => {\r\n      const [mins, secs] = duration.split(':').map(Number)\r\n      return mins * 60 + secs\r\n    }\r\n\r\n    const nextTrack = () => {\r\n      if (currentTrack < currentTracks.length - 1) {\r\n        setCurrentTrack(currentTrack + 1)\r\n        setCurrentTime(0)\r\n      }\r\n    }\r\n\r\n    const prevTrack = () => {\r\n      if (currentTrack > 0) {\r\n        setCurrentTrack(currentTrack - 1)\r\n        setCurrentTime(0)\r\n      }\r\n    }\r\n\r\n    const togglePlay = () => {\r\n      if (audioRef) {\r\n        if (isPlaying) {\r\n          audioRef.pause()\r\n        } else {\r\n          audioRef.play()\r\n        }\r\n        setIsPlaying(!isPlaying)\r\n      }\r\n    }\r\n\r\n    const handleTrackClick = (index: number) => {\r\n      setCurrentTrack(index)\r\n      setIsPlaying(true)\r\n      setCurrentTime(0)\r\n      if (audioRef) {\r\n        audioRef.currentTime = 0\r\n        audioRef.play()\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"w-full h-full bg-black\">\r\n        <iframe\r\n          title=\"Spotify Embed: Build Inc. Playlist\"\r\n          src=\"https://open.spotify.com/embed/playlist/6pEbErhMyNati1TEcZ8jsz?utm_source=generator&theme=0\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          frameBorder=\"0\"\r\n          allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\r\n          loading=\"lazy\"\r\n          className=\"rounded-lg\"\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const ChromeWindow = () => {\r\n    const [currentUrl, setCurrentUrl] = useState(\"https://www.google.com\")\r\n    const [urlInput, setUrlInput] = useState(\"https://www.google.com\")\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [activeTab, setActiveTab] = useState(1)\r\n    const [tabs, setTabs] = useState([\r\n      { id: 1, title: \"Google\", url: \"https://www.google.com\", active: true }\r\n    ])\r\n    const [searchQuery, setSearchQuery] = useState(\"\")\r\n    const [realTimeSearch, setRealTimeSearch] = useState(\"\")\r\n    const [searchResults, setSearchResults] = useState<any[]>([])\r\n    const [isSearching, setIsSearching] = useState(false)\r\n    const [bookmarks, setBookmarks] = useState([\r\n      { title: \"Google\", url: \"https://www.google.com\", favicon: \"🔍\" },\r\n      { title: \"GitHub\", url: \"https://github.com\", favicon: \"🐙\" },\r\n      { title: \"Stack Overflow\", url: \"https://stackoverflow.com\", favicon: \"📚\" },\r\n      { title: \"MDN Web Docs\", url: \"https://developer.mozilla.org\", favicon: \"🌐\" },\r\n      { title: \"Ubuntu\", url: \"https://ubuntu.com\", favicon: \"🐧\" }\r\n    ])\r\n    const [showBookmarks, setShowBookmarks] = useState(false)\r\n\r\n    // Real-time search functionality\r\n    useEffect(() => {\r\n      if (realTimeSearch.trim().length > 2) {\r\n        setIsSearching(true)\r\n        // Simulate real-time search results\r\n        const mockResults = [\r\n          {\r\n            title: `${realTimeSearch} - Official Website`,\r\n            url: `https://www.${realTimeSearch.toLowerCase().replace(/\\s+/g, '')}.com`,\r\n            description: `Official website for ${realTimeSearch}. Find information, resources, and more.`,\r\n            favicon: \"🌐\"\r\n          },\r\n          {\r\n            title: `${realTimeSearch} - Wikipedia`,\r\n            url: `https://en.wikipedia.org/wiki/${realTimeSearch.toLowerCase().replace(/\\s+/g, '_')}`,\r\n            description: `Wikipedia article about ${realTimeSearch}. Comprehensive information and history.`,\r\n            favicon: \"📚\"\r\n          },\r\n          {\r\n            title: `${realTimeSearch} - GitHub`,\r\n            url: `https://github.com/search?q=${encodeURIComponent(realTimeSearch)}`,\r\n            description: `GitHub repositories related to ${realTimeSearch}. Open source projects and code.`,\r\n            favicon: \"🐙\"\r\n          },\r\n          {\r\n            title: `${realTimeSearch} - Stack Overflow`,\r\n            url: `https://stackoverflow.com/search?q=${encodeURIComponent(realTimeSearch)}`,\r\n            description: `Stack Overflow questions and answers about ${realTimeSearch}.`,\r\n            favicon: \"❓\"\r\n          },\r\n          {\r\n            title: `${realTimeSearch} - YouTube`,\r\n            url: `https://www.youtube.com/results?search_query=${encodeURIComponent(realTimeSearch)}`,\r\n            description: `YouTube videos about ${realTimeSearch}. Tutorials, reviews, and more.`,\r\n            favicon: \"📺\"\r\n          }\r\n        ]\r\n\r\n        setTimeout(() => {\r\n          setSearchResults(mockResults)\r\n          setIsSearching(false)\r\n        }, 300)\r\n      } else {\r\n        setSearchResults([])\r\n        setIsSearching(false)\r\n      }\r\n    }, [realTimeSearch])\r\n\r\n    const handleSearchSubmit = (e: React.FormEvent) => {\r\n      e.preventDefault()\r\n      if (searchQuery.trim()) {\r\n        setIsLoading(true)\r\n        const searchUrl = `https://www.google.com/search?q=${encodeURIComponent(searchQuery)}`\r\n        setCurrentUrl(searchUrl)\r\n        setUrlInput(searchUrl)\r\n        // Update active tab title\r\n        setTabs(tabs.map(tab => ({\r\n          ...tab,\r\n          title: tab.active ? `Search: ${searchQuery}` : tab.title\r\n        })))\r\n        setTimeout(() => setIsLoading(false), 1000)\r\n      }\r\n    }\r\n\r\n    const handleUrlSubmit = (e: React.FormEvent) => {\r\n      e.preventDefault()\r\n      setIsLoading(true)\r\n\r\n      // Check if it's a URL or search query\r\n      let targetUrl = urlInput\r\n      if (!urlInput.startsWith('http://') && !urlInput.startsWith('https://') && !urlInput.includes('.')) {\r\n        // It's a search query, redirect to Google search\r\n        targetUrl = `https://www.google.com/search?q=${encodeURIComponent(urlInput)}`\r\n      } else if (!urlInput.startsWith('http://') && !urlInput.startsWith('https://')) {\r\n        // Add https:// if missing\r\n        targetUrl = `https://${urlInput}`\r\n      }\r\n\r\n      setCurrentUrl(targetUrl)\r\n      setUrlInput(targetUrl)\r\n\r\n      // Update active tab title\r\n      const tabTitle = targetUrl.includes('google.com/search')\r\n        ? `Search: ${urlInput}`\r\n        : targetUrl.replace(/^https?:\\/\\//, '').split('/')[0]\r\n\r\n      setTabs(tabs.map(tab => ({\r\n        ...tab,\r\n        title: tab.active ? tabTitle : tab.title\r\n      })))\r\n\r\n      setTimeout(() => setIsLoading(false), 1000)\r\n    }\r\n\r\n    const navigateTo = (url: string, title: string) => {\r\n      setIsLoading(true)\r\n      setCurrentUrl(url)\r\n      setUrlInput(url)\r\n      // Update active tab\r\n      setTabs(tabs.map(tab => ({ ...tab, active: tab.url === url })))\r\n      setTimeout(() => setIsLoading(false), 1000)\r\n    }\r\n\r\n    const addNewTab = () => {\r\n      const newTabId = Date.now()\r\n      const newTab = { id: newTabId, title: \"New Tab\", url: \"https://www.google.com\", active: true }\r\n      setTabs([...tabs.map(tab => ({ ...tab, active: false })), newTab])\r\n      setCurrentUrl(\"https://www.google.com\")\r\n      setUrlInput(\"https://www.google.com\")\r\n      setActiveTab(newTabId)\r\n    }\r\n\r\n    const closeTab = (tabId: number) => {\r\n      if (tabs.length > 1) {\r\n        const newTabs = tabs.filter(tab => tab.id !== tabId)\r\n        const activeTab = newTabs.find(tab => tab.active) || newTabs[0]\r\n        setTabs(newTabs.map(tab => ({ ...tab, active: tab.id === activeTab.id })))\r\n        setCurrentUrl(activeTab.url)\r\n        setUrlInput(activeTab.url)\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"w-full h-full bg-white flex flex-col\">\r\n        {/* Chrome Toolbar */}\r\n        <div className=\"bg-gray-100 border-b border-gray-300 px-3 py-2\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            {/* Navigation buttons */}\r\n            <div className=\"flex space-x-1\">\r\n              <button\r\n                onClick={() => navigateTo(\"https://www.google.com\", \"Google\")}\r\n                className=\"p-2 hover:bg-gray-200 rounded-full text-gray-600 hover:text-gray-800 transition-colors\"\r\n                title=\"Back\"\r\n              >\r\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path fillRule=\"evenodd\" d=\"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n              </button>\r\n              <button\r\n                onClick={() => navigateTo(\"https://www.google.com\", \"Google\")}\r\n                className=\"p-2 hover:bg-gray-200 rounded-full text-gray-600 hover:text-gray-800 transition-colors\"\r\n                title=\"Forward\"\r\n              >\r\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path fillRule=\"evenodd\" d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n              </button>\r\n              <button\r\n                onClick={() => navigateTo(currentUrl, \"Refresh\")}\r\n                className=\"p-2 hover:bg-gray-200 rounded-full text-gray-600 hover:text-gray-800 transition-colors\"\r\n                title=\"Refresh\"\r\n              >\r\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666.666 0 00-1.197.41 5.002 5.002 0 00-8.803 1.83A1 1 0 01 4 8.5V3a1 1 0 01-1-1zm0 8a1 1 0 011-1h2.101a7.002 7.002 0 0011.601 2.566 1 1 0 11-1.885.666.666 0 00-1.197.41 5.002 5.002 0 00-8.803 1.83A1 1 0 01 4 10.5V9a1 1 0 01-1-1z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n\r\n            {/* URL Bar */}\r\n            <form onSubmit={handleUrlSubmit} className=\"flex-1 flex mx-3\">\r\n              <div className=\"flex-1 flex items-center bg-white border border-gray-300 rounded-full px-4 py-2 hover:shadow-md transition-all focus-within:shadow-lg focus-within:border-blue-500\">\r\n                <div className=\"w-4 h-4 mr-3 flex-shrink-0\">\r\n                  {currentUrl.includes(\"https\") ? (\r\n                    <div className=\"w-4 h-4 bg-green-500 rounded-sm flex items-center justify-center\">\r\n                      <svg className=\"w-3 h-3 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                        <path fillRule=\"evenodd\" d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\" clipRule=\"evenodd\" />\r\n                      </svg>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"w-4 h-4 bg-gray-400 rounded-sm\"></div>\r\n                  )}\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  value={urlInput}\r\n                  onChange={(e) => setUrlInput(e.target.value)}\r\n                  className=\"flex-1 text-sm outline-none text-gray-800 bg-transparent placeholder-gray-500\"\r\n                  placeholder=\"Search Google or type a URL\"\r\n                />\r\n                <div className=\"ml-3 text-gray-400\">\r\n                  <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                    <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n            {/* Chrome Menu */}\r\n            <div className=\"flex space-x-1\">\r\n              <button\r\n                onClick={() => {\r\n                  const newBookmark = { title: urlInput, url: currentUrl, favicon: \"⭐\" }\r\n                  setBookmarks(prev => [...prev, newBookmark])\r\n                }}\r\n                className=\"p-2 hover:bg-gray-200 rounded-full text-gray-600 hover:text-gray-800 transition-colors\"\r\n                title=\"Bookmark this page\"\r\n              >\r\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n                </svg>\r\n              </button>\r\n              <button\r\n                onClick={() => setShowBookmarks(!showBookmarks)}\r\n                className=\"p-2 hover:bg-gray-200 rounded-full text-gray-600 hover:text-gray-800 transition-colors\"\r\n                title=\"Bookmarks\"\r\n              >\r\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path d=\"M9 2a1 1 0 000 2h2a1 1 0 100-2H9z\" />\r\n                  <path fillRule=\"evenodd\" d=\"M4 5a2 2 0 012-2v1a1 1 0 001 1h6a1 1 0 001-1V3a2 2 0 012 2v6a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm3 4a1 1 0 000 2h.01a1 1 0 100-2H7zm3 0a1 1 0 000 2h3a1 1 0 100-2h-3z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n              </button>\r\n              <button className=\"p-2 hover:bg-gray-200 rounded-full text-gray-600 hover:text-gray-800 transition-colors\">\r\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path d=\"M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Bookmarks Bar */}\r\n        {showBookmarks && (\r\n          <div className=\"bg-gray-100 border-b border-gray-200 p-2\">\r\n            <div className=\"flex space-x-2\">\r\n              {bookmarks.map((bookmark, index) => (\r\n                <button\r\n                  key={index}\r\n                  onClick={() => navigateTo(bookmark.url, bookmark.title)}\r\n                  className=\"flex items-center space-x-1 px-2 py-1 hover:bg-gray-200 rounded text-sm text-gray-700 hover:text-gray-900 transition-colors\"\r\n                >\r\n                  <span>{bookmark.favicon}</span>\r\n                  <span>{bookmark.title}</span>\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Tab Bar */}\r\n        <div className=\"bg-gray-200 border-b border-gray-300 flex items-center px-1\">\r\n          {tabs.map((tab) => (\r\n            <div\r\n              key={tab.id}\r\n              className={`flex items-center px-4 py-2 mr-0.5 cursor-pointer transition-all duration-200 relative ${tab.active\r\n                ? 'bg-white border-t-2 border-blue-500 text-gray-900 shadow-sm'\r\n                : 'hover:bg-gray-100 text-gray-600 hover:text-gray-800'\r\n                }`}\r\n              onClick={() => {\r\n                setCurrentUrl(tab.url)\r\n                setUrlInput(tab.url)\r\n                setTabs(tabs.map(t => ({ ...t, active: t.id === tab.id })))\r\n                setActiveTab(tab.id)\r\n              }}\r\n            >\r\n              <span className=\"text-sm mr-2 truncate max-w-32 font-medium\">{tab.title}</span>\r\n              <button\r\n                onClick={(e) => {\r\n                  e.stopPropagation()\r\n                  closeTab(tab.id)\r\n                }}\r\n                className=\"text-gray-400 hover:text-gray-600 text-sm ml-1 p-1 rounded-full hover:bg-gray-200 transition-colors\"\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n          ))}\r\n          <button\r\n            onClick={addNewTab}\r\n            className=\"p-2 hover:bg-gray-100 rounded-full text-gray-600 hover:text-gray-800 ml-1 transition-colors\"\r\n            title=\"New Tab\"\r\n          >\r\n            <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n              <path fillRule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        {/* Browser Content */}\r\n        <div className=\"flex-1 bg-white overflow-hidden\">\r\n          {isLoading ? (\r\n            <div className=\"flex items-center justify-center h-full bg-white\">\r\n              <div className=\"text-center\">\r\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto mb-4\"></div>\r\n                <p className=\"text-gray-600\">Loading...</p>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"h-full w-full\">\r\n              {currentUrl.includes(\"google.com\") ? (\r\n                <div className=\"h-full w-full\">\r\n                  <iframe\r\n                    src=\"https://www.google.com/webhp?igu=1&gws_rd=ssl\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    frameBorder=\"0\"\r\n                    className=\"border-0\"\r\n                    title=\"Google Search\"\r\n                  >\r\n                    Your browser does not support <code>iframe</code>s. Please consider using a <a href=\"http://browsehappy.com/\">modern</a> browser.\r\n                  </iframe>\r\n                </div>\r\n              ) : currentUrl.includes(\"google.com/search\") ? (\r\n                <div className=\"h-full w-full\">\r\n                  <iframe\r\n                    src={currentUrl}\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    frameBorder=\"0\"\r\n                    className=\"border-0\"\r\n                    title=\"Google Search Results\"\r\n                  >\r\n                    Your browser does not support <code>iframe</code>s. Please consider using a <a href=\"http://browsehappy.com/\">modern</a> browser.\r\n                  </iframe>\r\n                </div>\r\n              ) : currentUrl.includes(\"github.com\") ? (\r\n                <div className=\"text-center bg-white h-full p-8\">\r\n                  <div className=\"w-16 h-16 mx-auto mb-4 bg-gray-800 rounded-lg flex items-center justify-center\">\r\n                    <span className=\"text-white text-2xl\">🐙</span>\r\n                  </div>\r\n                  <h1 className=\"text-2xl font-bold mb-4 text-gray-900\">GitHub</h1>\r\n                  <p className=\"text-gray-600 mb-4\">Welcome to GitHub! This is a simulated browser experience.</p>\r\n                  <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n                    <h3 className=\"font-semibold mb-2 text-gray-900\">Popular Repositories</h3>\r\n                    <div className=\"space-y-2 text-left\">\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <span className=\"w-2 h-2 bg-green-500 rounded-full\"></span>\r\n                        <span className=\"text-sm text-gray-700\">microsoft/vscode</span>\r\n                      </div>\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <span className=\"w-2 h-2 bg-green-500 rounded-full\"></span>\r\n                        <span className=\"text-sm text-gray-700\">facebook/react</span>\r\n                      </div>\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <span className=\"w-2 h-2 bg-green-500 rounded-full\"></span>\r\n                        <span className=\"text-sm text-gray-700\">vercel/next.js</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : currentUrl.includes(\"stackoverflow.com\") ? (\r\n                <div className=\"text-center bg-white h-full p-8\">\r\n                  <div className=\"w-16 h-16 mx-auto mb-4 bg-orange-500 rounded-lg flex items-center justify-center\">\r\n                    <span className=\"text-white text-2xl\">📚</span>\r\n                  </div>\r\n                  <h1 className=\"text-2xl font-bold mb-4 text-gray-900\">Stack Overflow</h1>\r\n                  <p className=\"text-gray-600 mb-4\">The world's largest developer community.</p>\r\n                  <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n                    <h3 className=\"font-semibold mb-2 text-gray-900\">Popular Questions</h3>\r\n                    <div className=\"space-y-2 text-left\">\r\n                      <div className=\"text-sm text-gray-700\">How to center a div in CSS?</div>\r\n                      <div className=\"text-sm text-gray-700\">What is the difference between let and var in JavaScript?</div>\r\n                      <div className=\"text-sm text-gray-700\">How to install npm packages?</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : currentUrl.includes(\"developer.mozilla.org\") ? (\r\n                <div className=\"text-center bg-white h-full p-8\">\r\n                  <div className=\"w-16 h-16 mx-auto mb-4 bg-blue-500 rounded-lg flex items-center justify-center\">\r\n                    <span className=\"text-white text-2xl\">🌐</span>\r\n                  </div>\r\n                  <h1 className=\"text-2xl font-bold mb-4 text-gray-900\">MDN Web Docs</h1>\r\n                  <p className=\"text-gray-600 mb-4\">Resources for developers, by developers.</p>\r\n                  <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n                    <h3 className=\"font-semibold mb-2 text-gray-900\">Web Technologies</h3>\r\n                    <div className=\"grid grid-cols-2 gap-2 text-sm\">\r\n                      <span className=\"bg-blue-100 px-2 py-1 rounded text-blue-800\">HTML</span>\r\n                      <span className=\"bg-blue-100 px-2 py-1 rounded text-blue-800\">CSS</span>\r\n                      <span className=\"bg-blue-100 px-2 py-1 rounded text-blue-800\">JavaScript</span>\r\n                      <span className=\"bg-blue-100 px-2 py-1 rounded text-blue-800\">React</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : currentUrl.includes(\"ubuntu.com\") ? (\r\n                <div className=\"text-center bg-white h-full p-8\">\r\n                  <div className=\"w-16 h-16 mx-auto mb-4 bg-orange-500 rounded-lg flex items-center justify-center\">\r\n                    <span className=\"text-white text-2xl\">🐧</span>\r\n                  </div>\r\n                  <h1 className=\"text-2xl font-bold mb-4 text-gray-900\">Ubuntu</h1>\r\n                  <p className=\"text-gray-600 mb-4\">The world's most popular open source operating system.</p>\r\n                  <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n                    <h3 className=\"font-semibold mb-2 text-gray-900\">Ubuntu Features</h3>\r\n                    <div className=\"space-y-2 text-left\">\r\n                      <div className=\"text-sm text-gray-700\">• Free and open source</div>\r\n                      <div className=\"text-sm text-gray-700\">• Secure and reliable</div>\r\n                      <div className=\"text-sm text-gray-700\">• Easy to use</div>\r\n                      <div className=\"text-sm text-gray-700\">• Great for developers</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-center bg-white h-full p-8\">\r\n                  <div className=\"w-16 h-16 mx-auto mb-4 bg-gray-400 rounded-lg flex items-center justify-center\">\r\n                    <span className=\"text-white text-2xl\">🌐</span>\r\n                  </div>\r\n                  <h1 className=\"text-2xl font-bold mb-4 text-gray-900\">New Tab</h1>\r\n                  <p className=\"text-gray-600\">Start browsing by entering a URL or searching.</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  const ImageViewerWindow = () => {\r\n    const [currentImage, setCurrentImage] = useState(0)\r\n    const images = [\r\n      \"/assets/wallpapers/clouds.jpg\",\r\n      \"/assets/wallpapers/valley.jpg\",\r\n      \"/assets/wallpapers/south-france.jpg\",\r\n      \"/assets/wallpapers/mountain.png\",\r\n      \"/assets/wallpapers/numbat-dark.png\",\r\n      \"/assets/wallpapers/numbat-light.png\",\r\n      \"/assets/wallpapers/numbat.png\",\r\n      \"/assets/wallpapers/crown-dark.png\",\r\n      \"/assets/wallpapers/crown-light.png\",\r\n      \"/assets/wallpapers/crown-dark-2.png\",\r\n      \"/assets/wallpapers/crown-light-2.png\",\r\n      \"/assets/wallpapers/lightbulb.png\"\r\n    ]\r\n\r\n    return (\r\n      <div className=\"w-full h-full bg-gray-900 p-4\">\r\n        <div className=\"h-full flex flex-col\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <h3 className=\"text-white text-lg font-semibold\">Image Viewer</h3>\r\n            <div className=\"flex space-x-2\">\r\n              <button\r\n                onClick={() => setCurrentImage(Math.max(0, currentImage - 1))}\r\n                className=\"bg-gray-700 text-white px-3 py-1 rounded hover:bg-gray-600\"\r\n              >\r\n                ←\r\n              </button>\r\n              <span className=\"text-white text-sm px-2 py-1\">\r\n                {currentImage + 1} / {images.length}\r\n              </span>\r\n              <button\r\n                onClick={() => setCurrentImage(Math.min(images.length - 1, currentImage + 1))}\r\n                className=\"bg-gray-700 text-white px-3 py-1 rounded hover:bg-gray-600\"\r\n              >\r\n                →\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex-1 bg-black rounded-lg overflow-hidden\">\r\n            <img\r\n              src={images[currentImage]}\r\n              alt={`Image ${currentImage + 1}`}\r\n              className=\"w-full h-full object-contain\"\r\n            />\r\n          </div>\r\n          {/* Thumbnail strip */}\r\n          <div className=\"mt-4 flex space-x-2 overflow-x-auto\">\r\n            {images.map((image, index) => (\r\n              <button\r\n                key={index}\r\n                onClick={() => setCurrentImage(index)}\r\n                className={`flex-shrink-0 w-16 h-16 rounded border-2 overflow-hidden ${index === currentImage ? 'border-orange-500' : 'border-gray-600'\r\n                  }`}\r\n              >\r\n                <img\r\n                  src={image}\r\n                  alt={`Thumbnail ${index + 1}`}\r\n                  className=\"w-full h-full object-cover\"\r\n                />\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const ProjectDetailWindow = ({ project }: { project: string }) => {\r\n    const projectDetails = {\r\n      ecommerce: {\r\n        title: \"E-commerce Platform\",\r\n        description: \"A full-featured e-commerce solution built with modern web technologies\",\r\n        features: [\r\n          \"User authentication and authorization\",\r\n          \"Product catalog with search and filtering\",\r\n          \"Shopping cart and checkout process\",\r\n          \"Payment integration with Stripe\",\r\n          \"Admin dashboard for inventory management\",\r\n          \"Order tracking and history\",\r\n          \"Responsive design for all devices\",\r\n        ],\r\n        tech: [\"React\", \"Node.js\", \"MongoDB\", \"Stripe API\", \"JWT\", \"Express.js\"],\r\n        status: \"Production Ready\",\r\n        github: \"https://github.com/ubuntu-developer/ecommerce-platform\",\r\n        demo: \"https://ecommerce-demo.ubuntu-portfolio.dev\",\r\n      },\r\n      taskmanager: {\r\n        title: \"Task Management App\",\r\n        description: \"Collaborative task management application with real-time updates\",\r\n        features: [\r\n          \"Real-time collaboration with Socket.io\",\r\n          \"Project and task organization\",\r\n          \"Team member assignment\",\r\n          \"Progress tracking and analytics\",\r\n          \"File attachments and comments\",\r\n          \"Deadline notifications\",\r\n          \"Kanban board interface\",\r\n        ],\r\n        tech: [\"Next.js\", \"Socket.io\", \"PostgreSQL\", \"Prisma\", \"TypeScript\"],\r\n        status: \"In Development\",\r\n        github: \"https://github.com/ubuntu-developer/task-manager\",\r\n        demo: \"https://tasks-demo.ubuntu-portfolio.dev\",\r\n      },\r\n      apigateway: {\r\n        title: \"API Gateway\",\r\n        description: \"Microservices API gateway with advanced features\",\r\n        features: [\r\n          \"Request routing and load balancing\",\r\n          \"Authentication and authorization\",\r\n          \"Rate limiting and throttling\",\r\n          \"Request/response transformation\",\r\n          \"Monitoring and analytics\",\r\n          \"Circuit breaker pattern\",\r\n          \"Docker containerization\",\r\n        ],\r\n        tech: [\"Express.js\", \"Redis\", \"JWT\", \"Docker\", \"Nginx\", \"Prometheus\"],\r\n        status: \"Production Ready\",\r\n        github: \"https://github.com/ubuntu-developer/api-gateway\",\r\n        demo: \"https://api-gateway-demo.ubuntu-portfolio.dev\",\r\n      },\r\n      portfolio: {\r\n        title: \"Ubuntu Portfolio Website\",\r\n        description: \"Interactive Ubuntu desktop simulation as a portfolio website\",\r\n        features: [\r\n          \"Full Ubuntu desktop simulation\",\r\n          \"Draggable windows and icons\",\r\n          \"Working terminal with commands\",\r\n          \"Responsive design\",\r\n          \"Project showcases\",\r\n          \"Contact integration\",\r\n          \"Loading screen animation\",\r\n        ],\r\n        tech: [\"Next.js\", \"TypeScript\", \"Tailwind CSS\", \"Lucide Icons\"],\r\n        status: \"Live\",\r\n        github: \"https://github.com/ubuntu-developer/portfolio\",\r\n        demo: \"https://ubuntu-portfolio.dev\",\r\n      },\r\n    }\r\n\r\n    const details = projectDetails[project as keyof typeof projectDetails]\r\n\r\n    return (\r\n      <div className=\"h-full bg-card p-6 overflow-y-auto\">\r\n        <div className=\"max-w-4xl mx-auto\">\r\n          <div className=\"mb-6\">\r\n            <h2 className=\"text-3xl font-bold text-foreground mb-2\">{details.title}</h2>\r\n            <p className=\"text-card-foreground text-lg\">{details.description}</p>\r\n            <div className=\"mt-4\">\r\n              <span\r\n                className={`inline-block px-3 py-1 rounded-full text-sm font-medium ${details.status === \"Production Ready\" || details.status === \"Live\"\r\n                  ? \"bg-chart-3/20 text-chart-3\"\r\n                  : \"bg-chart-5/20 text-chart-5\"\r\n                  }`}\r\n              >\r\n                {details.status}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid md:grid-cols-2 gap-8\">\r\n            <div>\r\n              <h3 className=\"text-xl font-semibold text-foreground mb-4\">Key Features</h3>\r\n              <ul className=\"space-y-2\">\r\n                {details.features.map((feature, index) => (\r\n                  <li key={index} className=\"flex items-start\">\r\n                    <span className=\"text-chart-3 mr-2\">✓</span>\r\n                    <span className=\"text-card-foreground\">{feature}</span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n\r\n            <div>\r\n              <h3 className=\"text-xl font-semibold text-foreground mb-4\">Technologies Used</h3>\r\n              <div className=\"flex flex-wrap gap-2 mb-6\">\r\n                {details.tech.map((tech) => (\r\n                  <span key={tech} className=\"px-3 py-1 bg-chart-2/20 text-chart-2 text-sm rounded-full\">\r\n                    {tech}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"space-y-3\">\r\n                <Button className=\"w-full bg-primary hover:bg-primary/90 text-primary-foreground\">\r\n                  <ExternalLink className=\"w-4 h-4 mr-2\" />\r\n                  View Live Demo\r\n                </Button>\r\n                <Button variant=\"outline\" className=\"w-full bg-transparent\">\r\n                  <Github className=\"w-4 h-4 mr-2\" />\r\n                  View Source Code\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (hasError) {\r\n    return (\r\n      <div className=\"h-screen w-screen bg-gradient-to-br from-red-900 to-red-800 flex items-center justify-center\">\r\n        <div className=\"text-center text-white\">\r\n          <div className=\"w-16 h-16 bg-red-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n            <span className=\"text-2xl\">⚠️</span>\r\n          </div>\r\n          <h2 className=\"text-2xl font-bold mb-2\">System Error</h2>\r\n          <p className=\"text-red-200 mb-4\">Ubuntu Portfolio encountered an error</p>\r\n          <Button\r\n            onClick={() => window.location.reload()}\r\n            className=\"bg-white text-red-800 hover:bg-red-100\"\r\n          >\r\n            Restart System\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-screen w-screen overflow-hidden relative bg-gradient-to-br from-purple-900 via-purple-800 to-orange-600\">\r\n      {/* Desktop Wallpaper */}\r\n      <div className=\"absolute inset-0 bg-cover bg-center\" style={{ backgroundImage: `url(${currentWallpaper})` }} />\r\n\r\n      {/* Ubuntu Top Panel - Authentic Ubuntu Style */}\r\n      <div className=\"absolute top-0 left-0 right-0 bg-gradient-to-r from-[#2C2C2C] to-[#1A1A1A] backdrop-blur-md text-white px-4 py-2 flex items-center justify-between z-50 h-12 border-b border-gray-600/30\">\r\n        <div className=\"flex items-center space-x-4\">\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            className=\"text-white hover:bg-white/10 h-8 px-3 rounded-md transition-all duration-200\"\r\n          >\r\n            <div className=\"flex items-center space-x-2\">\r\n              <div className=\"w-2 h-2 bg-white rounded-full\"></div>\r\n              <span className=\"text-sm font-medium\">Activities</span>\r\n            </div>\r\n          </Button>\r\n          <div className=\"h-6 w-px bg-gray-600\"></div>\r\n          <div className=\"text-sm font-medium text-gray-200\">Portfolio Desktop</div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center space-x-4\">\r\n          {/* System indicators */}\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\r\n            <span className=\"text-xs text-gray-300\">Online</span>\r\n          </div>\r\n\r\n          {/* Time display */}\r\n          <div className=\"text-sm text-white font-mono bg-black/20 px-3 py-1 rounded-md\">\r\n            {isClient ? currentTime : \"--:--:--\"}\r\n          </div>\r\n\r\n          {/* System menu */}\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"icon\"\r\n            className=\"text-white hover:bg-white/10 h-8 w-8 rounded-md transition-all duration-200\"\r\n            onClick={() => openWindow(\"settings\", \"Settings\", <SettingsWindow />)}\r\n          >\r\n            <Settings className=\"w-4 h-4\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Ubuntu Sidebar - Authentic Ubuntu Dock */}\r\n      <div className=\"absolute left-0 top-12 bottom-12 w-16 sm:w-20 bg-gradient-to-b from-gray-900/40 to-black/50 backdrop-blur-xl border-r border-gray-700/20 z-40 shadow-2xl\">\r\n        <div className=\"flex flex-col items-center justify-start py-1 sm:py-2 space-y-1 h-full\">\r\n          {sidebarIcons.map((icon, index) => (\r\n            <div\r\n              key={icon.id}\r\n              className=\"w-10 h-10 sm:w-12 sm:h-12 flex items-center justify-center rounded-lg sm:rounded-xl hover:bg-orange-500/20 transition-all duration-300 cursor-pointer group hover:scale-105 relative flex-shrink-0\"\r\n              onClick={() => {\r\n                playClickSound()\r\n                icon.action()\r\n              }}\r\n              title={icon.name}\r\n            >\r\n              {/* Active indicator */}\r\n              <div className=\"absolute -left-1 w-1 h-6 sm:h-8 bg-orange-500 rounded-r-full opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\r\n\r\n              {/* Icon with glow effect */}\r\n              <div className=\"group-hover:drop-shadow-xl transition-all duration-300 group-hover:brightness-125\">\r\n                {icon.icon}\r\n              </div>\r\n\r\n              {/* Tooltip */}\r\n              <div className=\"absolute left-16 sm:left-20 bg-gray-900/95 text-white text-xs px-2 py-1 rounded-md opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none whitespace-nowrap shadow-lg border border-gray-700\">\r\n                {icon.name}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Desktop Icons */}\r\n      <div className=\"absolute inset-0 p-4\" style={{ paddingTop: \"64px\", paddingBottom: \"64px\", paddingLeft: \"100px\" }}>\r\n        {memoizedDesktopIcons.map((icon) => (\r\n          <div\r\n            key={icon.id}\r\n            className={`absolute cursor-pointer select-none ${draggedIcon === icon.id ? \"opacity-50\" : \"\"}`}\r\n            style={{\r\n              left: icon.position.x,\r\n              top: icon.position.y,\r\n            }}\r\n            onMouseDown={(e) => {\r\n              playClickSound()\r\n              handleIconMouseDown(e, icon.id)\r\n            }}\r\n            onDoubleClick={icon.action}\r\n          >\r\n            <div className={`flex flex-col items-center space-y-1 p-2 rounded-lg transition-all duration-300 w-20 ${draggedIcon === icon.id\r\n              ? \"bg-white/20 scale-110 shadow-2xl backdrop-blur-sm\"\r\n              : \"hover:bg-white/10 hover:scale-105 hover:shadow-lg\"\r\n              }`}>\r\n              <div className=\"drop-shadow-lg w-10 h-10 flex items-center justify-center\">\r\n                {icon.icon}\r\n              </div>\r\n              <span className=\"text-white text-xs text-center w-full truncate font-medium drop-shadow-md leading-tight\">{icon.name}</span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Windows */}\r\n      {memoizedWindows\r\n        .filter((w) => !w.isMinimized)\r\n        .map((window) => (\r\n          <div\r\n            key={window.id}\r\n            className=\"absolute bg-white rounded-lg shadow-2xl border border-gray-200 overflow-hidden\"\r\n            style={{\r\n              left: window.isMaximized ? 0 : window.position.x,\r\n              top: window.isMaximized ? 48 : window.position.y,\r\n              width: window.size.width,\r\n              height: window.size.height,\r\n              zIndex: window.zIndex,\r\n            }}\r\n            onClick={() => bringToFront(window.id)}\r\n          >\r\n            <div\r\n              className=\"bg-gradient-to-r from-gray-200 to-gray-300 border-b border-gray-400 px-4 py-3 flex items-center justify-between cursor-move select-none shadow-sm\"\r\n              onMouseDown={(e) => handleWindowMouseDown(e, window.id)}\r\n            >\r\n              <div className=\"flex items-center space-x-3\">\r\n                <span className=\"text-sm font-semibold text-gray-800\">{window.title}</span>\r\n              </div>\r\n              <div className=\"flex space-x-2\">\r\n                <button\r\n                  className=\"w-4 h-4 bg-yellow-500 rounded-full hover:bg-yellow-600 transition-colors flex items-center justify-center\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation()\r\n                    minimizeWindow(window.id)\r\n                  }}\r\n                  title=\"Minimize\"\r\n                  aria-label=\"Minimize window\"\r\n                >\r\n                  <Minus className=\"w-3 h-3 text-white\" />\r\n                </button>\r\n                <button\r\n                  className=\"w-4 h-4 bg-green-500 rounded-full hover:bg-green-600 transition-colors flex items-center justify-center\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation()\r\n                    maximizeWindow(window.id)\r\n                  }}\r\n                  title={window.isMaximized ? \"Restore\" : \"Maximize\"}\r\n                  aria-label={window.isMaximized ? \"Restore window\" : \"Maximize window\"}\r\n                >\r\n                  <Square className=\"w-3 h-3 text-white\" />\r\n                </button>\r\n                <button\r\n                  className=\"w-4 h-4 bg-red-500 rounded-full hover:bg-red-600 transition-colors flex items-center justify-center\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation()\r\n                    closeWindow(window.id)\r\n                  }}\r\n                  title=\"Close\"\r\n                  aria-label=\"Close window\"\r\n                >\r\n                  <X className=\"w-3 h-3 text-white\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Window Content */}\r\n            <div className=\"h-full bg-white\" style={{ height: \"calc(100% - 40px)\" }}>\r\n              {window.component}\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n      {/* Ubuntu Bottom Taskbar */}\r\n      <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-r from-[#2C2C2C] to-[#1A1A1A] backdrop-blur-lg text-white px-4 py-2 flex items-center justify-between z-50 h-12 border-t border-gray-600/30 shadow-2xl\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            className=\"text-white hover:bg-white/10 px-3 py-2 rounded-md transition-all duration-200\"\r\n          >\r\n            <div className=\"flex items-center space-x-2\">\r\n              <div className=\"w-6 h-6 bg-gradient-to-br from-[#E95420] to-[#F7A072] rounded-md flex items-center justify-center\">\r\n                <span className=\"text-xs font-bold text-white\">U</span>\r\n              </div>\r\n              <span className=\"text-sm font-medium\">Show Applications</span>\r\n            </div>\r\n          </Button>\r\n\r\n          <div className=\"w-px h-6 bg-gray-600\"></div>\r\n\r\n          {/* Window buttons */}\r\n          <div className=\"flex items-center space-x-1\">\r\n            {memoizedWindows.map((window) => (\r\n              <Button\r\n                key={window.id}\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                className={`text-white hover:bg-white/10 px-3 py-2 rounded-md transition-all duration-200 ${window.isMinimized\r\n                  ? \"opacity-60 bg-white/5\"\r\n                  : \"bg-white/10 shadow-md\"\r\n                  }`}\r\n                onClick={() => (window.isMinimized ? restoreWindow(window.id) : bringToFront(window.id))}\r\n              >\r\n                <span className=\"text-sm font-medium\">{window.title}</span>\r\n              </Button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* System tray */}\r\n        <div className=\"flex items-center space-x-2\">\r\n          <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\r\n          <span className=\"text-xs text-gray-300\">Connected</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Ubuntu-style Notifications */}\r\n      <div className=\"fixed top-16 right-4 z-50 space-y-2\">\r\n        {notifications.map((notification) => (\r\n          <div\r\n            key={notification.id}\r\n            className={`bg-white/95 backdrop-blur-md rounded-lg shadow-lg border-l-4 px-4 py-3 max-w-sm transform transition-all duration-300 ${notification.type === 'error' ? 'border-red-500' :\r\n              notification.type === 'warning' ? 'border-yellow-500' :\r\n                notification.type === 'success' ? 'border-green-500' :\r\n                  'border-blue-500'\r\n              }`}\r\n          >\r\n            <div className=\"flex items-center space-x-2\">\r\n              <div className={`w-2 h-2 rounded-full ${notification.type === 'error' ? 'bg-red-500' :\r\n                notification.type === 'warning' ? 'bg-yellow-500' :\r\n                  notification.type === 'success' ? 'bg-green-500' :\r\n                    'bg-blue-500'\r\n                }`}></div>\r\n              <span className=\"text-sm font-medium text-gray-800\">{notification.message}</span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n",
      "type": "registry:page",
      "target": "app\\page.tsx"
    },
    {
      "path": "components\\PWARegister.tsx",
      "content": "\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function PWARegister() {\r\n  const [isInstallable, setIsInstallable] = useState(false);\r\n  const [deferredPrompt, setDeferredPrompt] = useState<any>(null);\r\n  const [isIOS, setIsIOS] = useState(false);\r\n  const [isStandalone, setIsStandalone] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check if running on iOS\r\n    const iOS =\r\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !(window as any).MSStream;\r\n    setIsIOS(iOS);\r\n\r\n    // Check if app is already installed\r\n    const standalone = window.matchMedia(\"(display-mode: standalone)\").matches;\r\n    setIsStandalone(standalone);\r\n\r\n    // Register service worker\r\n    if (\"serviceWorker\" in navigator) {\r\n      navigator.serviceWorker\r\n        .register(\"/sw.js\", {\r\n          scope: \"/\",\r\n          updateViaCache: \"none\",\r\n        })\r\n        .then((registration) => {\r\n          console.log(\"Service Worker registered successfully:\", registration);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Service Worker registration failed:\", error);\r\n        });\r\n    }\r\n\r\n    // Listen for install prompt\r\n    const handleBeforeInstallPrompt = (e: Event) => {\r\n      e.preventDefault();\r\n      setDeferredPrompt(e);\r\n      setIsInstallable(true);\r\n    };\r\n\r\n    window.addEventListener(\"beforeinstallprompt\", handleBeforeInstallPrompt);\r\n\r\n    return () => {\r\n      window.removeEventListener(\r\n        \"beforeinstallprompt\",\r\n        handleBeforeInstallPrompt\r\n      );\r\n    };\r\n  }, []);\r\n\r\n  const handleInstallClick = async () => {\r\n    if (!deferredPrompt) {\r\n      return;\r\n    }\r\n\r\n    deferredPrompt.prompt();\r\n    const { outcome } = await deferredPrompt.userChoice;\r\n    console.log(`User response to the install prompt: ${outcome}`);\r\n\r\n    setDeferredPrompt(null);\r\n    setIsInstallable(false);\r\n  };\r\n\r\n  // Only show install button if app is not already installed\r\n  if (isStandalone) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isInstallable && (\r\n        <div className=\"fixed bottom-4 right-4 z-50\">\r\n          <div className=\"bg-[#E95420] text-white p-4 rounded-lg shadow-lg max-w-sm\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <img\r\n                src=\"/ubuntu-logo-circle.png\"\r\n                alt=\"Install\"\r\n                className=\"w-12 h-12\"\r\n              />\r\n              <div className=\"flex-1\">\r\n                <h3 className=\"font-semibold text-sm\">\r\n                  Install Ubuntu Portfolio\r\n                </h3>\r\n                <p className=\"text-xs opacity-90\">\r\n                  Get quick access from your home screen\r\n                </p>\r\n              </div>\r\n              <button\r\n                onClick={handleInstallClick}\r\n                className=\"bg-white text-[#E95420] px-4 py-2 rounded font-medium text-sm hover:bg-gray-100 transition-colors\"\r\n              >\r\n                Install\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isIOS && !isStandalone && (\r\n        <div className=\"fixed bottom-4 right-4 z-50\">\r\n          <div className=\"bg-[#E95420] text-white p-4 rounded-lg shadow-lg max-w-sm\">\r\n            <h3 className=\"font-semibold text-sm mb-2\">\r\n              Install Ubuntu Portfolio\r\n            </h3>\r\n            <p className=\"text-xs opacity-90\">\r\n              To install this app on your iOS device, tap the share button{\" \"}\r\n              <span\r\n                role=\"img\"\r\n                aria-label=\"share icon\"\r\n                className=\"inline-block text-base\"\r\n              >\r\n                ⎋\r\n              </span>{\" \"}\r\n              and then \"Add to Home Screen\"{\" \"}\r\n              <span\r\n                role=\"img\"\r\n                aria-label=\"plus icon\"\r\n                className=\"inline-block text-base\"\r\n              >\r\n                ➕\r\n              </span>\r\n              .\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n",
      "type": "registry:component",
      "target": "components\\PWARegister.tsx"
    },
    {
      "path": "components\\TerminalComponent.tsx",
      "content": "\"use client\"\r\n\r\nimport React, { useState, useRef, useEffect } from \"react\"\r\n\r\ninterface TerminalComponentProps {\r\n    onClose: () => void\r\n}\r\n\r\nconst TerminalComponent: React.FC<TerminalComponentProps> = ({ onClose }) => {\r\n    const [terminalHistory, setTerminalHistory] = useState<string[]>([])\r\n    const [currentCommand, setCurrentCommand] = useState(\"\")\r\n    const [commandHistory, setCommandHistory] = useState<string[]>([])\r\n    const [historyIndex, setHistoryIndex] = useState(-1)\r\n    const [isTyping, setIsTyping] = useState(false)\r\n    const [passwordMode, setPasswordMode] = useState(false)\r\n    const [password, setPassword] = useState(\"\")\r\n    const [isPasswordCorrect, setIsPasswordCorrect] = useState(false)\r\n    const [cursorPosition, setCursorPosition] = useState(0)\r\n    const terminalRef = useRef<HTMLDivElement>(null)\r\n    const inputRef = useRef<HTMLInputElement>(null)\r\n    const cursorRef = useRef<HTMLDivElement>(null)\r\n    const didInitRef = useRef(false)\r\n\r\n    const secretPassword = \"Banger\"\r\n    const git = commandHistory.length\r\n\r\n    // ASCII Art Banner\r\n    const banner = [\r\n        '<span class=\"index\">Tanay Vasishtha (TV) Not A Corporation. All rights reserved.</span>',\r\n        \"\",\r\n        \" /*\",\r\n        \"  *    ⣿⣿⣿⣿⠀⢸⣿⡇⠀⢸⣿⣿⣿⣿     _________  ________  ________   ________      ___    ___      ___      ___ ________  ________  ___  ________  ___  ___  _________  ___  ___  ________         \",\r\n        \"  *    ⣇⣀⠀⠀⠀⢀⣀⣀⠀⠀⠀⠉⠻⣿    |\\\\___   ___\\\\\\\\   __  \\\\|\\\\   ___  \\\\|\\\\   __  \\\\    |\\\\  \\\\  /  /|    |\\\\  \\\\    /  /|\\\\   __  \\\\|\\\\   ____\\\\|\\\\  \\\\|\\\\   ____\\\\|\\\\  \\\\|\\\\  \\\\|\\\\___   ___\\\\\\\\  \\\\|\\\\  \\\\|\\\\   __  \\\\        \",\r\n        \"  *    ⣿⣿⡇⠀⠀⢸⣿⣿⣿⣷⠀⠀⠀⣿    \\\\|___ \\\\  \\\\_\\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\\\\\ \\\\  \\\\ \\\\  \\\\|\\\\  \\\\   \\\\ \\\\  \\\\/  / /    \\\\ \\\\  \\\\  /  / | \\\\  \\\\|\\\\  \\\\ \\\\  \\\\___|\\\\ \\\\  \\\\ \\\\  \\\\___|\\\\ \\\\  \\\\\\\\\\\\  \\\\|___ \\\\  \\\\_\\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\|\\\\  \\\\       \",\r\n        \"  *    ⣿⣿⡇⠀⠀⢸⣿⣿⡿⠟⠀⠀⣠⣿         \\\\ \\\\  \\\\ \\\\ \\\\   __  \\\\ \\\\  \\\\\\\\ \\\\  \\\\ \\\\   __  \\\\   \\\\ \\\\    / /      \\\\ \\\\  \\\\/  / / \\\\ \\\\   __  \\\\ \\\\_____  \\\\ \\\\  \\\\ \\\\_____  \\\\ \\\\   __  \\\\   \\\\ \\\\  \\\\ \\\\ \\\\   __  \\\\ \\\\   __  \\\\      \",\r\n        \"  *    ⣿⣿⡇⠀⠀⢀⣀⣀⣀⠀⠀⠚⠻⣿          \\\\ \\\\  \\\\ \\\\ \\\\  \\\\ \\\\  \\\\ \\\\  \\\\\\\\ \\\\  \\\\ \\\\  \\\\ \\\\  \\\\   \\\\/  /  /        \\\\ \\\\    / /   \\\\ \\\\  \\\\ \\\\  \\\\|____|\\\\  \\\\ \\\\  \\\\|____|\\\\  \\\\ \\\\  \\\\ \\\\  \\\\   \\\\ \\\\  \\\\ \\\\ \\\\  \\\\ \\\\  \\\\ \\\\  \\\\ \\\\  \\\\     \",\r\n        \"  *    ⣿⣿⡇⠀⠀⢸⣿⣿⣿⣿⡄⠀⠀⠘           \\\\ \\\\__\\\\ \\\\ \\\\__\\\\ \\\\__\\\\ \\\\__\\\\\\\\ \\\\__\\\\ \\\\__\\\\ \\\\__\\\\__/  / /           \\\\ \\\\__/ /     \\\\ \\\\__\\\\ \\\\__\\\\____\\\\_\\\\  \\\\ \\\\__\\\\____\\\\_\\\\  \\\\ \\\\__\\\\ \\\\__\\\\   \\\\ \\\\__\\\\ \\\\ \\\\__\\\\ \\\\__\\\\ \\\\__\\\\ \\\\__\\\\    \",\r\n        \"  *    ⣿⣿⡇⠀⠀⢸⣿⣿⣿⣿⠃⠀⠀⠀            \\\\|__|  \\\\|__|\\\\|__|\\\\|__| \\\\|__|\\\\|__|\\\\|__|\\\\___/ /             \\\\|__|/       \\\\|__|\\\\|__|\\\\_________\\\\|__|\\\\_________\\\\|__|\\\\|__|    \\\\|__|  \\\\|__|\\\\|__|\\\\|__|\\\\|__|    \",\r\n        \"  *    ⡏⠉⠀⠀⠀⠈⠉⠉⠁⠀⠀⣀⣤⣾                                                 \\\\|___|/                                    \\\\|_________|   \\\\|_________|                                            \",\r\n        \"  *    ⣿⣿⣿⣿⠀⢸⣿⡇⠀⢸⣿⣿⣿⣿                                                                                                                                                                   \",\r\n        \"  *                                                                                                                                                             @2025      \",\r\n        \"  */\",\r\n        \"\",\r\n\r\n        '<span class=\"color2\">Welcome to my interactive web terminal.</span>',\r\n        '<span class=\"color2\">For a list of available commands, type</span> <span class=\"command\">\\'help\\'</span><span class=\"color2\">.</span>',\r\n    ]\r\n\r\n    const whois = [\r\n        \"<br>\",\r\n        \"Hey, I'm Tanay!👋\",\r\n        \"I'm a full-stack developer and browser extension creator, who builds engaging websites like this one\",\r\n        \"and creates innovative browser extensions that solve real-world problems.\",\r\n        \"With expertise in React, Node.js, Python, TypeScript, and browser APIs, I specialize in\",\r\n        \"building scalable web applications, browser extensions, and mobile solutions.\",\r\n        \"I'm the creator of popular browser extensions like Dark Mode Bang, Volume Bang, and Speed Bang,\",\r\n        \"which have helped thousands of users improve their browsing experience.\",\r\n        \"I'm passionate about creating user-friendly interfaces and browser tools\",\r\n        \"that solve complex problems with elegant solutions.\",\r\n        \"When I'm not coding, you'll find me exploring new technologies,\",\r\n        \"contributing to open-source projects, or working on my organization SynthraLabs.\",\r\n        \"This terminal website is just one example of my creative approach\",\r\n        \"to showcasing technical skills and personality.\",\r\n        \"<br>\"\r\n    ]\r\n\r\n    const whoami = [\r\n        \"<br>\",\r\n        \"The paradox of 'Who am I?' is: we never know, but, we constantly find out.\",\r\n        \"I am a developer, a problem-solver, and a lifelong learner.\",\r\n        \"<br>\"\r\n    ]\r\n\r\n    const social = [\r\n        \"<br>\",\r\n        'github         <a href=\"https://github.com/tanayvasishtha\" target=\"_blank\">github/tanayvasishtha' + \"</a>\",\r\n        'linkedin       <a href=\"https://linkedin.com/in/tanayvasishtha\" target=\"_blank\">linkedin/tanayvasishtha' + '</a>',\r\n        'twitter        <a href=\"https://twitter.com/tanayvasishtha\" target=\"_blank\">twitter/tanayvasishtha' + '</a>',\r\n        'email          <a href=\"mailto:edgepersonal2004@example.com\">edgepersonal2004@example.com</a>',\r\n        \"<br>\"\r\n    ]\r\n\r\n    const secret = [\r\n        \"<br>\",\r\n        '<span class=\"command\">sudo</span>           Only use if you\\'re admin',\r\n        '<span class=\"command\">ai</span>            Ask the AI assistant',\r\n        '<span class=\"command\">matrix</span>        Enter the Matrix',\r\n        '<span class=\"command\">hack</span>          Hacker mode activated',\r\n        \"<br>\"\r\n    ]\r\n\r\n    const projects = [\r\n        \"<br>\",\r\n        \"🌙 Dark Mode Bang - Chrome & Firefox extension for instant dark mode\",\r\n        \"🔊 Volume Bang - Browser extension for instant volume control\",\r\n        \"⚡ Speed Bang - Performance optimization extension\",\r\n        \"📱 WeLoveQR - QR code generator and scanner web app\",\r\n        \"🏢 SynthraLabs - Organization and project management platform\",\r\n        \"💻 Ubuntu Portfolio - This interactive terminal experience\",\r\n        \"🎯 Debtrix - Financial management and debt tracking app\",\r\n        \"🤖 AI/ML Projects - Machine learning and automation tools\",\r\n        \"<br>\"\r\n    ]\r\n\r\n    const help = [\r\n        \"<br>\",\r\n        '<span class=\"command\">whois</span>          Who is Tanay?',\r\n        '<span class=\"command\">whoami</span>         Who are you?',\r\n        '<span class=\"command\">ai</span>             Ask the AI assistant',\r\n        '<span class=\"command\">social</span>         Display social networks',\r\n        '<span class=\"command\">secret</span>         Find the password',\r\n        '<span class=\"command\">projects</span>       View coding projects',\r\n        '<span class=\"command\">history</span>        View command history',\r\n        '<span class=\"command\">help</span>           You obviously already know what this does',\r\n        '<span class=\"command\">email</span>          Contact me',\r\n        '<span class=\"command\">sponsor me</span>     Support me on Buy Me a Coffee',\r\n        '<span class=\"command\">clear</span>          Clear terminal',\r\n        '<span class=\"command\">banner</span>         Display the header',\r\n        '<span class=\"command\">matrix</span>         Enter the Matrix',\r\n        '<span class=\"command\">hack</span>           Hacker mode',\r\n        '<span class=\"command\">love</span>           Show some love',\r\n        \"\",\r\n        \"Project Commands:\",\r\n        '<span class=\"command\">darkmodebang</span>   Open Dark Mode Bang extension',\r\n        '<span class=\"command\">volumebang</span>     Open Volume Bang extension',\r\n        '<span class=\"command\">speedbang</span>      Open Speed Bang extension',\r\n        '<span class=\"command\">weloveqr</span>       Open WeLoveQR web app',\r\n        \"<br>\",\r\n    ]\r\n\r\n    const aiResponses = [\r\n        \"I'm an AI assistant created by Tanay. How can I help you today?\",\r\n        \"That's an interesting question! Let me think about that...\",\r\n        \"Based on my training data, I'd suggest exploring the available commands.\",\r\n        \"I'm here to assist you with any questions about Tanay's portfolio.\",\r\n        \"Have you tried the 'secret' command? There might be hidden features!\",\r\n        \"I can help you navigate this terminal. Try 'help' for more options.\",\r\n        \"Fascinating! Let me process that information...\",\r\n        \"I'm constantly learning and evolving, just like the code that created me.\",\r\n    ]\r\n\r\n    useEffect(() => {\r\n        // Initialize terminal with banner (guard against StrictMode double-invoke)\r\n        if (didInitRef.current) return\r\n        didInitRef.current = true\r\n        setTimeout(() => {\r\n            loopLines(banner, \"\", 80)\r\n            if (inputRef.current) {\r\n                inputRef.current.focus()\r\n            }\r\n        }, 100)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (terminalRef.current) {\r\n            terminalRef.current.scrollTop = terminalRef.current.scrollHeight\r\n        }\r\n    }, [terminalHistory])\r\n\r\n    useEffect(() => {\r\n        if (inputRef.current) {\r\n            inputRef.current.focus()\r\n        }\r\n    }, [])\r\n\r\n    const addLine = (text: string, style: string, time: number) => {\r\n        setTimeout(() => {\r\n            const isHtml = /[<][a-zA-Z!/]/.test(text)\r\n            const el = document.createElement(isHtml ? \"p\" : \"pre\")\r\n            if (isHtml) {\r\n                el.innerHTML = text\r\n            } else {\r\n                el.textContent = text\r\n            }\r\n            el.className = style\r\n            if (terminalRef.current) {\r\n                terminalRef.current.appendChild(el)\r\n                terminalRef.current.scrollTop = terminalRef.current.scrollHeight\r\n            }\r\n        }, time)\r\n    }\r\n\r\n    const loopLines = (lines: Array<string | undefined>, style: string, time: number) => {\r\n        lines.forEach((line, index) => {\r\n            if (typeof line !== \"string\") return\r\n            addLine(line, style, index * time)\r\n        })\r\n    }\r\n\r\n    const newTab = (link: string) => {\r\n        setTimeout(() => {\r\n            window.open(link, \"_blank\")\r\n        }, 500)\r\n    }\r\n\r\n    const executeCommand = (command: string) => {\r\n        if (!command.trim()) return\r\n\r\n        setCommandHistory(prev => [...prev, command])\r\n        setHistoryIndex(-1)\r\n\r\n        addLine(\"visitor@tanaycodes.com:~$ \" + command, \"no-animation\", 0)\r\n        commander(command.toLowerCase())\r\n        setCurrentCommand(\"\")\r\n    }\r\n\r\n    const commander = (cmd: string) => {\r\n        switch (cmd) {\r\n            case \"help\":\r\n                loopLines(help, \"color2 margin\", 80)\r\n                break\r\n            case \"whois\":\r\n                loopLines(whois, \"color2 margin\", 80)\r\n                break\r\n            case \"whoami\":\r\n                loopLines(whoami, \"color2 margin\", 80)\r\n                break\r\n            case \"ai\":\r\n                const aiResponse = aiResponses[Math.floor(Math.random() * aiResponses.length)]\r\n                addLine(\"🤖 AI: \" + aiResponse, \"color2\", 80)\r\n                addLine(\"\", \"\", 0)\r\n                break\r\n            case \"sudo\":\r\n                addLine(\"Oh no, you're not admin...\", \"color2\", 80)\r\n                setTimeout(() => {\r\n                    window.open('https://www.youtube.com/watch?v=dQw4w9WgXcQ')\r\n                }, 1000)\r\n                break\r\n            case \"social\":\r\n                loopLines(social, \"color2 margin\", 80)\r\n                break\r\n            case \"secret\":\r\n                setPasswordMode(true)\r\n                addLine(\"Enter password:\", \"color2\", 80)\r\n                break\r\n            case \"projects\":\r\n                loopLines(projects, \"color2 margin\", 80)\r\n                break\r\n            case \"password\":\r\n                addLine(\"<span class=\\\"inherit\\\"> Lol! You're joking, right? You're gonna have to try harder than that!😂</span>\", \"error\", 100)\r\n                break\r\n            case \"history\":\r\n                addLine(\"<br>\", \"\", 0)\r\n                loopLines(commandHistory, \"color2\", 80)\r\n                addLine(\"<br>\", \"command\", 80 * commandHistory.length + 50)\r\n                break\r\n            case \"email\":\r\n                addLine('Opening mailto:<a href=\"mailto:tanay@example.com\">tanay@example.com</a>...', \"color2\", 80)\r\n                newTab('mailto:tanay@example.com')\r\n                break\r\n            case \"sponsor me\":\r\n            case \"sponsor\":\r\n                addLine(\"Opening Buy Me a Coffee...\", \"color2\", 80)\r\n                addLine(\"Thank you for supporting my work! ☕\", \"color2\", 200)\r\n                newTab('https://buymeacoffee.com/tanayvasishtha')\r\n                break\r\n            case \"clear\":\r\n                setTimeout(() => {\r\n                    if (terminalRef.current) {\r\n                        terminalRef.current.innerHTML = ''\r\n                    }\r\n                }, 1)\r\n                break\r\n            case \"banner\":\r\n                loopLines(banner, \"\", 80)\r\n                break\r\n            case \"matrix\":\r\n                addLine(\"🔴 ENTERING MATRIX MODE... 🔴\", \"color2\", 80)\r\n                addLine(\"Wake up, Neo...\", \"color2\", 200)\r\n                addLine(\"The Matrix has you...\", \"color2\", 400)\r\n                addLine(\"Follow the white rabbit.\", \"color2\", 600)\r\n                addLine(\"\", \"\", 800)\r\n                break\r\n            case \"hack\":\r\n                addLine(\"🚨 INITIATING HACKER MODE... 🚨\", \"color2\", 80)\r\n                addLine(\"Accessing mainframe...\", \"color2\", 200)\r\n                addLine(\"Bypassing security protocols...\", \"color2\", 400)\r\n                addLine(\"System compromised! 💀\", \"color2\", 600)\r\n                addLine(\"\", \"\", 800)\r\n                break\r\n            case \"love\":\r\n                addLine(\"💕 LOVE DETECTED! 💕\", \"color2\", 80)\r\n                addLine(\"    ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥\", \"color2\", 200)\r\n                addLine(\"  ♥                                   ♥\", \"color2\", 300)\r\n                addLine(\" ♥                                     ♥\", \"color2\", 400)\r\n                addLine(\"♥           I LOVE CODING! 💻           ♥\", \"color2\", 500)\r\n                addLine(\"♥                                       ♥\", \"color2\", 600)\r\n                addLine(\" ♥                                     ♥\", \"color2\", 700)\r\n                addLine(\"  ♥                                   ♥\", \"color2\", 800)\r\n                addLine(\"    ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥\", \"color2\", 900)\r\n                addLine(\"\", \"\", 1000)\r\n                break\r\n            // Social links\r\n            case \"github\":\r\n                addLine(\"Opening GitHub...\", \"color2\", 0)\r\n                newTab(\"https://github.com/tanayvasishtha\")\r\n                break\r\n            case \"linkedin\":\r\n                addLine(\"Opening LinkedIn...\", \"color2\", 0)\r\n                newTab(\"https://linkedin.com/in/tanayvasishtha\")\r\n                break\r\n            case \"twitter\":\r\n                addLine(\"Opening Twitter...\", \"color2\", 0)\r\n                newTab(\"https://twitter.com/tanayvasishtha\")\r\n                break\r\n            // Project-specific commands\r\n            case \"darkmodebang\":\r\n            case \"darkmode\":\r\n                addLine(\"Opening Dark Mode Bang...\", \"color2\", 0)\r\n                newTab(\"https://chromewebstore.google.com/detail/dark-mode-bang-universal/hnnplkbhhlfopkkhfepdiljdbclfbpjh\")\r\n                break\r\n            case \"volumebang\":\r\n            case \"volume\":\r\n                addLine(\"Opening Volume Bang...\", \"color2\", 0)\r\n                newTab(\"https://chromewebstore.google.com/detail/volume-bang-premium-audio/ancjplaiedoominjbebhdgjipcgfbopl\")\r\n                break\r\n            case \"speedbang\":\r\n            case \"speed\":\r\n                addLine(\"Opening Speed Bang...\", \"color2\", 0)\r\n                newTab(\"https://chromewebstore.google.com/detail/speedbang-multiplatform-v/kaacodjcoaepldmhnpgodhafbcmlkfgo\")\r\n                break\r\n            case \"weloveqr\":\r\n            case \"qr\":\r\n                addLine(\"Opening WeLoveQR...\", \"color2\", 0)\r\n                newTab(\"https://weloveqr.netlify.app\")\r\n                break\r\n            default:\r\n                addLine(\"<span class=\\\"inherit\\\">Command not found. For a list of commands, type <span class=\\\"command\\\">'help'</span>.</span>\", \"error\", 100)\r\n                break\r\n        }\r\n    }\r\n\r\n    const handleKeyDown = (e: React.KeyboardEvent) => {\r\n        if (passwordMode) {\r\n            if (e.key === \"Enter\") {\r\n                if (password === secretPassword) {\r\n                    setIsPasswordCorrect(true)\r\n                    loopLines(secret, \"color2 margin\", 120)\r\n                    setPasswordMode(false)\r\n                    setPassword(\"\")\r\n                } else {\r\n                    addLine(\"Wrong password\", \"error\", 0)\r\n                    setPasswordMode(false)\r\n                    setPassword(\"\")\r\n                }\r\n            } else if (e.key === \"Backspace\") {\r\n                setPassword(prev => prev.slice(0, -1))\r\n            } else if (e.key.length === 1) {\r\n                setPassword(prev => prev + e.key)\r\n            }\r\n        } else {\r\n            if (e.key === \"Enter\") {\r\n                executeCommand(currentCommand)\r\n            } else if (e.key === \"ArrowUp\") {\r\n                e.preventDefault()\r\n                if (historyIndex < commandHistory.length - 1) {\r\n                    const newIndex = historyIndex + 1\r\n                    setHistoryIndex(newIndex)\r\n                    setCurrentCommand(commandHistory[commandHistory.length - 1 - newIndex])\r\n                }\r\n            } else if (e.key === \"ArrowDown\") {\r\n                e.preventDefault()\r\n                if (historyIndex > 0) {\r\n                    const newIndex = historyIndex - 1\r\n                    setHistoryIndex(newIndex)\r\n                    setCurrentCommand(commandHistory[commandHistory.length - 1 - newIndex])\r\n                } else if (historyIndex === 0) {\r\n                    setHistoryIndex(-1)\r\n                    setCurrentCommand(\"\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (!passwordMode) {\r\n            setCurrentCommand(e.target.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"h-full terminal-container p-4 flex flex-col relative\">\r\n            <div className=\"flex-1 flex flex-col min-h-0 overflow-hidden\">\r\n                <div ref={terminalRef} className=\"flex-1 overflow-y-auto overflow-x-hidden space-y-1 pr-2\">\r\n                    {/* Terminal content will be dynamically added here */}\r\n                </div>\r\n            </div>\r\n            <div className=\"flex items-center relative flex-shrink-0 mt-4\" onClick={() => inputRef.current?.focus()}>\r\n                <span className=\"text-green-400 mr-2\">visitor@tanaycodes.com:~$</span>\r\n                <div className=\"flex-1 relative\">\r\n                    <input\r\n                        ref={inputRef}\r\n                        type={passwordMode ? \"password\" : \"text\"}\r\n                        value={passwordMode ? password : currentCommand}\r\n                        onChange={handleInputChange}\r\n                        onKeyDown={handleKeyDown}\r\n                        className=\"w-full bg-transparent text-green-400 outline-none caret-green-400\"\r\n                        placeholder=\"\"\r\n                        autoFocus\r\n                    />\r\n                    {passwordMode && (\r\n                        <div className=\"absolute right-0 top-0 text-green-400\">\r\n                            {password.split('').map(() => '*').join('')}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TerminalComponent",
      "type": "registry:component",
      "target": "components\\TerminalComponent.tsx"
    },
    {
      "path": "components\\theme-provider.tsx",
      "content": "'use client'\r\n\r\nimport * as React from 'react'\r\nimport {\r\n  ThemeProvider as NextThemesProvider,\r\n  type ThemeProviderProps,\r\n} from 'next-themes'\r\n\r\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\r\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>\r\n}\r\n",
      "type": "registry:component",
      "target": "components\\theme-provider.tsx"
    },
    {
      "path": "components\\ui\\toast.tsx",
      "content": "'use client'\r\n\r\nimport * as React from 'react'\r\nimport * as ToastPrimitives from '@radix-ui/react-toast'\r\nimport { cva, type VariantProps } from 'class-variance-authority'\r\nimport { X } from 'lucide-react'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nconst ToastProvider = ToastPrimitives.Provider\r\n\r\nconst ToastViewport = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Viewport\r\n    ref={ref}\r\n    className={cn(\r\n      'fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]',\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\r\n\r\nconst toastVariants = cva(\r\n  'group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full',\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: 'border bg-background text-foreground',\r\n        destructive:\r\n          'destructive group border-destructive bg-destructive text-destructive-foreground',\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: 'default',\r\n    },\r\n  },\r\n)\r\n\r\nconst Toast = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\r\n    VariantProps<typeof toastVariants>\r\n>(({ className, variant, ...props }, ref) => {\r\n  return (\r\n    <ToastPrimitives.Root\r\n      ref={ref}\r\n      className={cn(toastVariants({ variant }), className)}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nToast.displayName = ToastPrimitives.Root.displayName\r\n\r\nconst ToastAction = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Action>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Action\r\n    ref={ref}\r\n    className={cn(\r\n      'inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive',\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nToastAction.displayName = ToastPrimitives.Action.displayName\r\n\r\nconst ToastClose = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Close>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Close\r\n    ref={ref}\r\n    className={cn(\r\n      'absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600',\r\n      className,\r\n    )}\r\n    toast-close=\"\"\r\n    {...props}\r\n  >\r\n    <X className=\"h-4 w-4\" />\r\n  </ToastPrimitives.Close>\r\n))\r\nToastClose.displayName = ToastPrimitives.Close.displayName\r\n\r\nconst ToastTitle = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Title>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Title\r\n    ref={ref}\r\n    className={cn('text-sm font-semibold', className)}\r\n    {...props}\r\n  />\r\n))\r\nToastTitle.displayName = ToastPrimitives.Title.displayName\r\n\r\nconst ToastDescription = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Description>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Description\r\n    ref={ref}\r\n    className={cn('text-sm opacity-90', className)}\r\n    {...props}\r\n  />\r\n))\r\nToastDescription.displayName = ToastPrimitives.Description.displayName\r\n\r\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\r\n\r\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\r\n\r\nexport {\r\n  type ToastProps,\r\n  type ToastActionElement,\r\n  ToastProvider,\r\n  ToastViewport,\r\n  Toast,\r\n  ToastTitle,\r\n  ToastDescription,\r\n  ToastClose,\r\n  ToastAction,\r\n}\r\n",
      "type": "registry:component",
      "target": "components\\ui\\toast.tsx"
    },
    {
      "path": "components\\ui\\toaster.tsx",
      "content": "'use client'\r\n\r\nimport { useToast } from '@/hooks/use-toast'\r\nimport {\r\n  Toast,\r\n  ToastClose,\r\n  ToastDescription,\r\n  ToastProvider,\r\n  ToastTitle,\r\n  ToastViewport,\r\n} from '@/components/ui/toast'\r\n\r\nexport function Toaster() {\r\n  const { toasts } = useToast()\r\n\r\n  return (\r\n    <ToastProvider>\r\n      {toasts.map(function ({ id, title, description, action, ...props }) {\r\n        return (\r\n          <Toast key={id} {...props}>\r\n            <div className=\"grid gap-1\">\r\n              {title && <ToastTitle>{title}</ToastTitle>}\r\n              {description && (\r\n                <ToastDescription>{description}</ToastDescription>\r\n              )}\r\n            </div>\r\n            {action}\r\n            <ToastClose />\r\n          </Toast>\r\n        )\r\n      })}\r\n      <ToastViewport />\r\n    </ToastProvider>\r\n  )\r\n}\r\n",
      "type": "registry:component",
      "target": "components\\ui\\toaster.tsx"
    },
    {
      "path": "components\\ui\\use-mobile.tsx",
      "content": "import * as React from 'react'\r\n\r\nconst MOBILE_BREAKPOINT = 768\r\n\r\nexport function useIsMobile() {\r\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\r\n\r\n  React.useEffect(() => {\r\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\r\n    const onChange = () => {\r\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\r\n    }\r\n    mql.addEventListener('change', onChange)\r\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\r\n    return () => mql.removeEventListener('change', onChange)\r\n  }, [])\r\n\r\n  return !!isMobile\r\n}\r\n",
      "type": "registry:component",
      "target": "components\\ui\\use-mobile.tsx"
    },
    {
      "path": "components\\ui\\use-toast.ts",
      "content": "'use client'\r\n\r\n// Inspired by react-hot-toast library\r\nimport * as React from 'react'\r\n\r\nimport type { ToastActionElement, ToastProps } from '@/components/ui/toast'\r\n\r\nconst TOAST_LIMIT = 1\r\nconst TOAST_REMOVE_DELAY = 1000000\r\n\r\ntype ToasterToast = ToastProps & {\r\n  id: string\r\n  title?: React.ReactNode\r\n  description?: React.ReactNode\r\n  action?: ToastActionElement\r\n}\r\n\r\nconst actionTypes = {\r\n  ADD_TOAST: 'ADD_TOAST',\r\n  UPDATE_TOAST: 'UPDATE_TOAST',\r\n  DISMISS_TOAST: 'DISMISS_TOAST',\r\n  REMOVE_TOAST: 'REMOVE_TOAST',\r\n} as const\r\n\r\nlet count = 0\r\n\r\nfunction genId() {\r\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\r\n  return count.toString()\r\n}\r\n\r\ntype ActionType = typeof actionTypes\r\n\r\ntype Action =\r\n  | {\r\n      type: ActionType['ADD_TOAST']\r\n      toast: ToasterToast\r\n    }\r\n  | {\r\n      type: ActionType['UPDATE_TOAST']\r\n      toast: Partial<ToasterToast>\r\n    }\r\n  | {\r\n      type: ActionType['DISMISS_TOAST']\r\n      toastId?: ToasterToast['id']\r\n    }\r\n  | {\r\n      type: ActionType['REMOVE_TOAST']\r\n      toastId?: ToasterToast['id']\r\n    }\r\n\r\ninterface State {\r\n  toasts: ToasterToast[]\r\n}\r\n\r\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\r\n\r\nconst addToRemoveQueue = (toastId: string) => {\r\n  if (toastTimeouts.has(toastId)) {\r\n    return\r\n  }\r\n\r\n  const timeout = setTimeout(() => {\r\n    toastTimeouts.delete(toastId)\r\n    dispatch({\r\n      type: 'REMOVE_TOAST',\r\n      toastId: toastId,\r\n    })\r\n  }, TOAST_REMOVE_DELAY)\r\n\r\n  toastTimeouts.set(toastId, timeout)\r\n}\r\n\r\nexport const reducer = (state: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case 'ADD_TOAST':\r\n      return {\r\n        ...state,\r\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\r\n      }\r\n\r\n    case 'UPDATE_TOAST':\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === action.toast.id ? { ...t, ...action.toast } : t,\r\n        ),\r\n      }\r\n\r\n    case 'DISMISS_TOAST': {\r\n      const { toastId } = action\r\n\r\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\r\n      // but I'll keep it here for simplicity\r\n      if (toastId) {\r\n        addToRemoveQueue(toastId)\r\n      } else {\r\n        state.toasts.forEach((toast) => {\r\n          addToRemoveQueue(toast.id)\r\n        })\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === toastId || toastId === undefined\r\n            ? {\r\n                ...t,\r\n                open: false,\r\n              }\r\n            : t,\r\n        ),\r\n      }\r\n    }\r\n    case 'REMOVE_TOAST':\r\n      if (action.toastId === undefined) {\r\n        return {\r\n          ...state,\r\n          toasts: [],\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\r\n      }\r\n  }\r\n}\r\n\r\nconst listeners: Array<(state: State) => void> = []\r\n\r\nlet memoryState: State = { toasts: [] }\r\n\r\nfunction dispatch(action: Action) {\r\n  memoryState = reducer(memoryState, action)\r\n  listeners.forEach((listener) => {\r\n    listener(memoryState)\r\n  })\r\n}\r\n\r\ntype Toast = Omit<ToasterToast, 'id'>\r\n\r\nfunction toast({ ...props }: Toast) {\r\n  const id = genId()\r\n\r\n  const update = (props: ToasterToast) =>\r\n    dispatch({\r\n      type: 'UPDATE_TOAST',\r\n      toast: { ...props, id },\r\n    })\r\n  const dismiss = () => dispatch({ type: 'DISMISS_TOAST', toastId: id })\r\n\r\n  dispatch({\r\n    type: 'ADD_TOAST',\r\n    toast: {\r\n      ...props,\r\n      id,\r\n      open: true,\r\n      onOpenChange: (open) => {\r\n        if (!open) dismiss()\r\n      },\r\n    },\r\n  })\r\n\r\n  return {\r\n    id: id,\r\n    dismiss,\r\n    update,\r\n  }\r\n}\r\n\r\nfunction useToast() {\r\n  const [state, setState] = React.useState<State>(memoryState)\r\n\r\n  React.useEffect(() => {\r\n    listeners.push(setState)\r\n    return () => {\r\n      const index = listeners.indexOf(setState)\r\n      if (index > -1) {\r\n        listeners.splice(index, 1)\r\n      }\r\n    }\r\n  }, [state])\r\n\r\n  return {\r\n    ...state,\r\n    toast,\r\n    dismiss: (toastId?: string) => dispatch({ type: 'DISMISS_TOAST', toastId }),\r\n  }\r\n}\r\n\r\nexport { useToast, toast }\r\n",
      "type": "registry:component",
      "target": "components\\ui\\use-toast.ts"
    },
    {
      "path": "hooks\\use-mobile.ts",
      "content": "import * as React from 'react'\r\n\r\nconst MOBILE_BREAKPOINT = 768\r\n\r\nexport function useIsMobile() {\r\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\r\n\r\n  React.useEffect(() => {\r\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\r\n    const onChange = () => {\r\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\r\n    }\r\n    mql.addEventListener('change', onChange)\r\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\r\n    return () => mql.removeEventListener('change', onChange)\r\n  }, [])\r\n\r\n  return !!isMobile\r\n}\r\n",
      "type": "registry:lib",
      "target": "hooks\\use-mobile.ts"
    },
    {
      "path": "hooks\\use-toast.ts",
      "content": "'use client'\r\n\r\n// Inspired by react-hot-toast library\r\nimport * as React from 'react'\r\n\r\nimport type { ToastActionElement, ToastProps } from '@/components/ui/toast'\r\n\r\nconst TOAST_LIMIT = 1\r\nconst TOAST_REMOVE_DELAY = 1000000\r\n\r\ntype ToasterToast = ToastProps & {\r\n  id: string\r\n  title?: React.ReactNode\r\n  description?: React.ReactNode\r\n  action?: ToastActionElement\r\n}\r\n\r\nconst actionTypes = {\r\n  ADD_TOAST: 'ADD_TOAST',\r\n  UPDATE_TOAST: 'UPDATE_TOAST',\r\n  DISMISS_TOAST: 'DISMISS_TOAST',\r\n  REMOVE_TOAST: 'REMOVE_TOAST',\r\n} as const\r\n\r\nlet count = 0\r\n\r\nfunction genId() {\r\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\r\n  return count.toString()\r\n}\r\n\r\ntype ActionType = typeof actionTypes\r\n\r\ntype Action =\r\n  | {\r\n      type: ActionType['ADD_TOAST']\r\n      toast: ToasterToast\r\n    }\r\n  | {\r\n      type: ActionType['UPDATE_TOAST']\r\n      toast: Partial<ToasterToast>\r\n    }\r\n  | {\r\n      type: ActionType['DISMISS_TOAST']\r\n      toastId?: ToasterToast['id']\r\n    }\r\n  | {\r\n      type: ActionType['REMOVE_TOAST']\r\n      toastId?: ToasterToast['id']\r\n    }\r\n\r\ninterface State {\r\n  toasts: ToasterToast[]\r\n}\r\n\r\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\r\n\r\nconst addToRemoveQueue = (toastId: string) => {\r\n  if (toastTimeouts.has(toastId)) {\r\n    return\r\n  }\r\n\r\n  const timeout = setTimeout(() => {\r\n    toastTimeouts.delete(toastId)\r\n    dispatch({\r\n      type: 'REMOVE_TOAST',\r\n      toastId: toastId,\r\n    })\r\n  }, TOAST_REMOVE_DELAY)\r\n\r\n  toastTimeouts.set(toastId, timeout)\r\n}\r\n\r\nexport const reducer = (state: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case 'ADD_TOAST':\r\n      return {\r\n        ...state,\r\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\r\n      }\r\n\r\n    case 'UPDATE_TOAST':\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === action.toast.id ? { ...t, ...action.toast } : t,\r\n        ),\r\n      }\r\n\r\n    case 'DISMISS_TOAST': {\r\n      const { toastId } = action\r\n\r\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\r\n      // but I'll keep it here for simplicity\r\n      if (toastId) {\r\n        addToRemoveQueue(toastId)\r\n      } else {\r\n        state.toasts.forEach((toast) => {\r\n          addToRemoveQueue(toast.id)\r\n        })\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === toastId || toastId === undefined\r\n            ? {\r\n                ...t,\r\n                open: false,\r\n              }\r\n            : t,\r\n        ),\r\n      }\r\n    }\r\n    case 'REMOVE_TOAST':\r\n      if (action.toastId === undefined) {\r\n        return {\r\n          ...state,\r\n          toasts: [],\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\r\n      }\r\n  }\r\n}\r\n\r\nconst listeners: Array<(state: State) => void> = []\r\n\r\nlet memoryState: State = { toasts: [] }\r\n\r\nfunction dispatch(action: Action) {\r\n  memoryState = reducer(memoryState, action)\r\n  listeners.forEach((listener) => {\r\n    listener(memoryState)\r\n  })\r\n}\r\n\r\ntype Toast = Omit<ToasterToast, 'id'>\r\n\r\nfunction toast({ ...props }: Toast) {\r\n  const id = genId()\r\n\r\n  const update = (props: ToasterToast) =>\r\n    dispatch({\r\n      type: 'UPDATE_TOAST',\r\n      toast: { ...props, id },\r\n    })\r\n  const dismiss = () => dispatch({ type: 'DISMISS_TOAST', toastId: id })\r\n\r\n  dispatch({\r\n    type: 'ADD_TOAST',\r\n    toast: {\r\n      ...props,\r\n      id,\r\n      open: true,\r\n      onOpenChange: (open) => {\r\n        if (!open) dismiss()\r\n      },\r\n    },\r\n  })\r\n\r\n  return {\r\n    id: id,\r\n    dismiss,\r\n    update,\r\n  }\r\n}\r\n\r\nfunction useToast() {\r\n  const [state, setState] = React.useState<State>(memoryState)\r\n\r\n  React.useEffect(() => {\r\n    listeners.push(setState)\r\n    return () => {\r\n      const index = listeners.indexOf(setState)\r\n      if (index > -1) {\r\n        listeners.splice(index, 1)\r\n      }\r\n    }\r\n  }, [state])\r\n\r\n  return {\r\n    ...state,\r\n    toast,\r\n    dismiss: (toastId?: string) => dispatch({ type: 'DISMISS_TOAST', toastId }),\r\n  }\r\n}\r\n\r\nexport { useToast, toast }\r\n",
      "type": "registry:lib",
      "target": "hooks\\use-toast.ts"
    },
    {
      "path": "lib\\utils.ts",
      "content": "import { clsx, type ClassValue } from 'clsx'\r\nimport { twMerge } from 'tailwind-merge'\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n",
      "type": "registry:lib",
      "target": "lib\\utils.ts"
    },
    {
      "path": "public\\placeholder.svg",
      "content": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1200\" height=\"1200\" fill=\"none\"><rect width=\"1200\" height=\"1200\" fill=\"#EAEAEA\" rx=\"3\"/><g opacity=\".5\"><g opacity=\".5\"><path fill=\"#FAFAFA\" d=\"M600.709 736.5c-75.454 0-136.621-61.167-136.621-136.62 0-75.454 61.167-136.621 136.621-136.621 75.453 0 136.62 61.167 136.62 136.621 0 75.453-61.167 136.62-136.62 136.62Z\"/><path stroke=\"#C9C9C9\" stroke-width=\"2.418\" d=\"M600.709 736.5c-75.454 0-136.621-61.167-136.621-136.62 0-75.454 61.167-136.621 136.621-136.621 75.453 0 136.62 61.167 136.62 136.621 0 75.453-61.167 136.62-136.62 136.62Z\"/></g><path stroke=\"url(#a)\" stroke-width=\"2.418\" d=\"M0-1.209h553.581\" transform=\"scale(1 -1) rotate(45 1163.11 91.165)\"/><path stroke=\"url(#b)\" stroke-width=\"2.418\" d=\"M404.846 598.671h391.726\"/><path stroke=\"url(#c)\" stroke-width=\"2.418\" d=\"M599.5 795.742V404.017\"/><path stroke=\"url(#d)\" stroke-width=\"2.418\" d=\"m795.717 796.597-391.441-391.44\"/><path fill=\"#fff\" d=\"M600.709 656.704c-31.384 0-56.825-25.441-56.825-56.824 0-31.384 25.441-56.825 56.825-56.825 31.383 0 56.824 25.441 56.824 56.825 0 31.383-25.441 56.824-56.824 56.824Z\"/><g clip-path=\"url(#e)\"><path fill=\"#666\" fill-rule=\"evenodd\" d=\"M616.426 586.58h-31.434v16.176l3.553-3.554.531-.531h9.068l.074-.074 8.463-8.463h2.565l7.18 7.181V586.58Zm-15.715 14.654 3.698 3.699 1.283 1.282-2.565 2.565-1.282-1.283-5.2-5.199h-6.066l-5.514 5.514-.073.073v2.876a2.418 2.418 0 0 0 2.418 2.418h26.598a2.418 2.418 0 0 0 2.418-2.418v-8.317l-8.463-8.463-7.181 7.181-.071.072Zm-19.347 5.442v4.085a6.045 6.045 0 0 0 6.046 6.045h26.598a6.044 6.044 0 0 0 6.045-6.045v-7.108l1.356-1.355-1.282-1.283-.074-.073v-17.989h-38.689v23.43l-.146.146.146.147Z\" clip-rule=\"evenodd\"/></g><path stroke=\"#C9C9C9\" stroke-width=\"2.418\" d=\"M600.709 656.704c-31.384 0-56.825-25.441-56.825-56.824 0-31.384 25.441-56.825 56.825-56.825 31.383 0 56.824 25.441 56.824 56.825 0 31.383-25.441 56.824-56.824 56.824Z\"/></g><defs><linearGradient id=\"a\" x1=\"554.061\" x2=\"-.48\" y1=\".083\" y2=\".087\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#C9C9C9\" stop-opacity=\"0\"/><stop offset=\".208\" stop-color=\"#C9C9C9\"/><stop offset=\".792\" stop-color=\"#C9C9C9\"/><stop offset=\"1\" stop-color=\"#C9C9C9\" stop-opacity=\"0\"/></linearGradient><linearGradient id=\"b\" x1=\"796.912\" x2=\"404.507\" y1=\"599.963\" y2=\"599.965\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#C9C9C9\" stop-opacity=\"0\"/><stop offset=\".208\" stop-color=\"#C9C9C9\"/><stop offset=\".792\" stop-color=\"#C9C9C9\"/><stop offset=\"1\" stop-color=\"#C9C9C9\" stop-opacity=\"0\"/></linearGradient><linearGradient id=\"c\" x1=\"600.792\" x2=\"600.794\" y1=\"403.677\" y2=\"796.082\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#C9C9C9\" stop-opacity=\"0\"/><stop offset=\".208\" stop-color=\"#C9C9C9\"/><stop offset=\".792\" stop-color=\"#C9C9C9\"/><stop offset=\"1\" stop-color=\"#C9C9C9\" stop-opacity=\"0\"/></linearGradient><linearGradient id=\"d\" x1=\"404.85\" x2=\"796.972\" y1=\"403.903\" y2=\"796.02\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#C9C9C9\" stop-opacity=\"0\"/><stop offset=\".208\" stop-color=\"#C9C9C9\"/><stop offset=\".792\" stop-color=\"#C9C9C9\"/><stop offset=\"1\" stop-color=\"#C9C9C9\" stop-opacity=\"0\"/></linearGradient><clipPath id=\"e\"><path fill=\"#fff\" d=\"M581.364 580.535h38.689v38.689h-38.689z\"/></clipPath></defs></svg>",
      "type": "registry:file",
      "target": "public\\placeholder.svg"
    },
    {
      "path": "public\\sw.js",
      "content": "// Service Worker for Ubuntu Portfolio PWA\r\nconst CACHE_NAME = 'ubuntu-portfolio-v1';\r\nconst urlsToCache = [\r\n  '/',\r\n  '/ubuntu-logo.png',\r\n  '/ubuntu-logo-circle.png',\r\n];\r\n\r\n// Install event - cache resources\r\nself.addEventListener('install', (event) => {\r\n  event.waitUntil(\r\n    caches.open(CACHE_NAME).then((cache) => {\r\n      console.log('Opened cache');\r\n      return cache.addAll(urlsToCache);\r\n    })\r\n  );\r\n  // Force the waiting service worker to become the active service worker\r\n  self.skipWaiting();\r\n});\r\n\r\n// Fetch event - serve from cache, fallback to network\r\nself.addEventListener('fetch', (event) => {\r\n  event.respondWith(\r\n    caches.match(event.request).then((response) => {\r\n      // Cache hit - return response\r\n      if (response) {\r\n        return response;\r\n      }\r\n      return fetch(event.request).then((response) => {\r\n        // Check if we received a valid response\r\n        if (!response || response.status !== 200 || response.type !== 'basic') {\r\n          return response;\r\n        }\r\n\r\n        // Clone the response\r\n        const responseToCache = response.clone();\r\n\r\n        caches.open(CACHE_NAME).then((cache) => {\r\n          cache.put(event.request, responseToCache);\r\n        });\r\n\r\n        return response;\r\n      });\r\n    })\r\n  );\r\n});\r\n\r\n// Activate event - clean up old caches\r\nself.addEventListener('activate', (event) => {\r\n  const cacheWhitelist = [CACHE_NAME];\r\n  event.waitUntil(\r\n    caches.keys().then((cacheNames) => {\r\n      return Promise.all(\r\n        cacheNames.map((cacheName) => {\r\n          if (cacheWhitelist.indexOf(cacheName) === -1) {\r\n            return caches.delete(cacheName);\r\n          }\r\n        })\r\n      );\r\n    })\r\n  );\r\n  // Claim clients immediately\r\n  return self.clients.claim();\r\n});\r\n\r\n// Push notification event\r\nself.addEventListener('push', function (event) {\r\n  if (event.data) {\r\n    const data = event.data.json();\r\n    const options = {\r\n      body: data.body,\r\n      icon: data.icon || '/icon-192x192.png',\r\n      badge: '/icon-192x192.png',\r\n      vibrate: [100, 50, 100],\r\n      data: {\r\n        dateOfArrival: Date.now(),\r\n        primaryKey: '2',\r\n      },\r\n    };\r\n    event.waitUntil(self.registration.showNotification(data.title, options));\r\n  }\r\n});\r\n\r\n// Notification click event\r\nself.addEventListener('notificationclick', function (event) {\r\n  console.log('Notification click received.');\r\n  event.notification.close();\r\n  event.waitUntil(clients.openWindow('/'));\r\n});\r\n",
      "type": "registry:file",
      "target": "public\\sw.js"
    },
    {
      "path": "styles\\globals.css",
      "content": "@import 'tailwindcss';\r\n@import 'tw-animate-css';\r\n\r\n@custom-variant dark (&:is(.dark *));\r\n\r\n:root {\r\n  --background: oklch(1 0 0);\r\n  --foreground: oklch(0.145 0 0);\r\n  --card: oklch(1 0 0);\r\n  --card-foreground: oklch(0.145 0 0);\r\n  --popover: oklch(1 0 0);\r\n  --popover-foreground: oklch(0.145 0 0);\r\n  --primary: oklch(0.205 0 0);\r\n  --primary-foreground: oklch(0.985 0 0);\r\n  --secondary: oklch(0.97 0 0);\r\n  --secondary-foreground: oklch(0.205 0 0);\r\n  --muted: oklch(0.97 0 0);\r\n  --muted-foreground: oklch(0.556 0 0);\r\n  --accent: oklch(0.97 0 0);\r\n  --accent-foreground: oklch(0.205 0 0);\r\n  --destructive: oklch(0.577 0.245 27.325);\r\n  --destructive-foreground: oklch(0.577 0.245 27.325);\r\n  --border: oklch(0.922 0 0);\r\n  --input: oklch(0.922 0 0);\r\n  --ring: oklch(0.708 0 0);\r\n  --chart-1: oklch(0.646 0.222 41.116);\r\n  --chart-2: oklch(0.6 0.118 184.704);\r\n  --chart-3: oklch(0.398 0.07 227.392);\r\n  --chart-4: oklch(0.828 0.189 84.429);\r\n  --chart-5: oklch(0.769 0.188 70.08);\r\n  --radius: 0.625rem;\r\n  --sidebar: oklch(0.985 0 0);\r\n  --sidebar-foreground: oklch(0.145 0 0);\r\n  --sidebar-primary: oklch(0.205 0 0);\r\n  --sidebar-primary-foreground: oklch(0.985 0 0);\r\n  --sidebar-accent: oklch(0.97 0 0);\r\n  --sidebar-accent-foreground: oklch(0.205 0 0);\r\n  --sidebar-border: oklch(0.922 0 0);\r\n  --sidebar-ring: oklch(0.708 0 0);\r\n}\r\n\r\n.dark {\r\n  --background: oklch(0.145 0 0);\r\n  --foreground: oklch(0.985 0 0);\r\n  --card: oklch(0.145 0 0);\r\n  --card-foreground: oklch(0.985 0 0);\r\n  --popover: oklch(0.145 0 0);\r\n  --popover-foreground: oklch(0.985 0 0);\r\n  --primary: oklch(0.985 0 0);\r\n  --primary-foreground: oklch(0.205 0 0);\r\n  --secondary: oklch(0.269 0 0);\r\n  --secondary-foreground: oklch(0.985 0 0);\r\n  --muted: oklch(0.269 0 0);\r\n  --muted-foreground: oklch(0.708 0 0);\r\n  --accent: oklch(0.269 0 0);\r\n  --accent-foreground: oklch(0.985 0 0);\r\n  --destructive: oklch(0.396 0.141 25.723);\r\n  --destructive-foreground: oklch(0.637 0.237 25.331);\r\n  --border: oklch(0.269 0 0);\r\n  --input: oklch(0.269 0 0);\r\n  --ring: oklch(0.439 0 0);\r\n  --chart-1: oklch(0.488 0.243 264.376);\r\n  --chart-2: oklch(0.696 0.17 162.48);\r\n  --chart-3: oklch(0.769 0.188 70.08);\r\n  --chart-4: oklch(0.627 0.265 303.9);\r\n  --chart-5: oklch(0.645 0.246 16.439);\r\n  --sidebar: oklch(0.205 0 0);\r\n  --sidebar-foreground: oklch(0.985 0 0);\r\n  --sidebar-primary: oklch(0.488 0.243 264.376);\r\n  --sidebar-primary-foreground: oklch(0.985 0 0);\r\n  --sidebar-accent: oklch(0.269 0 0);\r\n  --sidebar-accent-foreground: oklch(0.985 0 0);\r\n  --sidebar-border: oklch(0.269 0 0);\r\n  --sidebar-ring: oklch(0.439 0 0);\r\n}\r\n\r\n@theme inline {\r\n  --font-sans: var(--font-geist-sans);\r\n  --font-mono: var(--font-geist-mono);\r\n  --color-background: var(--background);\r\n  --color-foreground: var(--foreground);\r\n  --color-card: var(--card);\r\n  --color-card-foreground: var(--card-foreground);\r\n  --color-popover: var(--popover);\r\n  --color-popover-foreground: var(--popover-foreground);\r\n  --color-primary: var(--primary);\r\n  --color-primary-foreground: var(--primary-foreground);\r\n  --color-secondary: var(--secondary);\r\n  --color-secondary-foreground: var(--secondary-foreground);\r\n  --color-muted: var(--muted);\r\n  --color-muted-foreground: var(--muted-foreground);\r\n  --color-accent: var(--accent);\r\n  --color-accent-foreground: var(--accent-foreground);\r\n  --color-destructive: var(--destructive);\r\n  --color-destructive-foreground: var(--destructive-foreground);\r\n  --color-border: var(--border);\r\n  --color-input: var(--input);\r\n  --color-ring: var(--ring);\r\n  --color-chart-1: var(--chart-1);\r\n  --color-chart-2: var(--chart-2);\r\n  --color-chart-3: var(--chart-3);\r\n  --color-chart-4: var(--chart-4);\r\n  --color-chart-5: var(--chart-5);\r\n  --radius-sm: calc(var(--radius) - 4px);\r\n  --radius-md: calc(var(--radius) - 2px);\r\n  --radius-lg: var(--radius);\r\n  --radius-xl: calc(var(--radius) + 4px);\r\n  --color-sidebar: var(--sidebar);\r\n  --color-sidebar-foreground: var(--sidebar-foreground);\r\n  --color-sidebar-primary: var(--sidebar-primary);\r\n  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);\r\n  --color-sidebar-accent: var(--sidebar-accent);\r\n  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);\r\n  --color-sidebar-border: var(--sidebar-border);\r\n  --color-sidebar-ring: var(--sidebar-ring);\r\n}\r\n\r\n@layer base {\r\n  * {\r\n    @apply border-border outline-ring/50;\r\n  }\r\n  body {\r\n    @apply bg-background text-foreground;\r\n  }\r\n}\r\n",
      "type": "registry:style",
      "target": "styles\\globals.css"
    }
  ],
  "author": "Prathamesh Chougale",
  "title": "Complete Project"
}
